[{"category": "technology", "description": "Tracking temperature and humidity is important if you have a greenhouse, or have future plans to upgrade your greenhouse into a mini smart-farm. For my first Instructable I will demonstrate how to create a prototype:Connect a DHT11 temperature and humidity sensor to an Arduino Mega 2560    Program the Arduino in C to read the sensor data     Display temperature and humidity data on an LCD connected to the Arduino  Instruct the Arduino to send the sensor data to a Raspberry Pi 3 Model B+  Write code in Python to display the sensor dataWhy use an RPi and Arduino together? The Arduino and RPi connection can allow for great capabilities if you need I/O which the Arduino excels at and network communication/multithreading/visuals which the RPi is much better at.In other words, we are going to use the Arduino for control intensive tasks and use the RPi for compute intensive tasks. Ruggedized versions of Arduinos are available at Rugged-Circuits", "title": "Temperature & Humidity From Arduino to Raspberry Pi", "url": "https://www.instructables.com/id/Sending-Temperature-Humidity-Data-From-Arduino-to-/", "section": "technology", "steps": [{"step": 1, "steps_text": "Arduino starter kits are readily available and allow you to experiment with different types of sensors and gadgets. Purchasing a  starter kit works out cheaper instead of ordering various parts separately. I have supplied some affiliate links below pointing to Banggood and Amazon US.Arduino Starter Kit (Banggood)Arduino Starter Kit (Amazon US)Element14 RPi 3 B+ Motherboard (Amazon US)Raspberry Pi 3 B+ Case (Amazon US)32GB Micro SD card (Amazon US).", "step_imgs": [], "step_title": "Step 1: Getting Arduino & RPi Hardware"}, {"step": 2, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FJN/AD9G/JRKYR8QT/FJNAD9GJRKYR8QT.LARGE.jpg"], "step_title": "Step 2: Connect the DHT11 & LCD to the Arduino"}, {"step": 3, "steps_text": "#arduino-dht11-lcd2004#Author: Vasoo Veerapen\n#https://www.instructables.com/member/VasooV/\n#Reads data from a DHT11 connected to an Arduino, displays on an LCD2004 and sends data over serial to Raspberry Pi#include <dht.h>\n#include <LiquidCrystal_I2C.h>//LCD display is defined as device number 0x27 on the I2C bus\nLiquidCrystal_I2C lcd(0x27, 20, 4);//DHT11 is connected to pin 8\ndht DHT;\n#define sensorPin 8//Raspberry Pi is connected to Serial 0\n#define serialPi Serialvoid setup() {\n  lcd.begin(20, 4); // Initializes the interface to the LCD screen, and specifies the dimensions (width and height) of the display\n  lcd.init();\n  lcd.backlight();\n  serialPi.begin(9600);  //Arduino to serial monitor\n}void loop() {  //Read sensor data\n  int sensorData = DHT.read11(sensorPin);\n  float temperature = DHT.temperature;\n  float humidity = DHT.humidity;  //Print temperature\n  lcd.setCursor(0, 0);\n  lcd.print(\"Temperature \");\n  lcd.print(temperature);\n  lcd.print(\" C\");  //Print humidity\n  lcd.setCursor(0, 1);\n  lcd.print(\"Humidity    \");\n  lcd.print(humidity);\n  lcd.print(\" %\");  //Send temperature and humidity data to Raspberry Pi\n  serialPi.print(\"<\");\n  serialPi.print(temperature);\n  serialPi.print(\",\");\n  serialPi.print(humidity);\n  serialPi.println(\">\");  //Wait for 10 seconds\n  delay(10000);\n}", "step_imgs": [], "step_title": "Step 3: Program the Arduino"}, {"step": 4, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FS7/X2Z3/JRKYXUL4/FS7X2Z3JRKYXUL4.LARGE.jpg"], "step_title": "Step 4: The Working Arduino, LCD & DHT11 Setup"}, {"step": 5, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FXC/OFW6/JRKYXUQB/FXCOFW6JRKYXUQB.LARGE.jpg"], "step_title": "Step 5: Connect the Raspberry Pi to the Arduino"}, {"step": 6, "steps_text": "#rpi-arduino-dht11#Raspberry Pi reads temperature and humidity sensor data from Arduinoimport serial, string, time#In this example /dev/ttyUSB0 is used\n#This may change in your case to /dev/ttyUSB1, /dev/ttyUSB2, etc.\nser = serial.Serial('/dev/ttyUSB0', 9600)#The following block of code works like this:\n#If serial data is present, read the line, decode the UTF8 data,\n#...remove the trailing end of line characters\n#...split the data into temperature and humidity\n#...remove the starting and ending pointers (< >)\n#...print the output\nwhile True:\n        if ser.in_waiting > 0:\n            rawserial = ser.readline()\n            cookedserial = rawserial.decode('utf-8').strip('\\r\\n')\n            datasplit = cookedserial.split(',')\n            temperature = datasplit[0].strip('<')\n            humidity = datasplit[1].strip('>')\n            print(temperature)\n            print(humidity)", "step_imgs": [], "step_title": "Step 6: RPi Python Code to Read the USB Port Serial Data"}], "channel": "Electronics"}, {"category": "technology", "description": "HTS221 is an ultra compact capacitive digital sensor for relative humidity and temperature. It includes a sensing element and a mixed signal application specific integrated circuit(ASIC) to provide the measurement information through digital serial interfaces. Integrated with so many features this is one of the most appropriate sensors for critical humidity and temperature measurements.In this tutorial the interfacing of the HTS221 sensor module with raspberry pi is demonstrated and its programming using python language has also been illustrated. To read the humidity and temperature values, we have used raspberry pi with an I2C adapter.This I2C adapter makes the connection to the sensor module easy and more reliable.", "title": "Humidity and Temperature Measurement Using HTS221 and Raspberry Pi", "url": "https://www.instructables.com/id/Humidity-and-Temperature-Measurement-Using-HTS221--2/", "section": "technology", "steps": [{"step": 1, "steps_text": "The materials that we need for accomplishing our goal includes the following hardware components:1. HTS2212. Raspberry Pi3. I2C Cable4. I2C Shield for raspberry pi5. Ethernet Cable", "step_imgs": ["https://cdn.instructables.com/FOZ/1E1J/IQYT59K1/FOZ1E1JIQYT59K1.LARGE.jpg", "https://cdn.instructables.com/FUJ/4W1G/IQYT59KC/FUJ4W1GIQYT59KC.LARGE.jpg", "https://cdn.instructables.com/FQH/YP1J/IQYT59KN/FQHYP1JIQYT59KN.LARGE.jpg", "https://cdn.instructables.com/FHO/1Y9Z/IQYT59MC/FHO1Y9ZIQYT59MC.LARGE.jpg"], "step_title": "Step 1: Hardware Required:"}, {"step": 2, "steps_text": "The hardware hookup section basically explains the wiring connections required between the sensor and the raspberry pi. Ensuring correct connections is the basic necessity while working on any system for the desired output. So, the requisite connections are as follows:The HTS221 will work over I2C . Here is the example wiring diagram, demonstrating how to wire up each interface of the sensor. Out-of-the-box, the board is configured for an I2C interface, as such we recommend using this hookup if you\u2019re otherwise agnostic. All you need is four wires! Only four connections are required Vcc, Gnd, SCL and SDA pins and these are connected with the help of I2C cable. These connections are demonstrated in the pictures above.", "step_imgs": ["https://cdn.instructables.com/FT1/TKKV/IQYT5CPH/FT1TKKVIQYT5CPH.LARGE.jpg", "https://cdn.instructables.com/FO0/TDJJ/IQYT5CS6/FO0TDJJIQYT5CS6.LARGE.jpg"], "step_title": "Step 2: Hardware Hookup:"}, {"step": 3, "steps_text": "The advantage of using raspberry pi is, that is provides you the flexibility of the programming language in which you want to program the board in order to interface the sensor with it. Harnessing this advantage of this board, we are demonstrating here its programming in the python. The python code for HTS221 can be downloaded from our github community that is Control Everything Community.As well as for the ease of the users, we are explaining the code here also: As the first step of coding you need to download the smbus library in case of python, because this library supports the functions used in the code. So, to download the library you can visit the following link: https://pypi.python.org/pypi/smbus-cffi/0.5.1 You can copy the working python code for this sensor from here also:import smbusimport time# Get I2C busbus = smbus.SMBus(1)# HTS221 address, 0x5F(95)# Select average configuration register, 0x10(16)#\t\t0x1B(27)\tTemperature average samples = 256, Humidity average samples = 512bus.write_byte_data(0x5F, 0x10, 0x1B)# HTS221 address, 0x5F(95)# Select control register1, 0x20(32)#\t\t0x85(133)\tPower ON, Continuous update, Data output rate = 1 Hzbus.write_byte_data(0x5F, 0x20, 0x85)time.sleep(0.5)\n# HTS221 address, 0x5F(95)# Read Calibration values from non-volatile memory of the device# Humidity Calibration values# Read data back from 0x30(48), 1 byteval = bus.read_byte_data(0x5F, 0x30)H0 = val / 2\n# Read data back from 0x31(49), 1 byteval = bus.read_byte_data(0x5F, 0x31)H1 = val /2# Read data back from 0x36(54), 2 bytesval0 = bus.read_byte_data(0x5F, 0x36)val1 = bus.read_byte_data(0x5F, 0x37)H2 = ((val1 & 0xFF) * 256) + (val0 & 0xFF)# Read data back from 0x3A(58), 2 bytesval0 = bus.read_byte_data(0x5F, 0x3A)val1 = bus.read_byte_data(0x5F, 0x3B)H3 = ((val1 & 0xFF) * 256) + (val0 & 0xFF)# Temperature Calibration values# Read data back from 0x32(50), 1 byteT0 = bus.read_byte_data(0x5F, 0x32)T0 = (T0 & 0xFF)# Read data back from 0x32(51), 1 byteT1 = bus.read_byte_data(0x5F, 0x33)T1 = (T1 & 0xFF)# Read data back from 0x35(53), 1 byteraw = bus.read_byte_data(0x5F, 0x35)raw = (raw & 0x0F)# Convert the temperature Calibration values to 10-bitsT0 = ((raw & 0x03) * 256) + T0T1 = ((raw & 0x0C) * 64) + T1# Read data back from 0x3C(60), 2 bytesval0 = bus.read_byte_data(0x5F, 0x3C)val1 = bus.read_byte_data(0x5F, 0x3D)T2 = ((val1 & 0xFF) * 256) + (val0 & 0xFF)# Read data back from 0x3E(62), 2 bytesval0 = bus.read_byte_data(0x5F, 0x3E)val1 = bus.read_byte_data(0x5F, 0x3F)T3 = ((val1 & 0xFF) * 256) + (val0 & 0xFF)# Read data back from 0x28(40) with command register 0x80(128), 4 bytes# humidity msb, humidity lsb, temp msb, temp lsbdata = bus.read_i2c_block_data(0x5F, 0x28 | 0x80, 4)# Convert the datahumidity = (data[1] * 256) + data[0]humidity = ((1.0 * H1) - (1.0 * H0)) * (1.0 * humidity - 1.0 * H2) / (1.0 * H3 - 1.0 * H2) + (1.0 * H0)temp = (data[3] * 256) + data[2]if temp > 32767 :\ttemp -= 65536cTemp = ((T1 - T0) / 8.0) * (temp - T2) / (T3 - T2) + (T0 / 8.0)fTemp = (cTemp * 1.8 ) + 32# Output data to screenprint \"Relative Humidity : %.2f %%\" %humidityprint \"Temperature in Celsius : %.2f C\" %cTempprint \"Temperature in Fahrenheit : %.2f F\" %fTempThe part of code mentioned below includes the libraries required for the correct execution of the python codes.import smbusimport timeThe code can be executed by typing the below mentioned command in the command prompt.$> python HTS221.py The output of the sensor is also shown in the picture above for the reference of the user.", "step_imgs": ["https://cdn.instructables.com/FQ0/JBXM/IQYT5D4M/FQ0JBXMIQYT5D4M.LARGE.jpg"], "step_title": "Step 3: Code for Humidity and Temperature Measurement:"}, {"step": 4, "steps_text": "HTS221 can be employed in various consumer products like air humidifiers and refrigerators etc. This sensor also find its application in a wider arena including Smart home automation, Industrial automation, respiratory equipments, asset and goods tracking.", "step_imgs": ["https://cdn.instructables.com/F7S/626S/IQYT2IMS/F7S626SIQYT2IMS.LARGE.jpg"], "step_title": "Step 4: Applications:"}], "channel": "Electronics"}, {"category": "technology", "description": "21 July Edit - See how I used the IR thermometer in my Laser Experiments!https://www.instructables.com/id/LASER-HEAT/Intro: You may already have one of those very useful IR thermometers... just point, shoot, and read the temperature.\u00a0 Are they not great?\u00a0 I have two.\u00a0 But, what if you want to record the temperature readings on your PC?\u00a0 This Instructable will show you how to build your own IR thermometer that will log to the PC - an added benefit is that the data can be graphed in Excel or displayed in realtime using a free Shareware program called StampPlot Pro from the company SelmaWare Solutions.\u00a0 The total parts costs should come under $50 but a significant amount of the purchase can be reused on your next PICAXE project. The device communicates with the PC on a USB link.\u00a0 After construction, you can easily modify the device if you desire to communicate over a free COMM port on the PC.\u00a0 This will free up the USB adapter for use on another project.\u00a0 After assembling everything and doing the programming and testing, I transferred the parts to a minibox and added a 5V regulator so that I could run the project from a 9V battery. The ground-work for this PICAXE came from P.H. Anderson on www.phanderson.com and I have used his code with written permission.\u00a0 The site is a great source for the PICAXE chips and for the MLX90614 IR sensor from Melexis.\u00a0 Of course, there are other sources but my personal experience with ordering from phanderson.com has been very positive.\u00a0 If you are new to PICAXE Basic programming, the site has many well documented examples on his website.Part One : Inventory of parts and potential vendors  1) PICXE-20X2 and Protoboard\u00a0\u00a0\u00a0 \"A\"  2) Melexis MLX90614\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \"A\"  3) 10K 1/4 watt resistor\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"*\"  4) 22K 1/4 watt resistor\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"*\"  5) 4.7K 1/4 watt resistor X 2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"B\" Vendor Parts List (suggested):  A\u00a0\u00a0\u00a0\u00a0 www.phanderson.com/picaxe  B\u00a0\u00a0\u00a0\u00a0 RadioShack  *\u00a0\u00a0\u00a0\u00a0\u00a0 Note: The PICAXE-20X2 Protoboard includes the Protoboard, the PICAXE chip, pullup resistors, and USB interface for one price.Part Two: Download the free software To program your PICAXE, you will need the free PICAXE Programming Editor from: http://www.rev-ed.co.uk/picaxe/software.htm\u00a0 Just download the software and install on your PC.\u00a0 Your protoboard and PICAXE will come programmed with a simple test program to ensure that everything is working correctly... the test program simply flashes the red LED.\u00a0 You will also need the USB driver software.\u00a0 It is available here: http://www.ftdichip.com/Drivers/VCP.htmPart Three: Connecting the MLX90614 to power and to the PICAXE Build the circuit on the protoboard being careful to observe the MLX90614 pinout.\u00a0 A bottom-view image is included in this Instructable.\u00a0 In our case (bottom-view), Pin4 is VSS which is ground for our 5V USB design.\u00a0 Pin3, VDD, will be connected to +5 volts.\u00a0 Both Pin1 and Pin2 have a pull-up 4.7K (yellow-violet-red) resistors that are connected to +5V.\u00a0\u00a0 Pin1 is connected to Pin-11 of the PICAXE and Pin2 is connected to Pin-13 of the PICAXE.\u00a0 The rest of the wiring on the protoboard can be left exactly as it was shipped.\u00a0 Just ensure that you test the board when it arrives and that the red LED flashed properly.\u00a0 You may find a few components that need \"pushing down\" into the breadboard if the unit does not come up.Part Four: Programming the PICAXE with the temperature acquisition code To build your thermometer, the sample code located here: http://www.phanderson.com/picaxe/mlx90614.html must be slightly modified and I have made available the modification to the code below. Open up the Programming Editor, connect the USB cable to the PC, install the USB software driver.\u00a0 Then copy the code below into an empty window in the Programming Editor and save it with a name like MLX90614.BAS.\u00a0 To program your PICAXE, simply click the \"Program\" button in the editor.\u00a0 (Hint: if you have a syntax error, you may need to paste the code into Notepad first, save it, and then load it into the Editor.)  Code is in TXT format in the attached file.\u00a0 Download and rename to .BAS to utilize in the PICAXE program editor.Part Five: Working with the PC and your thermometer Now that you have a connection from your temperature project to the PC, you may wish to graph the data or save the data to a log file on the disk.\u00a0 There are many options available, but I will discuss two simple approaches for capturing the data in text format. 1) Use the PICAXE Programming Editor \"Terminal\" to capture the serial output.\u00a0 This project will send serial data at 2400 BAUD, no parity, 8 data bits, and 1 stop bit... (2400,n,8,1) 2) On Microsoft Windows XP, you can use the Hyper Terminal to capture data using the settings in #1 Both of the above scenarios will allow you to copy data into the OS buffer and then transfer that data to another program, such as Excel, by simply \"pasting\" the text in the buffer. Another option is that you can use a free program like StampPlot Pro from SelmaWare to plot the serial data in realtime.\u00a0 I used the \"Calc-n-Plot\" graph option of StampPlot Pro because I can add a math function into to the program which works on each received data element received from the PIC.\u00a0 The data from the project is in degrees Kelvin and the last digit is the decimal place, so you must divide by 10 to recover the decimal.\u00a0 You can then work with Kevin directly or convert to Celsius or Fahrenheit by simple math. The formula for converting the Kelvin degrees (last digit of serial data is the \"tens\" decimal place) is: data_K / 10 x 1.8 - 459.67 = data_F.n In Excel, you can use the following formula to convert the serial data to degrees Fahrenheit:=$A2/10*9/5-459.67\u00a0 (assuming A2 is the first data element... A3 would be the next, etc.) I hope you have fun with your new IR temperature recording thermometer. -Ray Updates: 20110721 - Removed inline code and reflected attached TXT file to enhance readability 20110701 - Updated to reflect new etched circuit board (negotiating for a few on eBay soon... check back) 20110701 - Updated to show new project box (Newark #H97, 9V about $5)", "title": "A PICAXE Infrared \"logging\" Thermometer", "url": "https://www.instructables.com/id/A-PICAXE-Infrared-logging-Thermometer/", "section": "technology", "steps": [], "channel": "Microcontrollers"}, {"category": "technology", "description": "21 July Edit - See how I used the IR thermometer in my Laser Experiments!https://www.instructables.com/id/LASER-HEAT/Intro: You may already have one of those very useful IR thermometers... just point, shoot, and read the temperature.\u00a0 Are they not great?\u00a0 I have two.\u00a0 But, what if you want to record the temperature readings on your PC?\u00a0 This Instructable will show you how to build your own IR thermometer that will log to the PC - an added benefit is that the data can be graphed in Excel or displayed in realtime using a free Shareware program called StampPlot Pro from the company SelmaWare Solutions.\u00a0 The total parts costs should come under $50 but a significant amount of the purchase can be reused on your next PICAXE project. The device communicates with the PC on a USB link.\u00a0 After construction, you can easily modify the device if you desire to communicate over a free COMM port on the PC.\u00a0 This will free up the USB adapter for use on another project.\u00a0 After assembling everything and doing the programming and testing, I transferred the parts to a minibox and added a 5V regulator so that I could run the project from a 9V battery. The ground-work for this PICAXE came from P.H. Anderson on www.phanderson.com and I have used his code with written permission.\u00a0 The site is a great source for the PICAXE chips and for the MLX90614 IR sensor from Melexis.\u00a0 Of course, there are other sources but my personal experience with ordering from phanderson.com has been very positive.\u00a0 If you are new to PICAXE Basic programming, the site has many well documented examples on his website.Part One : Inventory of parts and potential vendors  1) PICXE-20X2 and Protoboard\u00a0\u00a0\u00a0 \"A\"  2) Melexis MLX90614\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \"A\"  3) 10K 1/4 watt resistor\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"*\"  4) 22K 1/4 watt resistor\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"*\"  5) 4.7K 1/4 watt resistor X 2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"B\" Vendor Parts List (suggested):  A\u00a0\u00a0\u00a0\u00a0 www.phanderson.com/picaxe  B\u00a0\u00a0\u00a0\u00a0 RadioShack  *\u00a0\u00a0\u00a0\u00a0\u00a0 Note: The PICAXE-20X2 Protoboard includes the Protoboard, the PICAXE chip, pullup resistors, and USB interface for one price.Part Two: Download the free software To program your PICAXE, you will need the free PICAXE Programming Editor from: http://www.rev-ed.co.uk/picaxe/software.htm\u00a0 Just download the software and install on your PC.\u00a0 Your protoboard and PICAXE will come programmed with a simple test program to ensure that everything is working correctly... the test program simply flashes the red LED.\u00a0 You will also need the USB driver software.\u00a0 It is available here: http://www.ftdichip.com/Drivers/VCP.htmPart Three: Connecting the MLX90614 to power and to the PICAXE Build the circuit on the protoboard being careful to observe the MLX90614 pinout.\u00a0 A bottom-view image is included in this Instructable.\u00a0 In our case (bottom-view), Pin4 is VSS which is ground for our 5V USB design.\u00a0 Pin3, VDD, will be connected to +5 volts.\u00a0 Both Pin1 and Pin2 have a pull-up 4.7K (yellow-violet-red) resistors that are connected to +5V.\u00a0\u00a0 Pin1 is connected to Pin-11 of the PICAXE and Pin2 is connected to Pin-13 of the PICAXE.\u00a0 The rest of the wiring on the protoboard can be left exactly as it was shipped.\u00a0 Just ensure that you test the board when it arrives and that the red LED flashed properly.\u00a0 You may find a few components that need \"pushing down\" into the breadboard if the unit does not come up.Part Four: Programming the PICAXE with the temperature acquisition code To build your thermometer, the sample code located here: http://www.phanderson.com/picaxe/mlx90614.html must be slightly modified and I have made available the modification to the code below. Open up the Programming Editor, connect the USB cable to the PC, install the USB software driver.\u00a0 Then copy the code below into an empty window in the Programming Editor and save it with a name like MLX90614.BAS.\u00a0 To program your PICAXE, simply click the \"Program\" button in the editor.\u00a0 (Hint: if you have a syntax error, you may need to paste the code into Notepad first, save it, and then load it into the Editor.)  Code is in TXT format in the attached file.\u00a0 Download and rename to .BAS to utilize in the PICAXE program editor.Part Five: Working with the PC and your thermometer Now that you have a connection from your temperature project to the PC, you may wish to graph the data or save the data to a log file on the disk.\u00a0 There are many options available, but I will discuss two simple approaches for capturing the data in text format. 1) Use the PICAXE Programming Editor \"Terminal\" to capture the serial output.\u00a0 This project will send serial data at 2400 BAUD, no parity, 8 data bits, and 1 stop bit... (2400,n,8,1) 2) On Microsoft Windows XP, you can use the Hyper Terminal to capture data using the settings in #1 Both of the above scenarios will allow you to copy data into the OS buffer and then transfer that data to another program, such as Excel, by simply \"pasting\" the text in the buffer. Another option is that you can use a free program like StampPlot Pro from SelmaWare to plot the serial data in realtime.\u00a0 I used the \"Calc-n-Plot\" graph option of StampPlot Pro because I can add a math function into to the program which works on each received data element received from the PIC.\u00a0 The data from the project is in degrees Kelvin and the last digit is the decimal place, so you must divide by 10 to recover the decimal.\u00a0 You can then work with Kevin directly or convert to Celsius or Fahrenheit by simple math. The formula for converting the Kelvin degrees (last digit of serial data is the \"tens\" decimal place) is: data_K / 10 x 1.8 - 459.67 = data_F.n In Excel, you can use the following formula to convert the serial data to degrees Fahrenheit:=$A2/10*9/5-459.67\u00a0 (assuming A2 is the first data element... A3 would be the next, etc.) I hope you have fun with your new IR temperature recording thermometer. -Ray Updates: 20110721 - Removed inline code and reflected attached TXT file to enhance readability 20110701 - Updated to reflect new etched circuit board (negotiating for a few on eBay soon... check back) 20110701 - Updated to show new project box (Newark #H97, 9V about $5)", "title": "A PICAXE Infrared \"logging\" Thermometer", "url": "https://www.instructables.com/id/A-PICAXE-Infrared-logging-Thermometer/", "section": "technology", "steps": [], "channel": "Microcontrollers"}, {"category": "technology", "description": "Multiple regression estimates the coefficients of the linear equation when there is more than one independent variable that best predicts the value of the dependent variable. For example, a salesperson\u2019s total annual sales (the dependent variable) can be predicted based on independent variables such as age, education and years of experience. The linear equation for multiple regression is as follows: Z = aX + bY + c\u00a0 /Created by the ITS Training Program at CSULA for students. ", "title": "Multiple Regression: SPSS (3.4)", "url": "https://www.instructables.com/id/Multiple-Regression-SPSS-34/", "section": "technology", "steps": [], "channel": "Software"}, {"category": "technology", "description": "Introduction      Hello and thank you for viewing this instructable on the basics of column distillation!  In this introduction, I would like to go over two things, the goals of this instructable as well as cover background information. GoalsThe goals of this instructable are as follows: Introduce the concepts pertinent to why the analysis can be performedShow how and why the McCabe Thiele analysis is performed     Keeping these goals in mind, let's jump right in!Background Information       For the sake of brevity in this portion of the instructable, the why's, how's, when's, and where's of a distillation column will not be covered.  Only background information that pertains to the analysis that will be performed will be covered.  If you need more information on how a column works please view this link (Insert Link here).        The McCabe-Thiele Analysis is a graphical analysis procedure used when a new distillation column is being installed (It was developed by two men named McCabe and Thiele).  It is used to determine the number of distillation stages needed within the column to get the desired purity of product.  In order to perform the analysis, overall material balances are performed on the streams of materials going into and out of the column.  This is to understand how the material we are separating reacts based on the inlet conditions.       The aforementioned analysis procedure is only valid if the three following assumption are true: the column is at constant molal overflow (CMO), the separation is adiabatic (no heat is lost in separation in the stages), and each stage of the column is operating at Vapor-Liquid Equilibrium.  Each one of these concepts will now be explained.       Constant molal overflow can be described as follows: the same material leaving a stage is equal to the amount entering a stage within the column.  This doesn't mean the output streams from the column overall are the same but means we do not need to focus internally within the column when using material balances.  Only the overall column needs to be looked at.        Adiabatic means no heat is lost during the separation process.  If heat were lost during each stages,  these calculations would get exceedingly complex and a stage by stage analysis would be the only way to analyze the column.       Vapor-liquid Equilibrium means that the amount of Vapor and liquid in each stage is not changing with time, if it were then the first assumption of CMO would not be valid.       That rounds out the assumptions and the information needed to begin taking a look at the analysis itself!", "title": "The Basics of Column Distillation", "url": "https://www.instructables.com/id/The-Basics-of-Column-Distillation/", "section": "technology", "steps": [{"step": 1, "steps_text": "As described in the introduction, the first step of a McCabe Thiele analysis is determine two things.  Get equilibrium data (always from a book, data, or experimental data) and do an overall material balance on the column. There are various ways to do this however the problem will specify the composition of the what comes off the top and the bottom.  The following must be found using the equations in the picture: D BA short example of an overall balance is performed in the next step!", "step_imgs": ["https://cdn.instructables.com/FP1/PO52/JE4KKY7C/FP1PO52JE4KKY7C.LARGE.jpg"], "step_title": "Step 1: Overall Balance and Equilibrium Data"}, {"step": 2, "steps_text": "This example illustrates how a balance is done using information normally given in a problem statement. ", "step_imgs": ["https://cdn.instructables.com/FUM/YU99/JESSV7B0/FUMYU99JESSV7B0.LARGE.jpg"], "step_title": "Step 2: An Example of the Overall Balances Around a Column"}, {"step": 3, "steps_text": "        As mentioned in the introduction, to do a McCabe Thiele analysis a graph must first be generated. The Equilibrium Data, a top operating line, a bottom operating line, and a feed line must be plotted to generate the full graph. What is a top operating line, bottom operating line, and feed line?  These lines represent how the material is flowing throughout the column between the distillation stages.  The feed is always inserted in the middle of column then there is a flow of vapor up the column (top operating line) and a flow of liquid down the column (bottom operating line).     The equilibrium data must be found through experimental data usually found in a book. Then the feed line can be found by analyzing the feed itself.  There are 6 conditions to be analyzed in terms of the feed: If the feed is a Saturated Liquid, the slope of the feed line is vertical  If the feed is a Saturated Vapor, the slope of the feed line is horizontal  If the feed is a Superheated Vapor, the slope of the feed line is less than 1  If the feed is a Supercooled Liquid, the slope of the feed line is greater than 1 If the feed is a liquid, you need to find the quality and find the slope of the feed line from the quality If the feed is a vapor, you need to do the same as the liquid case above       For the Superheated and Supercooled cases, the equations in the photo can be used to determine the quality and the slope (note, these can be used to address all cases).        Once all of this is done, plot the Equilibrium data and the feed line in order to start assembling the graph needed to perfom the McCabe Thiele analysis. ", "step_imgs": ["https://cdn.instructables.com/FIQ/W2P3/JESSVGH0/FIQW2P3JESSVGH0.LARGE.jpg", "https://cdn.instructables.com/FVD/4X7F/JESSVHYZ/FVD4X7FJESSVHYZ.LARGE.jpg"], "step_title": "Step 3: Plotting Data and Feed Line"}, {"step": 4, "steps_text": "      The next thing normally found in the problem is the top operating line and are many ways to do this, however, the most simple method involves using the reflux ratio of the column.  The Reflux Ratio is simply the ratio of the material exiting the top of column and the material that is cooled in a condenser that re-enters the column.  There is a minimum reflux ratio the occurs in every column and can be found using the following equation which involves the y intercept of the top operating line (See photo).        This y intercept for the minimum reflux ratio always intersects where the feed line and equilibrium data meet,  therefore the y intercept is not hard to find and xD is provided in the problem statement.       After the minimum reflux ratio is found a modifying factor is given by the problem adjust it to the conditions of the column (See photo above again). Then the reflux ratio of column is found and the same equation used to find the minimum reflux ratio can be used to find the y-intercept of the top operating line. Then using the y-intercept and the y = x point of the top operating line (the distillate composition xD defines this point), the full top operating line can be plotted. ", "step_imgs": ["https://cdn.instructables.com/FZO/2152/JESSVFY6/FZO2152JESSVFY6.LARGE.jpg", "https://cdn.instructables.com/FHT/26JU/JESSVFYA/FHT26JUJESSVFYA.LARGE.jpg"], "step_title": "Step 4: Top Operating Line"}, {"step": 5, "steps_text": "      The bottom operating line is much simpler than the top operating line due to the amount of information we have already found.  After plotting the top operating line, you see that it intersects with the feed line and that point is a point on the bottom operating line.  So using the point where the top operating line and the feed line intersect along with the bottoms composition point (This is the same as the distillate composition point but using the bottoms composition given), you can construct the bottom operating line.  Please see the photo above. ", "step_imgs": ["https://cdn.instructables.com/FOZ/G0XT/JESSVGIG/FOZG0XTJESSVGIG.LARGE.jpg"], "step_title": "Step 5: Bottom Operating Line"}, {"step": 6, "steps_text": "     Now that we have the bottom operating line, top operating line, and equilibrium data all on the same graph, a McCabe-Thiele graphical analysis can be performed.  Why?  Since the top and the bottom operating lines model the upper and lower portions of the column and the equilibrium data indicates the what will actually happen at our current environmental conditions, we have in essence modeled the whole column in an ideal situation.      The analysis itself is simple.  You will need a straight edged ruler.  Now follow these steps below: Draw a straight line from the distillate composition point to the equilibrium dataDraw a line straight down from the where your first straight line intersected the equilibrium data to the top operating lineRepeat steps 1 and 2 until you pass the point where the top and bottom operating lines meetAfter passing the point where the top and bottom operating lines meet, the lines being drawn down must go to the bottom operating line rather than the topContinue until you reach the bottoms composition point    At the final line, you may find the line goes to far, this indicate a partial stage.  Draw a straight line down to the bottoms composition point.  Now measure the total length of the horizontal line (equilibrium point to bottom operating line).  Then measure the distance between the intersection of the line going down to the bottoms composition point and the bottom operating line (let's call it partial length).  Finally, divide the partial length by the total you measured first.  That decimal number indicates the how much of a stage you would need.  Note: In a real life situation, a partial stage could not be used, but this is an ideal scenario so in this case it is allowed.Finally, count the number of steps developed while drawing lines.  This indicates the number of stages needed in your distillation column.  Congratuations, you completed a McCabe-Thiele Graphical Analysis!", "step_imgs": ["https://cdn.instructables.com/FCX/SP94/JESSVHZD/FCXSP94JESSVHZD.LARGE.jpg"], "step_title": "Step 6: Final Step, the Graphical Analysis"}], "channel": "Science"}, {"category": "No category to show", "description": "This project will demonstrate how to make a four-sided, never-ending postcard which is incredibly intriguing to play with.  It can also be used as an educational tool to demonstrate four concepts of any subject, including foreign language, continents, characters, scenes, geography, photography, etc.", "title": "Four Sided Never Ending Card", "url": "https://www.instructables.com/id/Four-Sided-Never-Ending-Card/", "section": "craft", "steps": [{"step": 1, "steps_text": "4 SQUARE Images on Card Stock  Large Paper Cutter   Cutting Mat   Metal Ruler Pencil   Scoring Tool (such as knitting needle)   Double Sided Adhesive Squares   Scissors", "step_imgs": [], "step_title": "Step 1: Tools You Will Need"}, {"step": 2, "steps_text": "The two keys to this project are: glueing instructions  horizontal or vertical positioning  If you pay close attention to the gluing instructions and alignment of the cards (horizontal or vertical), the project will come together perfectly!", "step_imgs": [], "step_title": "Step 2: Project Hints"}, {"step": 3, "steps_text": "Prepare 4 SQUARE images, preferably from card stock.", "step_imgs": ["https://cdn.instructables.com/F3U/OMW7/J0IEHYMH/F3UOMW7J0IEHYMH.LARGE.jpg"], "step_title": "Step 3: \u200bPrepare 4 SQUARE Images"}, {"step": 4, "steps_text": "Cut the four images into 8 rectangles.  Cut the first and third images vertically and the second and fourth horizontally.  You will have 4 vertical images and 4 horizontal images.", "step_imgs": ["https://cdn.instructables.com/FZG/RKST/J0IEHYL9/FZGRKSTJ0IEHYL9.LARGE.jpg"], "step_title": "Step 4: Cut Your Squares - 2 Vertical & 2 Horizontal"}, {"step": 5, "steps_text": "With a knitting needle on a cutting mat, score along all 8 rectangles \u00bc of the way and \u00be of the way.  If you have 6 inch rectangles, your score marks will be at 1.5 inches from each end.", "step_imgs": ["https://cdn.instructables.com/FGI/V380/J0IEHYKL/FGIV380J0IEHYKL.LARGE.jpg", "https://cdn.instructables.com/FD3/K54A/J0IEHYKJ/FD3K54AJ0IEHYKJ.LARGE.jpg"], "step_title": "Step 5: Score the 8 Rectangles"}, {"step": 6, "steps_text": "Bend along score lines and press down, ultimately pairing the images together.  You will have 8 rectangles (4 vertical image/4 horizontal images), scored on each end.", "step_imgs": ["https://cdn.instructables.com/F5Q/EUT0/J0IEHYKD/F5QEUT0J0IEHYKD.LARGE.jpg"], "step_title": "Step 6: Bend and Press Along the Score Lines"}, {"step": 7, "steps_text": "Take your first image (2 vertical pieces).  Place them on the mat and flip each over so that the image is facing the mat.  (The image would not match if you were to see under it.)", "step_imgs": ["https://cdn.instructables.com/FB0/GQBE/J0IEHYKA/FB0GQBEJ0IEHYKA.LARGE.jpg", "https://cdn.instructables.com/FMF/VYX9/J0IEHYK7/FMFVYX9J0IEHYK7.LARGE.jpg", "https://cdn.instructables.com/FTK/VZBL/J0IEHYK5/FTKVZBLJ0IEHYK5.LARGE.jpg"], "step_title": "Step 7: Flip Over the First Two Vertical Images"}, {"step": 8, "steps_text": "With the two vertical pieces side by side, put adhesive just on the four corners.", "step_imgs": ["https://cdn.instructables.com/FB6/QE6Q/J0IEHYK3/FB6QE6QJ0IEHYK3.LARGE.jpg", "https://cdn.instructables.com/FK2/V2K8/J0IEIXN8/FK2V2K8J0IEIXN8.LARGE.jpg"], "step_title": "Step 8: Glue the Four Corners"}, {"step": 9, "steps_text": "Put the second image (horizontal cut) and press on top into place.", "step_imgs": ["https://cdn.instructables.com/FPH/F2FE/J0IEHYK1/FPHF2FEJ0IEHYK1.LARGE.jpg"], "step_title": "Step 9: Place the Second Image (horizontal)"}, {"step": 10, "steps_text": "Flip the center fold open (horizontally) and fold back on itself.  The fold will be where the score of the paper underneath line up.  Press the seams.", "step_imgs": ["https://cdn.instructables.com/FT0/IOW1/J0IEHYTQ/FT0IOW1J0IEHYTQ.LARGE.jpg", "https://cdn.instructables.com/F80/7QKM/J0IEHYTP/F807QKMJ0IEHYTP.LARGE.jpg"], "step_title": "Step 10: Flip Open the Image and Fold Back on Itself"}, {"step": 11, "steps_text": "Put glue (adhesive) on the project in an \u201cH\u201d pattern.", "step_imgs": ["https://cdn.instructables.com/FGQ/03HY/J0IEHYTN/FGQ03HYJ0IEHYTN.LARGE.jpg", "https://cdn.instructables.com/FRA/GR3E/J0IEIXKQ/FRAGR3EJ0IEIXKQ.LARGE.jpg"], "step_title": "Step 11: Glue in an \"H\" Pattern."}, {"step": 12, "steps_text": "Place the third image (vertical cut) on top.  Press to secure.", "step_imgs": ["https://cdn.instructables.com/F67/XZNR/J0IEHYTI/F67XZNRJ0IEHYTI.LARGE.jpg", "https://cdn.instructables.com/FGP/GX4J/J0IEHYQD/FGPGX4JJ0IEHYQD.LARGE.jpg"], "step_title": "Step 12: Place the Third Image (vertical)"}, {"step": 13, "steps_text": "Flip the center fold open (vertically) and fold back on itself.  The fold will be where the score of the paper underneath line up.  Press the seams.", "step_imgs": ["https://cdn.instructables.com/F7A/P3I4/J0IEHYQ4/F7AP3I4J0IEHYQ4.LARGE.jpg", "https://cdn.instructables.com/FK5/A2KA/J0IEHYPP/FK5A2KAJ0IEHYPP.LARGE.jpg", "https://cdn.instructables.com/FF0/5475/J0IEHYPI/FF05475J0IEHYPI.LARGE.jpg"], "step_title": "Step 13: Flip Open the Vertical Cards and Fold Back on Itself"}, {"step": 14, "steps_text": "Glue the entire area.  ", "step_imgs": ["https://cdn.instructables.com/F9S/06KP/J0IEHYPC/F9S06KPJ0IEHYPC.LARGE.jpg"], "step_title": "Step 14: Glue the Entire Area"}, {"step": 15, "steps_text": "Place the fourth image (horizontal cut) on top.  Press to secure.", "step_imgs": ["https://cdn.instructables.com/F0T/QK07/J0IEHYJ5/F0TQK07J0IEHYJ5.LARGE.jpg", "https://cdn.instructables.com/FYJ/VZHY/J0IEHYI4/FYJVZHYJ0IEHYI4.LARGE.jpg"], "step_title": "Step 15: Place the Fourth Image (horizontal)"}, {"step": 16, "steps_text": "This is your final product.  Fold the card back on itself over and over again to reveal the four images.", "step_imgs": [], "step_title": "Step 16: Final Product"}], "channel": "No channel to show"}, {"category": "workshop", "description": "Have you ever wanted to know the exact fuel economy of your car, or needed to keep track of the behavior of your wallet as the seasons change? Perhaps you are curious what time of year you drive the most, or least, and the price of gas at those times. Fuel price trends may fascinate or frustrate you and you want to coordinate your long trip with the low price season, or you want to keep an eye on how your car is performing so you can take it to the shop before it completely breaks down. Or possibly you're like me and simply want to collect a bunch of data and analyze it to make some awesome graphs!\nWhatever your purpose, this Instructable details a useful method to accomplish the best results for your data analysis.", "title": "A Case Study in Gasoline Use", "url": "https://www.instructables.com/id/A-Case-Study-in-Gasoline-Use/", "section": "workshop", "steps": [{"step": 1, "steps_text": "I bought my first car in March of 2006, and despite it's boat-like handling and appearance, my 2000 Chevy Impala has been my baby ever since. I wanted to know every single detail about it, and my insurance company had already suggested I keep a log of service dates and whatnot so I'd have a better idea of what my car needed. So I took their advice and put a little notebook in my car, and took the service logging a little further. Actually I took it much, much further.\nSince the day I drove my car off the lot, I have recorded every single time I purchased gasoline.\nWhenever I'm driving my friends around and I stop for gas, I get some pretty odd looks. \"Hey man, can you hand me the black notebook in the glove compartment?\" I then scribble down another line of seemingly useless information into the little book and tell my friend to put it back. Invariably, I have to explain what the book is for, and no I'm not obsessive compulsive. I've diligently kept my log for over 4 years, and I just got the motivation to enter it into my computer like I had originally planned. It suffices to say this is the longest experiment I have ever performed.\nLogging your data should be something automatic. Keep the notebook in a visible place for a while, then once you're in the habit, you can keep it in the glove box. Dedicate a nice pen to the cause and keep it in the spiral of the notebook.", "step_imgs": ["https://cdn.instructables.com/F5Z/3Z86/GIWZLV7Q/F5Z3Z86GIWZLV7Q.LARGE.jpg", "https://cdn.instructables.com/FY0/6KWC/GIWZM59K/FY06KWCGIWZM59K.LARGE.jpg", "https://cdn.instructables.com/F0M/LKBF/GIYWWM1Y/F0MLKBFGIYWWM1Y.LARGE.jpg"], "step_title": "Step 1: OCD Much?"}, {"step": 2, "steps_text": "It's amazing how much information can be derived from just a few bits of data. All you'll ever need to record is:\nDate\nOdometer Reading\nGallons Purchased\nTotal Price\nGas Station Type\nFrom this information, combined with Microsoft Excel or some other data entry program, you can find:\nLength of Experiment\nTotal Mileage\nTotal Cost of Gas\nTotal Amount of Gas\nTotal CO2 released\nAverage Fuel Economy\nMPG over time\nCost of fuel per month\nMileage between purchases (Trip)\nCost per gallon\nMiles per day\nGas station preference\nAnd probably more\nSure, some of this may seem redundant and worthless, but it's kind of a trip to find out your car has emitted 20 metric tonnes of CO2.", "step_imgs": ["https://cdn.instructables.com/F5I/T3SM/GIWZLV7R/F5IT3SMGIWZLV7R.LARGE.jpg", "https://cdn.instructables.com/FG6/2QTN/GIWZLV7P/FG62QTNGIWZLV7P.LARGE.jpg", "https://cdn.instructables.com/FIP/0CFA/GIWZM592/FIP0CFAGIWZM592.LARGE.jpg", "https://cdn.instructables.com/FWY/WEL0/GIWZLV7O/FWYWEL0GIWZLV7O.LARGE.jpg"], "step_title": "Step 2: Relevant Information to Log"}, {"step": 3, "steps_text": "Microsoft Excel is a pretty amazing program. I hadn't learned how to use it before I started entering the data into it earlier this week. It's kind of confusing at first, but once you get the hang of it it's actually very straightforward and almost infinitely useful.\nIf you have some other kind of data management program, hopefully you know how to create calculated columns and whatnot, because these instructions are for Excel. However, the basic ideas should apply to whatever you're working with.", "step_imgs": ["https://cdn.instructables.com/F5S/QYQJ/GIWZLU6O/F5SQYQJGIWZLU6O.LARGE.jpg", "https://cdn.instructables.com/F6C/MMHZ/GIYWWL2B/F6CMMHZGIYWWL2B.LARGE.jpg", "https://cdn.instructables.com/F2R/NNRE/GIYWWL2J/F2RNNREGIYWWL2J.LARGE.jpg"], "step_title": "Step 3: Using Microsoft Office Excel"}, {"step": 4, "steps_text": "So, you've collected your data, eh? You want to make some awesome graphs? Well, there is an important step you're getting ahead of yourself about.\nData Entry.\nAh the delightful tedium. Oh the wonderful, splendid several hours you may spend entering all the data you've spent forever collecting. You'd better get comfortable with your numpad. I suggest this format:\n\u00a0\u00a0\u00a0\u00a0 A\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 B\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 E\n1\u00a0 Date\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ODO\u00a0\u00a0 \u00a0\u00a0\u00a0 Gallons\u00a0\u00a0\u00a0 Cost\u00a0\u00a0\u00a0\u00a0\u00a0 Company\n2\u00a0 01/15/2011\u00a0\u00a0\u00a0\u00a0\u00a0 53202 \u00a0\u00a0\u00a0 6.3 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 20.00\u00a0\u00a0\u00a0 Chevron\nNotice that the label resides in row 1. This won't affect your data. You may want to formally label your columns so you can use their names later for calculations. Click on a letter so that the entire column is selected. Just above column A and to the left of the \"fx\" box is the column name field. Enter the names of all your columns here.", "step_imgs": ["https://cdn.instructables.com/F71/LLKW/GIWZLQI5/F71LLKWGIWZLQI5.LARGE.jpg", "https://cdn.instructables.com/FFH/IMLV/GIWZLPUJ/FFHIMLVGIWZLPUJ.LARGE.jpg", "https://cdn.instructables.com/FH4/NZ5E/GIWZLU6P/FH4NZ5EGIWZLU6P.LARGE.jpg"], "step_title": "Step 4: Data Entry"}, {"step": 5, "steps_text": "To make sense of your data you need to perform calculations on it. For this project, you will only need two types of calculations. Calculated columns and Autosums. Calculated columns use one or more data sets to calculate the contents of a new column. The new column can be summed or used to make a graph.\nCalculated columns are created in Excel by iterating formulas that are written in one cell, then copied to other cells with a simple but difficult to discover mouse maneuver. Say you have a data set in column A and want column B to show your data multiplied by two. To do this, Excel requires a formula in each and every cell in B. Such a set would look like this:\n\u00a0\u00a0 \u00a0\u00a0 A \u00a0\u00a0 B\n1\u00a0\u00a0\u00a0 2\u00a0\u00a0 =(A1*2)\n2\u00a0 \u00a0 5 \u00a0 =(A2*2)\n3\u00a0 \u00a0 7\u00a0\u00a0 =(A3*2)\nObviously, it would be rather tedious to write the formula for every cell if you had a data set several hundred numbers long. So Excel allows you to iterate a formula like \"=(A1*2)\" to the cells below it, automatically increasing the number after the A each time. This is done by writing the formula for the first cell by hand, then clicking on the cell so there is a dark, bold line around it with a little black square in the lower right corner. Grab the little black square and drag it downwards, and the formula will automatically iterate. This takes some practice, but becomes very simple.\nAutosums are created in a single cell and automatically add together all the contents of a selected column. Select the cell you want to hold your autosum and click on the \"\u03a3\" (Greek uppercase letter sigma) in the upper right corner and select \"Sum\". You can also just type \"=SUM\" into the cell. Inside the parentheses type the name of the column you want to sum. For example, to find the total amount of gas you've used, type \"=SUM(Gallons)\".", "step_imgs": ["https://cdn.instructables.com/FH4/NZ5E/GIWZLU6P/FH4NZ5EGIWZLU6P.LARGE.jpg", "https://cdn.instructables.com/FV5/WB0J/GIWZM49H/FV5WB0JGIWZM49H.LARGE.jpg", "https://cdn.instructables.com/FE6/NBAO/GIYWWL2D/FE6NBAOGIYWWL2D.LARGE.jpg", "https://cdn.instructables.com/FOZ/A7P3/GIWZLPUK/FOZA7P3GIWZLPUK.LARGE.jpg", "https://cdn.instructables.com/FZ6/I325/GIWZLU6Q/FZ6I325GIWZLU6Q.LARGE.jpg", "https://cdn.instructables.com/F5Z/OMIC/GIYWWL2C/F5ZOMICGIYWWL2C.LARGE.jpg"], "step_title": "Step 5: Creating Calcuated Columns and Autosums"}, {"step": 6, "steps_text": "For those of you who have taken calculus, I have news for you. Tables of data suck. You already knew this of course, since those problems in your text that told you to estimate derivatives based on tabular data were some of the most confusing, right? Nice functions in terms of x and y are much nicer. I know. I know. Also, throw out your fancy derivative rules. They're useless here.\nThis section is based on\nA\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 B\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 C\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 D\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 E\nDate\u00a0\u00a0\u00a0 ODO\u00a0\u00a0\u00a0 Gallons\u00a0\u00a0 Cost\u00a0\u00a0\u00a0\u00a0 Company\nYou need the following calculations:\nTrip\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =(B3-B2)\nMiles/Day (2)\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0 =(B4-B2)/(A4-A2)\nMiles/Day (10)\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =(B11-B2)/(A11-A2)\nCost/Gallon\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =(D2/C2)\nMPG\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =(B11-B2)/(C2+C3+C4+C5+C6+C7+C8+C9+C10+C11)\nThe reason for the two different Miles/Day columns is a resolution issue. Since the data is in a table, the formulas need to determine the slope of the Mileage over Time function, rather than the actual derivative. Sometimes I go on long trips and have to get gas more than once a day, recording two sets of data for the same date. For you math people, remember what happens when there are two values of Y for one value of X? Yep, vertical lines with infinite slope. Bad news. The (2) represents the slope over two cells. The (10) represents the slope over 10 cells. This is kind of like getting different resolutions on your data. The MPG formula is the way it is for much the same issue, since MPG is calculated from incomplete data. To calculate true MPG you'd have to run your gas tank completely empty each time and figure out exactly how much gas you burned. With your data set there's a little overlapping going on, so it needs to be smoothed out to get useful data. That's why the MPG formula uses 10 data points.", "step_imgs": ["https://cdn.instructables.com/FRM/G21M/GIWZM4IZ/FRMG21MGIWZM4IZ.LARGE.jpg", "https://cdn.instructables.com/FGO/Y519/GIWZM4J0/FGOY519GIWZM4J0.LARGE.jpg", "https://cdn.instructables.com/FVA/2AAC/GIWZLUGL/FVA2AACGIWZLUGL.LARGE.jpg", "https://cdn.instructables.com/FE6/NBAO/GIYWWL2D/FE6NBAOGIYWWL2D.LARGE.jpg"], "step_title": "Step 6: Calculations You Will Need"}, {"step": 7, "steps_text": "Now that you've processed your data, you need to create a visual representation of it so you can interpret the information more easily. Most of your graphs will make the most sense when you plot them over time. As in \"What is my ODO reading as time progresses?\" or \"How does my MPG change between summer and winter?\"\nTo plot your mileage, select column A, then hold control and select column B. Now both columns are selected. It' important to select the Date column first, as this tells Excel you want to use it as your X axis. Now click the \"Insert\" tab and click \"Scatter\". I found that the smooth line plot with no point protectors works the best.\nNow you can make graphs of all the data combinations you want! Go crazy! Do anything you want! Try everything you can imagine. Plot Mileage against MPG, plot your Trip against Gallons, plot things against things that don't make sense and try to find patterns, then make sense of them! However, the most useful plots to you will be:\nMileage against Date\nMiles/Day against Date\nCost against Gallons\nMPG against Date", "step_imgs": ["https://cdn.instructables.com/F44/XLUP/GIWZM4JS/F44XLUPGIWZM4JS.LARGE.jpg", "https://cdn.instructables.com/FXD/XYY9/GIWZLU72/FXDXYY9GIWZLU72.LARGE.jpg", "https://cdn.instructables.com/F2G/5ZFS/GIYWWL2E/F2G5ZFSGIYWWL2E.LARGE.jpg", "https://cdn.instructables.com/F90/S29D/GIWZM4B1/F90S29DGIWZM4B1.LARGE.jpg", "https://cdn.instructables.com/FX7/GZIU/GIYWWL2H/FX7GZIUGIYWWL2H.LARGE.jpg", "https://cdn.instructables.com/FNB/4T19/GIYWWL2I/FNB4T19GIYWWL2I.LARGE.jpg", "https://cdn.instructables.com/FJJ/CGQC/GIWZLPUT/FJJCGQCGIWZLPUT.LARGE.jpg"], "step_title": "Step 7: Creating Graphs"}, {"step": 8, "steps_text": "You can make a pie chart of the companies you visit, but this takes a few steps. Figure out how many different companies you've visited and find that many free cells somewhere off to the side. You entered the company names in the E column right? In the cells you want, type =COUNTIF(E:E,\"Chevron\")\nThe E:E tells COUNTIF to look for \"Chevron\" in all the cells in column E. You'll need to copy this formula to all the necessary cells and change the name of the company each time.\nNow select the cells with the totals you've just created and go to Insert -> Pie -> 2D Pie.\nThis makes a pie chart of your favorite companies.", "step_imgs": ["https://cdn.instructables.com/F2R/NNRE/GIYWWL2J/F2RNNREGIYWWL2J.LARGE.jpg"], "step_title": "Step 8: Company Pie"}, {"step": 9, "steps_text": "Off to the side of my graphs and tables, I created a section dedicated to totals. Remember:\nA \u00a0 \u00a0 \u00a0\u00a0 B \u00a0 \u00a0 \u00a0 C \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 D \u00a0 \u00a0 \u00a0 E\nDate ODO Gallons Cost Company\nIn the new section, enter this:\n\u00a0\u00a0\u00a0\u00a0 L\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 M\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 N\n1\n2 \u00a0 Miles Driven:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 =MAX(Milage)-MIN(Milage)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Miles\n3 \u00a0 Time: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =MAX(Date)-MIN(Date)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Days\n4 \u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =M3/365\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Years\n5 \u00a0 Avg Miles/Day:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0 =M2/M3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Miles\n6 \u00a0 Avg Miles/Year\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =M2/M4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Miles\n7 \u00a0 Fuel Consumed\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =SUM(Gallons) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 Gallons\n8 \u00a0 Avg Fuel Economy\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =M2/M7\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 MPG\n9 \u00a0 Total Fuel Cost\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =SUM(Cost)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0\u00a0 Dollars\n10 \u00a0\u00a0 Avg Cost/Month\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =M9/(M4*12)\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Dollars\n11\u00a0 CO2 Produced\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =8.877*M7/1000\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Tonnes\n12\u00a0 CO2/Year:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 =M11/M4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 Tonnes\nThe CO2 Mass is calculated in metric tonnes, which is equivalent to 2021 lbs for the metrically impaired.", "step_imgs": ["https://cdn.instructables.com/F5D/1TLN/GIWZLU7Z/F5D1TLNGIWZLU7Z.LARGE.jpg", "https://cdn.instructables.com/FA9/EVNW/GIWZM4D0/FA9EVNWGIWZM4D0.LARGE.jpg"], "step_title": "Step 9: Other Sums and Calculations"}, {"step": 10, "steps_text": "Interpreting results is pretty straightforward once you have your data and graphs. I found that I drive much more during the summer, sometimes up to five times more. I get better gas mileage on long trips. I get on average 21MPG. I would get more if I didn't drive in town so much. I've spent waaaay too much money on gas, more than my car is worth. And I'm a horrible person for generating 21 metric tonnes of CO2. There is other fun data you can glean from the graphs, for example in my cost per gallon graph there was a large singular spike in 2007 that correlated with a trip I made to California. I was about to run out of gas an had to stop in a little tourist trap gas station. Bad news. Stay away from those.\nAlso, If you ever needed motivation to stop driving your car and ride the bus or other public transport, this project is definitely for you!\nI have attached my Excel spreadsheet. You have my permission to use and modify it under the same terms as the license under which this Instructable is posted.\nI hope you found this Instructable useful, or at least not completely boring, and good luck on your own data logging!\nHave Fun!", "step_imgs": ["https://cdn.instructables.com/FDN/K4SH/GIWZLVG9/FDNK4SHGIWZLVG9.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 10: Results"}], "channel": "Cars"}, {"category": "workshop", "description": "\u6211\u8a2d\u8a08\u4e86\u500b\u5716\u6a94\uff0c\u4f7f\u7528\u96f7\u5207\u4f86\u6a21\u64ec\u50f9\u96fb\u5b50\u548c\u9375\u7d50\uff0c\u76ee\u7684\u662f\u5e6b\u570b\u9ad8\u4e2d\u751f\u4ee5\u624b\u4f5c\u597d\u73a9\u65b9\u5f0f\u5165\u9580\u9031\u671f\u8868\uff0c\u4f7f\u7528\u5834\u5408\u662f2\u7bc0\u8ab2\uff0c\u52d5\u624b\u904e\u7a0b\u8acb\u53c3\u8003\u6240\u9644\u768450\u9918\u9801\u7c21\u5831\uff0c\u96f7\u5207\u6a94\u8acb\u53c3\u8003shape.ai\uff0c\u677f\u6750\u4f7f\u75285mm\uff0c\u6b61\u8fce\u4e0b\u8f09\u5229\u7528\u548c\u56de\u5831\u7f3a\u5931^^", "title": "Periodical Table With Laser Cut", "url": "https://www.instructables.com/id/Periodical-Table-With-Laser-Cut/", "section": "workshop", "steps": [{"step": 1, "steps_text": "\u7c21\u5831\u670950\u4f86\u9801\uff0c\u9019\u88cf\u662f\u5e7e\u5f35\u7bc4\u4f8b\uff0c\u795d\u597d\u904b\uff01", "step_imgs": ["https://cdn.instructables.com/F9F/8PLR/JAYJ5Z5N/F9F8PLRJAYJ5Z5N.LARGE.jpg", "https://cdn.instructables.com/F7A/BCI7/JAYJ5Z5P/F7ABCI7JAYJ5Z5P.LARGE.jpg"], "step_title": "Step 1: Samples"}], "channel": "Laser Cutting"}, {"category": "workshop", "description": "Want to add some excitement and adventure to your life? Get a part-time job, rigging and driving a flatbed truck! So many Class 6 trucks (26,000-pound maximum legal weight) on the road are driven by those who have a general Class C driving license, and good driving record, but little or no formal Commercial Class A, or Commercial Class B truck driving training. But the Class C licensed truck drivers' responsibilities are still there, just the same. As the driver of a 4x2 Class 6 Truck, you are legally responsible for axle weights and condition of the vehicle. This fact of life becomes sharply apparent at the state highway weigh stations. Any violations, and you, as the driver, may be written up and issued a ticket, with the violation(s) on your driving record, and your personal car insurance rates may increase. Your employer may also be fined for any and all violations. If the axle weight(s) of your vehicle is over the legal limit, your vehicle will be temporarily impounded: You will be ordered to park your truck behind the weigh station, and wait there until you, or your employer, sends out another truck to transfer some of the excess load off your truck. In some cases, a third party may need to get involved to send out a forklift to transfer, or rearrange the load. Your truck will then be required to run through the weigh scales again before being allowed to return to the highway. And this clumsy, embarrassing, and irritating process will usually take several hours. But all of this can easily be avoided. Read on. Many standard 2-axle 4x2 class 6 trucks have four heavy-duty leaf springs: Two on each axle, one for each front wheel (also known as \"steer axle\"), and one for each pair of rear wheels (also known as \"drive axle\"). And you may have already observed that the undercarriage (or frame) of the truck noticeably sags under heavy loads, as the tire-to-undercarriage (or frame) distance becomes less and less. And these leaf springs, whose function is to cushion sharp impacts on the highway, can also be viewed as reasonably accurate, but uncalibrated, axle scales. But to make a long story short, start by taking your empty standard 2-axle 4x2 class 6 truck, but with a full tank of fuel, to a public scale, and get a printout of the total weight of the empty truck, as well as the individual axle weights. Public scales are sometimes quite busy, with much heavier trucks and tractor-trailer rigs waiting in line for their turn. But if there is no one waiting behind you, this is the perfect place to quickly measure the leaf spring-to-undercarriage (or frame) distance, in millimeters, before you drive away, as these scales are all on a perfectly flat surface. The best distance to measure is from the top of the leaf spring, directly over the axle, to the closest part of the undercarriage directly above it. I've found the best way to accurately measure these distances, to within half a millimeter, is to use a standard extendable-retractable chrome antenna from an old portable radio or TV. But the antenna segments must be snug and tight for an accurate measurement. I have scrounged up two of these: One is 38mm long, extendable to 99mm. And the other is 95mm long, extendable to 377mm  -enough range to work with any truck. I also cut off the screw bases of the antennas and filed them down until they were perfectly flat. Each distance taken with the extendable antenna is then carefully measured with a metric tape measure and noted. Both measurements on each axle are then averaged. Note that this handy method for determining axle weights is not suitable for individual wheel weights and lateral (left-to-right) load balance, as the leaf springs are, simply, not accurate enough for this purpose. Legally, both wheels on a given axle should be within 3% of each other, for lateral load balance, but it's not uncommon for my unorthodox method of leaf spring measurements to erroneously indicate a lateral load balance to be off by much more  -on an empty truck! But averaging both ends of a given axle completely solved the problem, as long as this method is only used for axle weights. For lateral load balance, I simply make judgments by visually examining the truck from the front, or the rear, and then making lateral load shift corrections, if needed. When the truck is fully loaded, take it back to the public scale, and get a new printout of the total weight of the fully loaded truck, as well as the individual axle weights. Also, if there is no one waiting behind you, this is, again, the perfect place to quickly measure the leaf spring-to-undercarriage distance, in millimeters, before you drive away, as noted, these scales are all on a perfectly flat surface. You now have everything you need to estimate any load with this particular truck, especially if the fully loaded weights of the second public scale visit were at, or slightly over the legal limits. Use simple straight-line calculations to quickly determine the individual axle weights for all future loads. For our 20-foot flatbed truck, the leaf spring-to-undercarriage differential is only 16.5mm (0.656\"), between a empty truck and maximum legal load, on the front axle. But each half-millimeter represents about 38 pounds of payload. This may, at first glance, seem to be an unnervingly small distance to work with to calculate the front axle weight, but the front axle on this truck is already at 82% of its maximum capacity, when empty. On the rear axle, the leaf spring-to-undercarriage differential is 60.5mm (2.375\"), between a empty and maximum legal load. Each half-millimeter represents about 105 pounds of payload. Examples of these calculations: (these numbers only applicable for this particular truck) Front Axle (7,000# maximum weight, with this particular truck): Left-Front:    96.5mm Right-Front: 87.5mm = Average:   92.0mm                         ------------                         14,103                       -(77.9 x 92.0) = Front Axle Weight: 6,936 pounds Rear Axle (19,000# maximum weight, with this particular truck): Left-Rear:    287.5mm Right-Rear: 317.5mm = Average:   302.5mm                         -------------                         82,362                       -(209.5 x 302.5) = Rear Axle Weight: 18,988 pounds Note: The above calculations are only examples. You will have to devise your own straight-line formulas, for your truck. Note that the payload capacity on the front axle, on this particular truck, is only 1/10th the payload capacity of the rear axle. In other words, the load on the front axle, of this particular truck, even when empty, is already at 82% of maximum capacity. As such, I routinely advise others, for simplicity, to think of this truck as a \"giant Segway,\" where the payload should be balanced over the rear axle. This shortcut thinking is sound, as long as the total vehicle weight is comfortably below capacity. But I've also noticed another driver's \"26,000-pound\" truck, equipped with a combined pair leaf springs / shock absorbers on each axle, with a front axle capacity of 10,640 pounds, and a rear axle capacity of 18,500 pounds, although the total weight of the vehicle is still limited to 25,995 pounds. So expect diversity in this truck classification. Now that you have determined the weights of the front and rear axles, you may need to accurately determine the weight of the payload, as well as its center of gravity. Center of gravity of payload (assumed forward of rear axle): (numbers only applicable for this particular truck)      (Front Axle 6,936# loaded weight - 5,740# empty weight) + (Rear Axle 18,988# loaded weight - 6,320# empty weight) = Total Payload 13,864#      (Front Axle Payload 1,196# \u00f7 Total Payload 13,864#) \u00d7 237.25\" Wheelbase = Payload Center of Gravity, measured in inches, forward of rear axle: 20.5\" If one of the axles exceeds maximum capacity, the payload will have to be carefully shifted away from the overloaded axle, and towards the other axle. To shift payload:      (Desired Front Axle Payload# \u00f7 Total Payload#) \u00d7 Wheelbase of truck, in inches = Revised Payload Center of Gravity, measured in inches, forward of rear axle Carefully measure and draw a chalked line on the flatbed for the loading crew to accurately shift the payload. This is especially useful when it comes to shifting a maximum capacity payload forwards, or backwards, to change the center of gravity of the payload to meet the legal axle limits  -or even to tell your loading crew that you can still take on, for example, another 3,000 pounds or so, and exactly where to place it. As the nearest public scale is, for example, a 12-mile round trip from our truck yard, quick on-the-spot truck weight calculations and payload shifts, etc., have proven to be a breeze, in comparison. Please note that public scales will always trump this quick-and-not-so-dirty method of axle weights estimation. On all maximum loads, when in doubt, it's a good idea to still make a visit to the nearest public scale before hitting the open highway. After all, Commercial Class A and Commercial Class B licensed truck drivers don't hesitate to pull their trucks onto a public scale before a long-haul. For your convenience, one of our Pre-Trip Truck Inspection Check Lists has been uploaded, as a Microsoft Word file, so you can download and modify it to suit your unique vehicle specifications and requirements. Feel free to leave comments, as information specific to other vehicles will be especially helpful and interesting. Stay tuned for additional truck inspection tips and pointers.", "title": "How to Estimate the Axle Weights of a Standard 2-Axle 4x2 Class 6 Truck", "url": "https://www.instructables.com/id/How-to-Estimate-the-Axle-Weights-of-a-Standard-2-A/", "section": "workshop", "steps": [{"step": 1, "steps_text": "The best time to do a quick check of your truck tires, as well as the air pressure in the tires, is before loading up your vehicle. All Class A truck drivers carefully check each and every tire before heading out with their tractor-trailer rigs to the open highway. But as the driver of a 26,000-pound Class 6 truck, where it's not uncommon for one of our trucks to log no more than 40 miles over a 72-hour period, quick, no-nonsense vehicle checks are our main focus. Check the recommended tire pressure, posted on a label inside the driver's door, specific to your vehicle (the same label that has the long VIN number). And ignore the tire psi noted on the tires, which is often higher than that posted on the vehicle. Inflating the tires to pressures above the recommended tire pressures stated by the vehicle manufacturer will only slightly increase the mileage of the vehicle, but will seriously reduce the footprint of the tires, reducing the ability of the truck to make sudden, controlled stops. The recommended psi pressures, for front and rear tires, are to be taken when the tires are cold. That is, ideally taken after vehicle has not been driven for 12 hours. Cold tires, if driven less than 3 miles, are also in a \"cold psi\" state.    You may have already noticed that our attached file: \"Abbreviated Pre-Trip Truck Inspection Check List\" still appears quite lengthy, especially for a quick local round trip. But, in actual practice, everything is checked out very quickly. The driver does a fast, but complete walk-around outside of the vehicle. The Check List is designed to follow the natural and logical sequence of checks around and under the vehicle, as the driver completely circles the truck and returns back to the cab. An effective and quick method to check the tire pressures: I give each of the 6 tires a good smack against the sidewall with a short length of 1\" electrical conduit pipe, striking in-line with the center of the hub, slightly off-perpendicular to the axle, so as not to strike the metal wheel rim. Any tire that is under-inflated, or over-inflated, will be clearly \"out of tune.\" My \"tool\" for this is a 22.5-inch length of 1\" EMT (26.64mm I.D./29.54 O.D.) electrical conduit pipe. Weighing 1.21 pounds, it has just enough heft to strike the sidewall of a 10R 22.5F truck tire for a quick-and-sure tire pressure check, without causing damage to the tire. Any rogue tires are then given a closer examination with a standard stick psi tire gauge. This quick tire-banger check is also effective in detecting an overloaded axle, as the tires will appear somewhat flat, yet produce a higher pitched sound when struck, indicating higher than normal tire pressures. See attached photos of a basic truck driver's tire psi check kit. Note the heavy-duty 2-way truck tire stick gauge, required for the four tires on the rear axle. Also, be sure to pack a heavy-duty dual-wheel 2-way truck tire inflator chuck with standard 1/4-inch NPT male quick-connect air hose fitting. Note that I also pack a high quality analog dial psi tire gauge, as stick psi tire gauges can go bad very quickly. This is also the perfect time to do a quick-check of the condition of the tires: Sidewalls and treads should be free of deep cuts, embedded metal objects, and damage. It's not uncommon for a small chunk to be missing from the tread, exposing the steel belts of the body of the tire, requiring a replacement of the tire. If driving on retreads, be sure to verify that the tread-to-tire bond is solid. According to federal standards, the minimum tread depth for the front tires of a 4x2 2-axel truck is 4/32nds of an inch, and the minimum tread depth for the rear tires is 2/32nds of an inch. But, in actual practice, the state highway patrol and state weigh stations usually do not lower the boom on a vehicle until the minimum tread depth of the front tires of a 4x2 2-axel truck is 2/32nds of an inch, and 1/32nds of an inch for the rear wheels. But while this may seem generous, all it takes is one \u201cmajor\u201d groove, on only one tire on your truck, to fall below this standard, and the truck be shut down and ordered off the road until the tire is replaced. A \"major\" groove can best be described as a groove(s) that contains treadwear indicators or bars, that are deep inside the groove of a new tire, but flush with the surface tread of a worn-out tire. If you are in the habit of running on retreads, it's recommended that the tires be pulled when the treads are down to 4/32nds of an inch, in order to preserve the tire casings for a good, solid retread.", "step_imgs": ["https://cdn.instructables.com/FD9/JQVW/HKZ9L137/FD9JQVWHKZ9L137.LARGE.jpg", "https://cdn.instructables.com/FFR/GFL5/HKZAVF2S/FFRGFL5HKZAVF2S.LARGE.jpg"], "step_title": "Step 1: Kicking the Tires: Checking Truck Tire Pressures"}, {"step": 2, "steps_text": "Rumors abound as to how far a given truck can be driven on a full tank(s) of fuel. And one of your first responsibilities with a new, or unfamiliar truck is to find out. The issue here is that many fuel gauges in the dashboard of many trucks are intentionally set to be ultraconservative, as to the true amount of fuel. In other words, in an effort to eliminate the possibility of the truck becoming stranded on some lonely back road, out of fuel, the fuel gauge reads \"empty\" when there is still plenty of fuel still in the tank. But the savvy truck driver not only knows how to load up his truck to near capacity, and properly balance and distribute his load over the axles, he also knows how to GPS navigate the truck along the quickest route, and seeks out the nearest 24-hour diesel fueling points only when truly necessary. Your first step, and the easiest one, is to determining the miles-per-gallon your truck is capable of:\u00a0 Completely fill up the fuel tank(s) to capacity (to just below the neck of the tank that the fuel cap screws on), and carefully note the odometer reading. Run the tank(s) down, preferably on open highway hauls, until near-empty before filling up again to capacity, carefully making note of the exact amount of fuel purchased, as well as the odometer reading. Dividing the miles driven, by the fuel consumed, will yield a highly useful miles-per-gallon highway rating for that truck. You'll also need to note how heavy a load was involved in these driving conditions. For example, if your truck was driven at 80% payload capacity, to a distant point, unloaded and returned back to the truck yard with no payload, then your mpg notes should indicate that the truck was driven on the highway, at 40% payload capacity. Multiplying the highway mileage by .67x will yield a good working city mpg rating for the truck. Your next step is to determining the true, usable capacity of the fuel tank(s). It's not uncommon for about 7% of the rated fluid capacity of a fuel tank to be unusable. In other words, if the truck was run until the tank(s) ran dry and the motor stopped, and the truck coasted to a complete stop on the roadside, there would still be up to about 7% of fuel remaining, sloshing around in the bottom of the tank(s). So I advise being a cautious cat, and factoring in that 7% in your calculations. For example, on the flatbed truck featured on this webspace, the fuel line attaches to the fuel tank about one inch from the absolute bottom of the tank, in agreement with the 7% rule. The rated fluid capacity of the tank will also be noted somewhere on the tank, usually stamped in (50 gallons on my truck, for example). The true, or usable capacity of the tank will the rated capacity less 7%. I've made measurements of fuel tanks (length, width, depth, radiused corners, in-step, etc.) and did the math, and all of them are quite accurate as to their rated fluid capacities. The final step is to fashion a simple wooden fuel dipstick. I prefer a 11/16-inch diameter wooden dowel, sanded smooth, long enough to touch the inside-bottom of the fuel tank, and also long enough to never slip into the tank and become lost. A round wooden dipstick is easier to completely wipe off any fuel so that it doesn't smell up the truck cab. I use a \"Sharpie\" fine point felt-tipped permanent marker, as it's fuel-proof. But make all preliminary markings in pencil, before finalizing them with the Sharpie. The first mark is \"0\" gallons, based on the top level of that 7% on unusable fuel. Next, dip the stick all the way into the fuel tank, vertically, until it touches the bottom of the fuel tank. Carefully mark, with a pencil, where the bottom of the fuel neck, at the top of the tank, touches the wooden dipstick. Withdraw the dipstick from the tank, wipe it dry, and carefully mark, with the Sharpie, completely around the dipstick at the true empty level and label \"0\" and \"empty\" (about an inch from the end of my dipstick, for example) and do the same for the true maximum fuel capacity (\"46.5\" gallons on my dipstick, for example). But you'll also need to properly calibrate your dipstick, for those fuel levels that fall between true empty, and true full. As most fuel tanks are somewhat complex in shape: Step-tanks, cylinder tanks, etc., and simple, even-interval gallon calibrations will just not do. But if the ends of the fuel tank are flat and vertical, here's a trick, for those who find doing more complex math gives them a headache:\u00a0 Simply make a cardboard template, actual size, radiused corners and all, of one end of the fuel tank. At this point, be sure to make the dimensions of the cardboard template a little less, so as to approximate the inside dimensions of the tank. If the tank is a step-tank, then carefully draw out the end-view of the in-step on the template. Next, measure the length of the fuel tank and divide it into the length of the step. Go back to your cardboard template, and multiply that number (will always be less than one) times the width of the step, and redraw the in-step to the narrower width to truly reflect the effect it has on fuel tank levels. Next, take the short distance on the wooden dipstick, from the end to the \"0\" true empty level, and draw it out as a horizontal line across the bottom of your cardboard template. Cut the template completely across, along the \"empty\" line, near the bottom of the tank, and throw the thin strip away. Cut out the in-step and also throw it away. If the bottom of the fuel neck is not at the top of the tank, then draw it out as horizontal line below the top of tank, and also cut it out and throw it away. What you have now is faithful to your wooden dipstick, and the \"empty\" and \"full\" marks on the dipstick should align perfectly with the vertical dimension on the cardboard template. Next, accurately weigh the cardboard template. This weight will serve as a reference for the true fuel capacity of the tank, in the calculations that will follow. Then mark, along the dipstick, as well as the cardboard template, 9 somewhat evenly spaced intervals (exact measurements are not critical, at this point). But the 9 points is not an arbitrary number, since it ultimately represents even 5-gallon increments on the finished dipstick, for this particular tank. These 9 points are then carefully drawn out as 9 horizontal, parallel lines across the cardboard template. The dipstick and cardboard should completely match up on this. Starting at the top of the cardboard template, completely cut off the top (9th section) and throw it away. Accurately weigh the remaining cardboard template and divide that weight by the weight of the full cardboard template. Multiply the result times the true gallon capacity of the fuel tank to yield an accurate lower fuel level, in gallons, to pencil in on your wooden dipstick. Continue the process, step by step, down to the last section. Although you will now have a calibrated dipstick, it will be marked in an unwieldy series of odd gallons and fractions of gallons. At this point, it's safe to use straight-line interpolations to plot even groups of gallons (5, 10, 15, 20, 25, etc.). When done, carefully draw those corrected gallon marks, every 5 gallons, with a Sharpie, completely around the dipstick, and labeled with the appropriate gallons for each. Also, you should mark a dotted \"Empty!\" line at about 10% of the tank's actual capacity (or at the 5-gallon mark, for example, on my 46.5-gallon wooden fuel dipstick), above the \"0\" gallon mark on your wooden dipstick, since \"0\" is when the truck runs out of gas, and coasts to a stop on the roadside. And if your truck has left and right fuel tanks, be sure to base all mileage on the tank with the lowest level, as dual tanks seem to never have perfectly balanced fuel levels. Lastly, Clearly label your dipstick, with a Sharpie, as to exactly which truck it was designed for. And be sure to keep a record of the measurements and gallon marks, in case the dipstick gets lost. A side note: In aviation and marine applications, fuel tanks can be so irregular and complex that the only method is to completely empty the fuel tank, then add exactly 2 gallons of fuel, at a time, until the tank is full, and the do-it-yourself dipstick is fully calibrated. But do a quick check on the internet first, as many have already posted their DIY fuel dipstick calibration notes for specific production aircraft and mass-produced boats.\u00a0 \u00a0", "step_imgs": ["https://cdn.instructables.com/F62/2C7R/HKZ9IMR4/F622C7RHKZ9IMR4.LARGE.jpg", "https://cdn.instructables.com/F96/THVU/HKVKP6PJ/F96THVUHKVKP6PJ.LARGE.jpg"], "step_title": "Step 2: What Is the Actual Miles-Per-Gallon Range of Your Truck?"}], "channel": "Cars"}, {"category": "workshop", "description": "A chemical equation is the chemical formula that provides the information of the elements and molecules that are reacting as well as the molecules that are being produced from that reaction. The Law of Conservation of Mass states that the mass of the reactants must balance the mass of the products. To meet the requirements of the Law of Conservation of Mass, to balance a chemical equation, the atoms of both the elements and compounds on the reactant side (left side) and product side (right side) must be equal to each other.In this instructable, you will understand and learn how to balance a chemical equation.This instructable should take no longer than ten minutes.", "title": "How to Balance a Chemical Equation ", "url": "https://www.instructables.com/id/How-to-Balance-a-Chemical-Equation-Initial-Draft/", "section": "workshop", "steps": [{"step": 1, "steps_text": "The unbalanced chemical equation is given to you.Aluminum reacts with oxygen to produce aluminum oxide. Rewrite the equation as shown above.", "step_imgs": ["https://cdn.instructables.com/FJ7/JD9N/IMF3W8I0/FJ7JD9NIMF3W8I0.LARGE.jpg"], "step_title": "Step 1: The Unbalanced Chemical Equation"}, {"step": 2, "steps_text": "Start off by identifying the elements on the reactant side (left side) and the elements of the compound on the product side (right side).make a list of all of the elements on each side under the equation for both the reactants and products as shown above  Under the reactant\u2019s side, list Al and O  under the product\u2019s side, list Al and O", "step_imgs": ["https://cdn.instructables.com/FUE/HXGJ/IMF3W0E5/FUEHXGJIMF3W0E5.LARGE.jpg"], "step_title": "Step 2: Make a List"}, {"step": 3, "steps_text": "An atom is the smallest component of an element that contains chemical properties of that element. The atom of each element\u2019s contains the protons, neutrons, and electrons of that element.The list made of each element on both the reactant and product side will further help you identify the number of atoms each element contains.Next to each element of the list, put the number of atoms that are in each of the elements.on the reactants side, next to Al, put 1   next to O, put 2apply these same rules to each element on the product side", "step_imgs": ["https://cdn.instructables.com/F4X/54KP/IMF3W0FT/F4X54KPIMF3W0FT.LARGE.jpg"], "step_title": "Step 3: Identifying the Atoms in Each Element"}, {"step": 4, "steps_text": "Notice how the number of atoms next to each element is different from the number of atoms next to that same element on the product side.In order to balance the chemical equation, you need to make sure the number of atoms of each element on the reactant side is equal to the number of atoms of each element on the product side. In order make both sides equal, you will need to multiply the number of atoms in each element until both sides are equal.As shown above, the multiplication of the atoms on the reactant side will affect both elements on the product side.", "step_imgs": ["https://cdn.instructables.com/F74/TKOQ/IMF3W0GZ/F74TKOQIMF3W0GZ.LARGE.jpg"], "step_title": "Step 4: Multiplying the Number of Atoms"}, {"step": 5, "steps_text": "After you have multiplied the number of atoms of each element until both sides are equal, you will put the number, the coefficient, of how much you multiplied the element by and place in front of that element or compound in the equation as shown above.On the product side, although both elements did not get multiplied, still place the number that was multiplied as the coefficient in front of the compound.", "step_imgs": ["https://cdn.instructables.com/FGX/515D/IMF3W0JJ/FGX515DIMF3W0JJ.LARGE.jpg"], "step_title": "Step 5: Placing Coefficients in Front of Molecules"}, {"step": 6, "steps_text": "After you have placed the coefficients in front of the molecules, make the list of elements again and check to see if multiplying the coefficient with the subscript will give you atoms equal on both the reactant and product sides.If they are not equal, rework your multiplication.", "step_imgs": ["https://cdn.instructables.com/F4V/JRDG/IMF3XRVL/F4VJRDGIMF3XRVL.LARGE.jpg"], "step_title": "Step 6: Check the Equation"}, {"step": 7, "steps_text": "After you have reworked your multiplication, make the list of elements again to check to make sure the equation is balanced. If both sides are equal, you have now balanced the chemical equation!", "step_imgs": ["https://cdn.instructables.com/FJI/C6MB/IMF3W0P4/FJIC6MBIMF3W0P4.LARGE.jpg"], "step_title": "Step 7: Balanced Chemical Equation"}], "channel": "Solar"}, {"category": "workshop", "description": "A chemical equation is the chemical formula that provides the information of the elements and molecules that are reacting as well as the molecules that are being produced from that reaction. The Law of Conservation of Mass states that the mass of the reactants must balance the mass of the products. To balance a chemical equation, the atoms of both the elements and molecules on the reactant side (left side) and product side (right side) must be equal to each other.In this instructable, you will understand and learn how to balance a chemical equation.This instructable should take no longer than ten minutes.", "title": "How to Balance a Chemical Equation", "url": "https://www.instructables.com/id/How-to-Balance-a-Chemical-Equation-1/", "section": "workshop", "steps": [{"step": 1, "steps_text": "The unbalanced chemical equation is given to you. Aluminum reacts with oxygen to produce aluminum oxide. Rewrite the equation as shown above.", "step_imgs": ["https://cdn.instructables.com/F6C/5S74/IMF3Y2FY/F6C5S74IMF3Y2FY.LARGE.jpg"], "step_title": "Step 1: The Unbalanced Chemical Equation"}, {"step": 2, "steps_text": "First, identify the elements on the reactant side(left side) and the elements of the compound are on the product side (right side).make a list of all of the elements on each side under the equation for both the reactants and products as shown aboveUnder the reactant\u2019s side, list Al and Ounder the product\u2019s side, list Al and O", "step_imgs": ["https://cdn.instructables.com/FYP/DQKG/IMF3Y2HD/FYPDQKGIMF3Y2HD.LARGE.jpg"], "step_title": "Step 2: Make a List"}, {"step": 3, "steps_text": "An atom is the smallest component of an element that contains chemical properties of that element. The atom of each element\u2019s contains the protons, neutrons, and electrons of that element.The list made of each element on both the reactant and product side will further help you identify the number of atoms each element contains.Next to each element of the list, put the number of atoms that are in each of the elements. on the reactants side, next to Al, put 1 next to O, put 2apply these same rules to each element on the product side", "step_imgs": ["https://cdn.instructables.com/FV4/55SA/IMF3Y2IZ/FV455SAIMF3Y2IZ.LARGE.jpg"], "step_title": "Step 3: Identifying the Atoms in Each Element"}, {"step": 4, "steps_text": "Notice how the number of atoms next to each element is different from the number of atoms next to that same element on the product side.In order to balance the chemical equation, you need to make sure the number of atoms of each element on the reactant side is equal to the number of atoms of each element on the product side. In order make both sides equal, you will need to multiply the number of atoms in each element until both sides are equal. As shown above, the multiplication of the atoms on the reactant side will affect both elements on the product side.", "step_imgs": ["https://cdn.instructables.com/F8J/XZZK/IMF3Y2VQ/F8JXZZKIMF3Y2VQ.LARGE.jpg"], "step_title": "Step 4: Multiplying the Number of Atoms"}, {"step": 5, "steps_text": "After you have multiplied the number of atoms of each element until both sides are equal, you will put the number, the coefficient, of how much you multiplied the element by and place in front of that element or compound in the equation as shown above.On the product side, although both elements did not get multiplied, still place the number that was multiplied as the coefficient in front of the compound.", "step_imgs": ["https://cdn.instructables.com/FQS/R63P/IMF3Y3S8/FQSR63PIMF3Y3S8.LARGE.jpg"], "step_title": "Step 5: Placing Coefficients in Front of Molecules"}, {"step": 6, "steps_text": "After you have placed the coefficients in front of the molecules, make the list of elements again and check to see if multiplying the coefficient with the subscript will give you atoms equal on both the reactant and product sides.If they are not equal, rework your multiplication.", "step_imgs": ["https://cdn.instructables.com/F3J/2QNW/IMF3Y4N8/F3J2QNWIMF3Y4N8.LARGE.jpg"], "step_title": "Step 6: Check Equation"}, {"step": 7, "steps_text": "After you have reworked your multiplication, make the list of elements again to check to make sure the equation is balanced. If both sides are equal, you have now balanced the chemical equation!", "step_imgs": ["https://cdn.instructables.com/FUK/YQOB/IMF3Y57R/FUKYQOBIMF3Y57R.LARGE.jpg"], "step_title": "Step 7: Balanced Chemical Equation"}], "channel": "Solar"}, {"category": "workshop", "description": "\r\nThis instructable is a work in progress, will add more as i have time over the next week or so.\r\nIn this instructable i will go through the steps i used to make a web based, real\u00a0time,\u00a0electricy and gas meter, for about $5.\u00a0 I saw the google power meter online a while ago and really wanted it, but i knew that i would be ages away from getting it, even more so living in New Zealand.\u00a0 So i went about making my own version, and in some ways it is beter than it i think.\r\nThe link to my website is www.sites.google.com/site/19acussen\r\nThere are a couple of things you need to have to be able to make this work for less than $5.\r\n1)\u00a0 An electricity \u00a0meter that has a flashing light on it, instead of the rotating disc.\u00a0 The flashing light flashes 1 for every unit of energy used.\u00a0\u00a0 If you want to add a gas meter then your gas meter has to have a magnet pick up on it - will explain later.\r\n2) A computer with a serial port that is always on - i use a mac mini that is connected to my TV for movies e.t.c.\u00a0 This draws about 30w, which is not much.\r\n3) Basic soldering skills, computer skills and lots of perseverance.\u00a0 You will need to be able to program a picaxe or similar as well - very simple to do.\r\n4) A free google account (gmail, google docs e.t.c)\r\nAnd thats about it, it took me a few hours to make the electronics, and a very long time to get all of the uploading,\u00a0filtering and publishing to a website sorted.\u00a0 I have done the ground work for this so it will be easy for you.", "title": "The Real $5,  Web Based Power and Gas Meter", "url": "https://www.instructables.com/id/the-real-5-web-based-power-and-gas-meter/", "section": "workshop", "steps": [{"step": 1, "steps_text": "\r\nThe electronics are very simple.\r\nYou need a few resistors, an LDR\u00a0and a 08m picaxe chip.\u00a0 Steps as follows\r\n1)\u00a0 Construct a stanadard picaxe download circuit. \r\n2)\u00a0 Add an LDR input to that cuircuit.\u00a0 Put the LDR on a lenght of wire so that it can reach from your power meter to your computer.\r\n3)\u00a0 If required the gas meter can be added as well, all this is a switch input, held high with a 10k resistor to one of the inputs.\u00a0 The switch is a magnetic reed switch.\r\nThis above steps are very easy to do, for more infomation look at the manuals here, http://www.rev-ed.co.uk/picaxe/\u00a0 \r\nThey explain everything in lots of detail and a lot beter than i can explain here.\r\nIf required the gas meter can be added as well, all this is a switch input, held high with a 10k resistor to one of the inputs.", "step_imgs": ["https://cdn.instructables.com/FHN/GSZW/G43E48WC/FHNGSZWG43E48WC.LARGE.jpg", "https://cdn.instructables.com/FE9/YAJO/G43E48XE/FE9YAJOG43E48XE.LARGE.jpg"], "step_title": "Step 1: The Electronics.."}, {"step": 2, "steps_text": "There is a\u00a07 step process to get the data from your power and gas meter to be displayed on a website.\r\n1)\u00a0 data is collected\u00a0by the picaxe, this counts the rotations of the gas meter, and the pulses of the electricity meter.\u00a0 This uploads the\u00a0total of each\u00a0via the serial out comand every 5 minutes or so.\r\n2)\u00a0 On the computer, a python script is running, this is always looking for serial data coming into the serial port.\u00a0 Once it sees this data it uploads it to the web.\r\n3) The python script on the computer uploads the data to a google spreadsheet\r\n4)\u00a0The goolge spreadsheet takes that data and sorts it, and makes pretty graphs and gauges.\r\n5) the google spreadsheet publishes the data feeds for the graphs.\r\n6) a google website gets the published data from the spreadsheet and displays it.\r\n7) as an added step i used software on the mac mini to display the website as the desktop back ground (hence the website being 1920 wide)", "step_imgs": [], "step_title": "Step 2: The Software"}, {"step": 3, "steps_text": "", "step_imgs": [], "step_title": "Step 3: Picaxe Code"}, {"step": 4, "steps_text": "", "step_imgs": [], "step_title": "Step 4: The Python Script"}, {"step": 5, "steps_text": "This is where the data gets uploaded to.\u00a0 It's an online free spreadsheet powered by google docs.\r\n1)\u00a0 Create a new google account.\u00a0 i used mark.duyvesteyn.powermeter@gmail.com\r\n2) click on this link\u00a0http://spreadsheets.google.com/ccc?key=0AnIVnWY0exTWdGdTUE5UUHRob21ISmx3d1V3M3E2ZkE&hl=en\r\nThis is my spreadsheet where i have made formulars e.t.c. to make the graphs e.t.c.\r\n3)\u00a0 Click file, save as copy rename it to \"mydata\"\r\nThe spreadsheet will be a good starting point for you, and will make pretty graphs but will need to be calibrated to your picaxe code and to your meter to get accurate data.\r\nThe pyhton script will upload the data into the data worksheet.\u00a0 The other worksheets pull the data from there and manipulate it into graphs e.t.c.", "step_imgs": [], "step_title": "Step 5: The Google Docs Spreadsheets"}, {"step": 6, "steps_text": "", "step_imgs": [], "step_title": "Step 6: The Google Website"}, {"step": 7, "steps_text": "", "step_imgs": [], "step_title": "Step 7: The Future"}, {"step": 8, "steps_text": "", "step_imgs": [], "step_title": "Step 8: "}], "channel": "Energy"}, {"category": "workshop", "description": "Added the out feed and side extensions and other goodies to this i wee table saw", "title": "Up Dated Extensions to the Rockwell Mini Table Saw", "url": "https://www.instructables.com/id/Up-Dated-Extensions-to-the-Rockwell-Mini-Table-Saw/", "section": "workshop", "steps": [{"step": 1, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/F9C/YOCU/ISZ6ARWU/F9CYOCUISZ6ARWU.LARGE.jpg", "https://cdn.instructables.com/F5I/7CYW/ISZ6ARZH/F5I7CYWISZ6ARZH.LARGE.jpg", "https://cdn.instructables.com/FVZ/HZ33/ISZ6AS23/FVZHZ33ISZ6AS23.LARGE.jpg"], "step_title": "Step 1: "}], "channel": "Tools"}, {"category": "technology", "description": "You can use this as a guide to make maps of mountains you climbed, places you've been or places you will go. I did this project as a present to my father, I thought a topographical map of his home would be pretty cool.", "title": "CNC or 3D Print a Topographical Map", "url": "https://www.instructables.com/id/CNC-or-3D-Print-a-Topographical-Map/", "section": "technology", "steps": [{"step": 1, "steps_text": "So because of who I am as a person cheap is quick are my goals when working on a project. For this project you need the free version of Sketchup.--You will also need to download a Sketchup extension called Sandbox--And an extension called Sketchup-STL to convert your file is also needed.Besides software you need access to a CNC machine or a 3D printer. There are many places that offer CNC and 3D printing use for a small fee.", "step_imgs": ["https://cdn.instructables.com/FPT/EMEQ/IVO3UYJL/FPTEMEQIVO3UYJL.LARGE.jpg"], "step_title": "Step 1: What You Need:"}, {"step": 2, "steps_text": "Now to get to work:Open SketchupMake sure your location toolbar is turned on. (it is circled on the second Image). If you cannot fine it click: View > Toolbars > and make sure is checked Location.", "step_imgs": ["https://cdn.instructables.com/FWB/ZL5Y/IVO3UYI0/FWBZL5YIVO3UYI0.LARGE.jpg", "https://cdn.instructables.com/FS8/EZYG/IVO3UYI1/FS8EZYGIVO3UYI1.LARGE.jpg", "https://cdn.instructables.com/F4W/DHP6/IVO3UYI4/F4WDHP6IVO3UYI4.LARGE.jpg", "https://cdn.instructables.com/FGA/2Z3I/IVO3UYIP/FGA2Z3IIVO3UYIP.LARGE.jpg"], "step_title": "Step 2: Enable Location"}, {"step": 3, "steps_text": "Click the highlighted button in the picture above. It should open a new window (shown in the second image) of a map. Stretch the screen out until you see the \"select region\" button.Type a location into the search bar and zoom out on the map until you see a white square. This white square shows you what terrain you will be using. It will not become any larger but I will show you how to increase the area of the topographic map in the next step. When happy with the area click \"select region\", then select \"grab\". You should end up with something similar to what is seen in the 4th picture.", "step_imgs": ["https://cdn.instructables.com/FS8/EZYG/IVO3UYI1/FS8EZYGIVO3UYI1.LARGE.jpg", "https://cdn.instructables.com/FY1/QC7L/IVO3UYIL/FY1QC7LIVO3UYIL.LARGE.jpg", "https://cdn.instructables.com/FXL/EU29/IVO3UZ4Y/FXLEU29IVO3UZ4Y.LARGE.jpg", "https://cdn.instructables.com/FE2/QYWF/IVO3UYI6/FE2QYWFIVO3UYI6.LARGE.jpg"], "step_title": "Step 3: Chose Location"}, {"step": 4, "steps_text": "If the area picked out is to small for you you can make it larger.repeat the previous steps but when you select land this time shift it of to the side. (mak sure they over lap though so there are no holes in you map).To do this I like to find a landmark and use it as a reference point when selecting the regions as you can see in the photos above.YOU CAN DO THIS AS MANY TIMES AS YOU LIKE.MAKE SURE TO GROUP THEM TOGETHER BY RIGHT CLICKING AND SELECTING GROUP FROM THE DROP DOWN MENU.", "step_imgs": ["https://cdn.instructables.com/FXL/EU29/IVO3UZ4Y/FXLEU29IVO3UZ4Y.LARGE.jpg", "https://cdn.instructables.com/FFV/0L0Z/IVO3UZ4O/FFV0L0ZIVO3UZ4O.LARGE.jpg"], "step_title": "Step 4: IF You Want More Land"}, {"step": 5, "steps_text": "So now you have a flat map. To make it follow its real land form go look at the location toolbar we opened earlier and select the \"toggle terrain\" button which is also highlighted in the first image.Now you can orbit and marvel at the form of the mountains.Lastly select your entire map and right click it then select unlock.", "step_imgs": ["https://cdn.instructables.com/FFA/X1CH/IVO3V0FN/FFAX1CHIVO3V0FN.LARGE.jpg", "https://cdn.instructables.com/F0G/UTHQ/IVO3V0FH/F0GUTHQIVO3V0FH.LARGE.jpg", "https://cdn.instructables.com/FAB/S9N8/IVO3V0GQ/FABS9N8IVO3V0GQ.LARGE.jpg"], "step_title": "Step 5: Lets Get Rockin"}, {"step": 6, "steps_text": "Now we need to somehow get that shape onto a flat rectangle.Don't sweat, I figured it out fam.Orient your view so you are look directly down at your map. Or you can open the \"views\" toolbar in the same manner we opened the \"locations\" tool bar in one of the earlier steps, and use that to get the desired view. Which ever way you used you should see something resembling that of the first picture.  To make things easier make sure parallel projection is turned off; to do so click camera > parallel projection.   Now beside your map draw a rectangle with the rectangle tool. Make sure it's bigger than your map. Then using the move tool and place it over top of you map.Once you have something similar to the third image you can proceed to the next step.", "step_imgs": ["https://cdn.instructables.com/FSG/KE7M/IVO3V1QR/FSGKE7MIVO3V1QR.LARGE.jpg", "https://cdn.instructables.com/FJQ/HILU/IVO3V1QO/FJQHILUIVO3V1QO.LARGE.jpg", "https://cdn.instructables.com/FBM/DF4I/IVO3V8MF/FBMDF4IIVO3V8MF.LARGE.jpg"], "step_title": "Step 6: Birds Eye View"}, {"step": 7, "steps_text": "Now shift your view so that you are looking at your model from the side.ensure that only the rectangle is selected and using the move tool. Move the rectangle down so it is below the map.  If you are struggling to bring it down with out moving it in the other planes just the hold the down arrow while you are moving it to lock its movements to the blue axis.", "step_imgs": ["https://cdn.instructables.com/FA2/4V1S/IVO3V3NU/FA24V1SIVO3V3NU.LARGE.jpg"], "step_title": "Step 7: Eye Level"}, {"step": 8, "steps_text": "Now its time to finally bring it all together. Using the sandbox extension which can be found under the \"tools\" drop down menu select the stamp option.Using the stamp tool select the map.Note this may take a couple minutes. You can see the loading time in the bottom left corner of Sketchup.After the map has been selected click on the rectangle.Again this will take some time depending on your computer and the size of your map.Finally when it is finished loading you will be able to chose the height of your map. You should have something that looks like the 2nd image.", "step_imgs": ["https://cdn.instructables.com/FVI/BPES/IVO3V3UV/FVIBPESIVO3V3UV.LARGE.jpg", "https://cdn.instructables.com/F5K/77CX/IVO3V8WR/F5K77CXIVO3V8WR.LARGE.jpg"], "step_title": "Step 8: SandBox"}, {"step": 9, "steps_text": "All that's left to do is delete the google earth map and save your work.To do so, because of the .STL extension we downloaded at the beginning click the STL export button shown in the second image and save your model. Now all you have to to is take the file to someone who has a CNC machine or a 3D printer.side note: It is also very important you take the time to make sure the model is a reasonable size. If it need adjusting you can easily do so using the scale tool.As soon as I get my model out of the lab I'll update this with a photo of the final product.", "step_imgs": ["https://cdn.instructables.com/F24/3MKB/IVO3V9IN/F243MKBIVO3V9IN.LARGE.jpg", "https://cdn.instructables.com/FTS/WFF3/IVO3VHIS/FTSWFF3IVO3VHIS.LARGE.jpg", "https://cdn.instructables.com/FC0/IIWZ/J2KP9F2H/FC0IIWZJ2KP9F2H.LARGE.jpg"], "step_title": "Step 9: Scaled the Mountain "}], "channel": "CNC"}, {"category": "technology", "description": "A DIGITAL MELTING POINT APPARATUS  \u00a0A very frequently performed operation in organic chemistry laboratories is the determination of the melting point of a solid specimen. The temperature at which a sample melts is indicative of the purity and identity of the substance. Originally the sample, contained in a 1.5 mm diameter glass capillary tube, was heated in a bath filled with mineral oil ( or sometimes concentrated sulphuric acid ) with a Bunsen burner until melting occurred, and the bath temperature read from a thermometer. This method involves some hazards from the use of an open flame and the chance of spilling the hot liquid while the operator has their face next to the bath observing the sample. Electrically heated melting point devices were introduced to reduce these risks, and there are now several designs on the market, ranging from a simple electrically heated metal block up to computer controlled automatic instruments which record the entire operation on a video camera. Prices for these items range from a few hundred up to several thousand dollars. Here I describe how to build an apparatus which will do the job at very reasonable cost, while providing many of the features of the more expensive commercial versions. The following items are required ( approximate prices as found on eBay )  \u00a0[A] Aluminium Heating Block, 30 mm x 20 mm x 20 mm $ 5.00[B] Soldering iron 220 V 60 W Temperature Controlled ~400 C $ 18.00[C] Magnifier loupe, 3 X $ 2.50[D] 2 x Computer Cooling Fans, 40 mm \u00f8 ,12 V DC\u00a0 $ 4.00[E] Rocker switch, \u00a0SPST 220 V + SPST Toggle Switch \u00a0$ 4.00[F] Digital Thermometer 0- 1300 oC x 0.1 oC Type K Thermocouple\u00a0\u00a7 $ 20.00[G] White LED 6000 mcd 5 mm \u00f8 Dimmer control$ 2.00[H] SCR Energy Regulator 220 V 500 W $ 5.00[J] 12 V DC 300 mA Plug Pack $ 4.00[K] Aluminium Tubing, 10 mm \u00f8 x 150 mm $ 1.00[L] Metal case* , assorted screws & nuts, brackets, electrical terminals & wire , assorted screws$ 20.00[M] 6 mm\u00a0\u00f8\u00a0x 75 mm bolt, head removed\u00a0Total $ 88 approx.* If you can use an existing case or make one, this will save some money. I salvaged the case from an old compact disc player, cut and shut to a suitable size ( 260 mm x 170 mm x 75 mm ).\u00a7 This model gives readings to \u00b1 0.1 oC, and has a DATA HOLD feature which is very convenient. A cheaper model ( $ 6.00 ) which reads to \u00b1 1 oC can be substituted if less accuracy is accepted. \u00a0A digital meat thermometer as shown above can also be used.\u00a0BRIEF OUTLINE OF THE APPARATUS\u00a0\u00a0The soldering iron is the basis of the heating system, which is controlled by an SCR energy regulator. The soldering tip is removed and an aluminium block is attached in its place, connected by abolt which has its head cut off. Holes are drilled in the block for the capillary tubes and the thermocouple sensor. The white LED illuminates the sample from the back, and the magnifier shows an enlarged view of the samples. Two cooling fans provide rapid cooling between measurements, and a digital thermometer indicates the sample temperature. \u00a0  \u00a0", "title": "\"MELT-O-MATIC\" DIGITAL MELTING POINT APPARATUS", "url": "https://www.instructables.com/id/MELT-O-MATIC-DIGITAL-MELTING-POINT-APPARATUS/", "section": "technology", "steps": [{"step": 1, "steps_text": "The heating block was formed from a stack of aluminium plates as shown above. \u00a0These were cut from\u00a020 mm x 5 mm \u00a0aluminium bar stock. There are 6 pieces required . \u00a0The components are held together by 4 small bolts. A hole 5 mm diameter was drilled through parallel to the bolts. \u00a0Four 2 mm diameter holes were drilled down from the top for the capillary tubes and thermocouple probe. \u00a0When using small drills like this, it is vital to lubricate the work while drilling, otherwise the drills\u00a0 will snap.", "step_imgs": ["https://cdn.instructables.com/FTN/123C/HO232J2C/FTN123CHO232J2C.LARGE.jpg", "https://cdn.instructables.com/FJE/5TDL/HO22Y251/FJE5TDLHO22Y251.LARGE.jpg", "https://cdn.instructables.com/FSA/FHB5/HO23381S/FSAFHB5HO23381S.LARGE.jpg"], "step_title": "Step 1: Heating Block Construction"}, {"step": 2, "steps_text": "  \u00a0SAFETY WARNINGThis equipment operates at mains voltages; be sure that you understand how to do mains wiring safely or get someone who is qualified to do it to help you. Mistakes can be FATAL !The photo above shows the parts ( refer to the\u00a0 parts list for identification ). \u00a0These \u00a0were laid out inside the case as in the next photo. All parts except the heater switch, SCR controller, magnifying lens and LED were mounted on the base, using \u00a0metal brackets and screws.\u00a0A 10 mm diameter hole was drilled in the base for the LED tube, and a 25 mm diameter hole cut in the lid to allow viewing of the heating block with a magnifying lens. The remaining parts were mounted on the lid. \u00a0The case I used had an opening along the top edge allowing access for the capillary tubes as well as providing ventilation for the heated components. \u00a0If you are using a closed case, an opening would need to be cut for this purpose, and a number of ventilation holes drilled above the soldering iron.\u00a0 After mounting the parts, the wiring was completed as in the diagram above.The LED and its dimmer control are mounted on the 10 mm diameter aluminium tube extending from the back of the instrument. \u00a0A small bracket was used to attach the tube to the back of the case. At the front, the magnifying lens is mounted above the hole in the heating block so that the capillary tubes are clearly focused when inserted in the block. Some epoxy adhesive can be used to fix the magnifier in place. On the bottom of the case can be seen the wire bail arm used to hold the apparatus at a comfortable viewing angle. This can be made using the wire from a coat hanger.", "step_imgs": ["https://cdn.instructables.com/FT7/YANM/HO238P1X/FT7YANMHO238P1X.LARGE.jpg", "https://cdn.instructables.com/F2U/CVBS/HO22Y254/F2UCVBSHO22Y254.LARGE.jpg", "https://cdn.instructables.com/FTM/BY5P/HO232J4C/FTMBY5PHO232J4C.LARGE.jpg", "https://cdn.instructables.com/FR6/S97X/HN825LIQ/FR6S97XHN825LIQ.LARGE.jpg", "https://cdn.instructables.com/F0S/F4AR/HO22Z2W7/F0SF4ARHO22Z2W7.LARGE.jpg", "https://cdn.instructables.com/FFN/AOSP/HO233U42/FFNAOSPHO233U42.LARGE.jpg"], "step_title": "Step 2: PARTS LAYOUT & WIRING"}, {"step": 3, "steps_text": "\u00a0 \u00a0 \u00a0 \u00a0CALIBRATION OF THE INSTRUMENTBefore measuring sample melting points, it will be useful to calibrate the SCR regulator settings vs. heatup rate ( oC per minute ). This can be done by recording the temperature at 2 minute intervals at each setting of the regulator and finding the average slope of the temperature-time graph. ( see graph above )The thermometer reading may be calibrated by observing the melting points of at least two known pure substances. Two readily available substances are naphthalene (lit. mp 82 oC \u2020) and urea ( Lit. mp 133 oC \u2020). The determinations should be carried out in duplicate with fresh samples at a slow heatup rate ( 1.0 oC per minute maximum ) to avoid thermal lag effects. [ See Step 4 for details of method ].\u2020 These are final melting points, the temperature at which the sample is completely liquid.A calibration graph can then be made ( see above ) showing any correction to be applied to the thermometer reading. Alternatively, the corrected temperature can be calculated from the following equation :  Ts= TA \u00a0+ [(ts- tA )*(TB - \u00a0TA)/(tB - tA) ] \u00a0 \u00a0  Ts= Corrected temperature for sample \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 tA= indicated m.pt. for standard A ;t s= Indicated m.pt. for sample ; \u00a0\u00a0T A = Literature m.pt for standard A;\u00a0 \u00a0 \u00a0 \u00a0\u00a0 tB = indicated m.pt. for standard B\u00a0;  \u00a0 TB= Literature m.pt for standard B;\u00a0This equation reduces to the form Ts = a\u00a0* ts +\u00a0b where\u00a0a\u00a0&\u00a0b are constants.  The Excel spreadsheet CalibrationGraphA.xls below can be used to generate the graph and compute the coefficients a\u00a0&\u00a0b.", "step_imgs": ["https://cdn.instructables.com/F0J/RWIE/HO7XHHVK/F0JRWIEHO7XHHVK.LARGE.jpg", "https://cdn.instructables.com/FUE/44F0/HO7X33JS/FUE44F0HO7X33JS.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 3: CALIBRATION OF THE INSTRUMENT"}, {"step": 4, "steps_text": "\u00a0THE DETERMINATION OF MELTING POINTS Pure crystalline substances have a fixed and sharply defined temperature at which they change from solid to liquid. Since the melting process requires thermal energy input to disrupt the crystal lattice, the temperature remains constant while melting takes place, provided that the two phases are in equilibrium. In a laboratory melting point determination, this condition is not usually achieved and the melting of the sample is observed to occur over a small temperature range, typically 1 \u2013 2 degrees Celsius. The situation changes when the sample is not completely pure, and the presence of impurities in the sample will cause melting to occur at a lower temperature and over a broader range. This depression of the melting temperature increases as the amount of impurity increases, making the observation of a sample's melting range a useful indicator of its purity. ( This does not apply to some substances which decompose before reaching their melting point ). The melting point depression phenomenon can be applied to testing two samples to confirm whether they are the same substance. If a mixture of approximately equal parts of the two samples melts at the same temperature as the two individual samples, then it is almost certain that they are identical. ( There are a few rare exceptions, but these can be eliminated by testing further mixtures of different proportions. ) In practice, the melting point test is carried out on a small amount of finely powdered substance contained in a length of 1.5 mm diameter capillary tubing which has been sealed at one end by melting in a gas flame. The depth of the sample in the tube should be 2 \u2013 3 mm after packing the sample in the sealed end by tapping the tube on the bench. It is essential that the sample is completely dry and free from residual solvents. The tube containing the sample is then slowly heated in a suitable apparatus while closely observing the sample for changes. As the temperature nears the melting point, the tiniest crystals adhering to the wall of the capillary tube will be seen to melt first, followed shortly afterwards by the bulk of the sample beginning to shrink, collapse and liquefy. This temperature is recorded as the INITIAL MELTING POINT. Soon a meniscus forms at the top of the sample, while some solid remains in the lower portion. The solid portion rapidly decreases until the moment when the sample becomes entirely liquid. This is recorded as the FINAL MELTING POINT. It is normal to carry out a preliminary test at a fairly rapid heatup rate, and then repeat the test approaching the melting point more slowly for a more accurate result. Once a sample has been melted, it can not be re-used. A fresh sample must be prepared for a duplicate test. ALTERNATIVE METHOD It is also possible with this apparatus to eliminate the capillary tubes and place the test specimens between two microscope slide cover slips. These are small squares of glass, about 18 mm square and 0.2 mm thick. \u00a0The glass \"sandwich\" is placed directly on top of the heater block. \u00a0To utilise this method, the top of the block needs to be filed, sanded and polished with fine abrasive paper to obtain a smooth surface. \u00a0The test specimen is observed while the temperature is increased slowly, and the temperature range over which the sample undergoes melting is recorded. \u00a0This method is less accurate than the capillary tube method, but when suitably calibrated against known standard compounds will still give good results. It has the advantage that the tedious process of preparing and filling capillary tubes is avoided.\u00a0", "step_imgs": ["https://cdn.instructables.com/F8A/IQ65/HN82O9W4/F8AIQ65HN82O9W4.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 4: DETERMINATION OF MELTING POINTS"}, {"step": 5, "steps_text": "The following ideas for improvement are suggested. In order to meet the deadline for the Lab Equipment contest, I have not had time to develop these.  ~\u00a0 A webcam could be attached to display an image of the melting point capillaries and the temperature readout on a computer monitor, and record the operation. \u00a0  ~ Suitable image processing software could detect the changes in the optical properties of the tube contents and record the melting temperatures automatically.  With these improvements, the equipment would perform comparably to commercial equivalents costing $ 2500 or more.  \u00a0", "step_imgs": [], "step_title": "Step 5: IMPROVEMENTS"}], "channel": "Science"}, {"category": "technology", "description": "I work with the Public Lab community, and we've been developing DIY pollution measuring tools. The Homebrew Oil Testing Kit is an open source, Do-It-Yourself kit which attempts to make it possible to identify oil pollution by type. This means matching a suspected sample with a known sample of crude oil, motor oil, heating oil, or other petroleum-based contaminant using a homemade fluorescence spectrometer. A spectrometer enables you to precisely measure the colors of light emitted by carefully prepared samples when they are illuminated with strong ultraviolet light, as shown in the lead image.We're running a Kickstarter campaign to distribute a batch of these kits, but of course since it's open source, you can simply find the materials and make one yourself. Watch this video to learn a bit about our campaign, and about the Public Lab community:You'll need:protective latex or nitrile gloves cotton swabs some small glass bottles, like empty nail polish bottles, or plastic cuvettes (available on Amazon) mineral oil (from the pharmacy -- it's used as a laxative; also sold as \"baby oil\") a \"Blu-Ray\" or 405 nanometer laseran eyedropper a spectrometer: you can build one from a piece of DVD-R, a webcam, and a light-sealed box. Instructions and design files for several types can be found on the Public Lab website, and we are working on getting an Instructable posted too. This Instructable covers the use of a spectrometer to do a specific type of analysis.Many of these things may need to be sealed in plastic and thrown away if you use them to handle spilled oil or anything suspect which you find on the ground, so don't use your grandfather's heirloom eyedropper :-PA more detailed list plus links for where to buy things can be found at the bottom of the Public Lab Oil Testing Kit page.Collect, Scan, & Compare The process of testing for oils can be described in three overall steps;collecting samples of suspected oil or tar from the ground, and dissolving small amounts in mineral oil so they are transparent  illuminating the solutions with ultraviolet light -- presently using a 405 nanometer blue laser -- and recording the light spectrum with a DIY spectrometer, as shown in the diagram above comparing the spectrum to those of similarly prepared samples of known pollutant oils, as well as a negative controlHere I'll discuss and illustrate these steps one by one -- but keep in mind this process is always evolving. For a constantly-updated version of these instructions, see the Oil Testing Kit page on the Public Lab Wiki.", "title": "DIY Oil Pollution Testing", "url": "https://www.instructables.com/id/DIY-Oil-Pollution-Testing/", "section": "technology", "steps": [{"step": 1, "steps_text": "Locating samples Originally, we focused on tar balls which were washing up on US Gulf Coast shorelines following the BP oil spill, in part because the Public Lab community was founded during the spill. These ranged from hard black lumps to orange residue. But oil contamination takes many forms, from residue around a street drain, to a sheen or buildup on the surface of the water. Above you can see some examples. You could look at the banks of an urban waterway, or for the motor oil that collects by a street drain. Be sure to use gloves!Above images, left to right: dried oil on rocks in 2010, Louisiana coast by Cesar Harada CC-BY-NC-SA, oil residue in the ocean in 2010, Louisiana coast by Cesar Harada CC-BY-NC-SA, Oil tanker leak on tracks beside Mississippi River, by @marlokeno, swabbing a street grate by @warrenLabelingLabel sample bottles with the date, time, and location. If you also give it a unique number, any other information can be kept in a notebook next to that number, such as further notes on the location and its condition. Take a photo of the sample with your label, in the place you found the sample, for context.The second photo above is of a sample already dissolving in mineral oil, but typically we've collected relatively dry samples and dissolved them later. You can put a small amount into an empty sample jar or use the cue tips to put residue directly into mineral oil as in the next step.", "step_imgs": ["https://cdn.instructables.com/FEI/5A56/I0VP1ZA4/FEI5A56I0VP1ZA4.LARGE.jpg", "https://cdn.instructables.com/F3M/QBHG/I0VP20JW/F3MQBHGI0VP20JW.LARGE.jpg"], "step_title": "Step 1: Collecting Samples"}, {"step": 2, "steps_text": "Use a cotton swab or small brush, dipped in mineral oil, to break up some of the material and dissolve it in a small, square-sided glass jar of mineral or baby oil. Wear gloves before handling suspected pollutants. You may need to rub the sample for a while to get it to dissolve. If it does not dissolve, there may be more aggressive ways to dissolve it. Where possible, try not to put too much sand or other stuff in the jar. It's a good idea to keep extra samples (dry, as you found them, not in mineral oil) in glass jars, stored in a cool dark place, as there may be an opportunity to test them later with more expensive, official means.Seal the bottle tightly with the cap. You can then gently turn it over a few times to get the residue to dissolve -- it may take some time before the mineral oil takes on a distinct but faint yellowish hue. You may then have to wait for the sediment to settle out. You want the liquid to be quite transparent, with the chunky stuff settled to the bottom.Concentration One big issue is getting the correct concentration of sample dissolved. If it's too little, we may not be able to get it to glow under UV light. Too much and it could be too dark for the light to be visible in the bottle. Ideally we'd like to have the same concentration in each sample bottle, but determining this is very difficult as the samples may be mixed, so they can't easily be weighed. We recommend going by how dark they are -- try for a color similar to very dilute tea, as in the second image above. If you notice the laser dimming noticeably as it goes through the liquid, it's too dark, and you'll have to dilute it more. ", "step_imgs": ["https://cdn.instructables.com/F27/V9IR/I0VP20XP/F27V9IRI0VP20XP.LARGE.jpg", "https://cdn.instructables.com/FIQ/L0ML/I0VP210Q/FIQL0MLI0VP210Q.LARGE.jpg"], "step_title": "Step 2: Preparing Samples"}, {"step": 3, "steps_text": "Now that your sample is prepared, you may be able to get it to fluoresce or glow by shining an ultraviolet light through it. We have had good results using a blue/UV laser, a 405 nanometer laser which is the same as found in a Blu-Ray player. See the parts list at the beginning, or on this page, for where to buy one. Very strong UV LEDs could also work, but are not as bright, and getting enough light to the spectrometer is a challenge. LEDs are also not as narrow wavelength as a laser. Don't look at the laser too much, as it can hurt your eyes, even if you're not pointing it directly at your eye! Only turn it on while scanning, and look away.Note that the laser will have a purple-ish color by itself (as seen in the lead image at the top of the page) -- this is not fluorescence, but just scattering of the laser light. What you're looking for is any other color -- whitish, bluish, greenish -- which is not from the laser, but is produced in the material itself as it's excited by the UV light. To measure precisely the colors that are being produced, we will use a spectrometer.", "step_imgs": ["https://cdn.instructables.com/F2P/VQ3A/I0VP21UB/F2PVQ3AI0VP21UB.LARGE.jpg"], "step_title": "Step 3: Illuminate and Scan the Sample"}, {"step": 4, "steps_text": "Colored light is often a blend of different colors. A spectrometer is a device which splits those colors apart, like a prism, and measures the strength of each color. A typical output of a spectrometer looks like the above spectrum of the daytime sky, with the actual light spectrum at the top and the graph of wavelength (horizontal axis) and intensity (vertical axis) below.Your own spectrometerYou can build your own spectrometer from a piece of DVD-R, a webcam, and a light-sealed box. Instructions and design files for one can be found on the Public Lab website, and we are working on getting an Instructable posted too. What is fluorescence, and how do we use it to match oils?While there are many ways to use a spectrometer, in this case we're causing the samples to glow by exciting them with a high-energy UV light.When we scan the fluorescence from an oil sample, we can clearly see the laser color, or wavelength, which is only in a narrow range around 405 nanometers, to the left, as in the second image above. All the remaining light, to the right of that tall peak, is produced by the excited material in the sample. The shape of that curve can be matched against other samples to help us identify what ours is. You can often even see the difference with the naked eye, though you can't do a precise comparison. The third image above shows a Blu-Ray laser going through several different kinds of oils -- note the different colors they each emit!", "step_imgs": ["https://cdn.instructables.com/FTV/ALJO/I0VP226C/FTVALJOI0VP226C.LARGE.jpg", "https://cdn.instructables.com/F4W/278Z/I0VP226E/F4W278ZI0VP226E.LARGE.jpg", "https://cdn.instructables.com/F2I/XE7U/I0VP2F7W/F2IXE7UI0VP2F7W.LARGE.jpg"], "step_title": "Step 4: Spectrometry? Fluorescence?"}, {"step": 5, "steps_text": "Whether you use the Homebrew Oil Testing Kit , or one of the prototype designs we've recently published, the basics are that you need to illuminate your sample with a laser beam perpendicularly to the direction your spectrometer is pointing, and to align it so that you can see enough light using the software at SpectralWorkbench.org, which connects to your USB webcam. The illustrations above show a couple ways we've folded up or modified boxes to keep a spectrometer lined up with a sample container and a jar. The hard parts are getting the laser lined up with the slit, so the light actually goes into the spectrometer, and using a pretty sensitive webcam so that it can actually detect the light. One thing not shown as clearly above is that you should either turn the lights off or cover the box so that you don't detect ambient light from the room. The illustration shows scanning a control sample at the same time, but this may not be necessary if everything is consistent between scans. You'll want to see something like the third image above in the software.If you don't, but you can visibly see fluorescence (see below for examples), try moving the laser up and down a bit to get it to align. You want the curve to the left of the tall peak (which is the laser) to be mostly between 25% and 75% intensity, so it's not \"clipping\" by being too bright but you're getting enough light to see a clear shape amongst the noise. You should also use \"RGB mode\" (in the Tools section of a saved spectrum page) to check that none of the three channels is overexposed, as shown in the fourth image. We'll add an automated warning for overexposure, soon.Improve your techniqueOnce you get a basic scan, save and label it, but consider some of these techniques to improve your data collection:try to ensure the same concentration of contaminant in each sample bottletake several scans for each sample, and label them #1, #2 -- comparing them to ensure your technique is consistentscan multiple samples from the same sitesmooth your data using the technique described in this noteOnce you're confident that your sampling is consistent and rigorous, you're ready to start comparing the data you've collected.", "step_imgs": ["https://cdn.instructables.com/F9G/B3ZO/I0VP2FE8/F9GB3ZOI0VP2FE8.LARGE.jpg", "https://cdn.instructables.com/F1B/9H47/I0VP2FEM/F1B9H47I0VP2FEM.LARGE.jpg", "https://cdn.instructables.com/FDI/5CMK/I0VP2G9Y/FDI5CMKI0VP2G9Y.LARGE.jpg", "https://cdn.instructables.com/FRW/8L5K/I0VP2GAC/FRW8L5KI0VP2GAC.LARGE.jpg"], "step_title": "Step 5: Illuminate the Sample and Record Its Spectrum"}, {"step": 6, "steps_text": "When identifying an oil, we are hoping to measure the color of fluorescence of the blend of Poly-Aromatic Hydrocarbons (PAHs) in the sample. The best way to identify a sample would be to compare it to a selection of similarly-prepared known reference materials. For example, if you have unknown X, you could compare it to both: A) a known sample of crude oil and B) a known uncontaminated sample of material (perhaps soil) to see which it matches best.Which is it more like? Ideally, it should be compared to a range of possible references. For example, if it's possible the sample is heating oil or motor oil, you could compare it to similarly prepared samples of those as well. Some research has shown that vitamins A and E can produce fluorescence similar to petroleum products.Read over this detailed research note to see how to set up a comparison -- but keep in mind that since it was published, we've vastly improved noise reduction (smoothing) and comparison features as described in this note.Plot your samples and compare Add all your scans to a set, so they can be viewed together, and you can see the subtle color differences as graphed lines. Add the spectrum of your unknown sample and see which of the others it is closest to.Be sure your spectrometer is calibrated so that the spectra have wavelength units -- although if they're captured on the same device and you haven't moved it, even uncalibrated spectra can be aligned and compared.", "step_imgs": ["https://cdn.instructables.com/FLT/R1E9/I0VP2GYF/FLTR1E9I0VP2GYF.LARGE.jpg", "https://cdn.instructables.com/FQC/XI5G/I0VP2HLN/FQCXI5GI0VP2HLN.LARGE.jpg", "https://cdn.instructables.com/FB0/C7OC/I0VP2HM0/FB0C7OCI0VP2HM0.LARGE.jpg", "https://cdn.instructables.com/FYA/V8MM/I0VP2K9L/FYAV8MMI0VP2K9L.LARGE.jpg"], "step_title": "Step 6: Compare Your Scans"}, {"step": 7, "steps_text": "There are a lot of steps in this process, and it's still a prototype, so think about the following things to be more confident in your findings, or to help refine them to answer your questions adequately. There are thousands of people in the Public Lab community, so also consider posting your work there (requires a login) to solicit input and advice. Even if your work is not done, it's a great idea to share and solicit feedback on your plan before, during, and after you've done the work. You may be able to build on previous work on the website, and your work will help others who are seeking to perform similar tests.Positive and negative controlsThink critically about your testing and how it might have gone wrong. Could you have made mistakes, or is the match you've found between your unknown sample and your references not good enough? Could another material produce the same color spectrum as your suspected contaminant, and fool your test? (See this research on Vitamins E and A causing such false positives).Validate your resultsAn extra step that may give your work more credibility is to submit a few of your samples for analysis to a lab, or to use other tests to confirm your results. Alternatively, if you know other testing has occurred, you can try to extend its results by re-testing the same site or samples, correlating your results with the previous test, and performing your own tests over a larger area or at more sites, or over a longer time span. Variations There are many variations of the process which could be useful but are not essential. These include: collecting samples from a sheen on the surface of the water -- which may be difficult as sheens are extremely thin and spread outmeasuring fluorescence in-situ on the ground, without collecting or concentrating samples in a jar -- which could be difficult as it's very dilute and mixed with other things like water, dirt, or plant matterMany of these may be future goals of the project, but we are focusing on our primary use case of collecting contaminated soil or residue from the ground, dissolving it in mineral oil, and illuminating it with UV in a spectrometer.That's it for now!Thanks! This is far from a finished or mature technique, but we believe that a collaborative, open process is the best way to iterate and improve on it. Please offer suggestions for simplifying, lowering costs, or improving the validity of the tests, either here, or on PublicLab.org, where there are manymany people working to make pollution monitoring more accessible and cheaper. And have a great day!", "step_imgs": [], "step_title": "Step 7: Be Sure You Have It Right!"}], "channel": "Science"}, {"category": "technology", "description": "This instructable will show how to balance a chemical equation. Balancing a chemical equation is important because there must be the same number of atoms on the initial side of the equation as well as on the final side of the equation. The same number of atoms on each side follows the concept of the Law of the Conservation of Mass, which states that matter cannot be created nor destroyed. In order to complete this instructable, you should have a good knowledge of the identifying elements and doing simple math like addition and multiplication. You will need:CalculatorPenPaper", "title": "How to Balance a Chemical Equation (Final)", "url": "https://www.instructables.com/id/How-to-Balance-a-Chemical-Equation/", "section": "technology", "steps": [{"step": 1, "steps_text": "In a chemical equation there are subscripts and coefficients. The subscripts tell you how many atoms are in a compound while the coefficient tells you how many moles/molecules are of the chemical. If there isn't a subscript present next to the element, it implies that there is only one atom present.(see figure 1 for an example)1.  Under the chemical equation, make a simple chart with the elements listed.a. Next to each element, write the number of atoms present in the unbalanced chemical equation.Hint: remember the subscript tells you how many atoms are presentb.If the element is in multiply molecules on one side, write each number separate from each other then add them up(see figure 2)", "step_imgs": ["https://cdn.instructables.com/FYU/DBB0/IL2C70C1/FYUDBB0IL2C70C1.LARGE.jpg", "https://cdn.instructables.com/FBU/S6Y3/IL2C8N29/FBUS6Y3IL2C8N29.LARGE.jpg"], "step_title": "Step 1: Make a Table"}, {"step": 2, "steps_text": "1. Pick an element that appears in one molecule on the left side and in one molecule on the left. a. Leave hydrogen and oxygen for last because they are more often found in more than one chemical on each side of the equation.b. For a more complicated example that has more than one element besides Oxygen or Hydrogen, pick the element that has more atoms on one side compared to the other.  See figure 32. Once you've determined which element to balance first, add a coefficient to balance that element by multiplying the subscript by the coefficient added. a. Adjust the table by multiplying each element effected by the coefficient added to that molecule.b. Since you had 7 Carbons on the left and 1 Carbon on the right, you are going to need to have a 7 as the coefficient on the right.c. Since the Carbon molecule also has oxygen in it, you need to multiply the 7 by the number of atoms with Oxygen which is 2 to get a total of 14.i. There is also another Oxygen, but it is in a different molecule so you need to add it to the 14 to get a total of 15 atoms for Oxygen. See figure 43. Repeat this step for the rest of the elements except for Hydrogen and Oxygen ", "step_imgs": ["https://cdn.instructables.com/FN0/3ICO/IL2C70DL/FN03ICOIL2C70DL.LARGE.jpg", "https://cdn.instructables.com/FAQ/KQJL/IL2C8N3D/FAQKQJLIL2C8N3D.LARGE.jpg"], "step_title": "Step 2: Determining and Balancing the First Element"}, {"step": 3, "steps_text": "Once you have balanced all the other elements, it is now time to balance the hydrogen atoms.1. Balance the Hydrogen with the least amount of atoms.a. In the example, that would be the Hydrogen on the right side of the equation. 2. Place a coefficient number needed in order to balance the Hydrogen to the other Hydrogen with the highest amounts of atoms.a. In the example, a 8 would be needed in order to balance the Hydrogen on the right side to the Hydrogen on the left side as pictured in figure 5. 3. Adjust the table by multiplying each element effected by the coefficient added to that molecule.a. Since the Hydrogen on the left is with an Oxygen, the 1 Oxygen atom needs to be multiplied by 8 and added to the 14 atoms already there due to the 7 in CO2 so 22 atoms of Oxygen total as seen in figure 6.", "step_imgs": ["https://cdn.instructables.com/FF5/CPD5/IL2C70F1/FF5CPD5IL2C70F1.LARGE.jpg", "https://cdn.instructables.com/FRK/54BC/IL2C8N5Y/FRK54BCIL2C8N5Y.LARGE.jpg"], "step_title": "Step 3: Balancing Hydrogen"}, {"step": 4, "steps_text": "1.Balance the Oxygen with the least amount of atoms.a. In this example, it would now the right side with 22 atoms because of the coefficients added. 2. Place a coefficient number needed in order to balance the Oxygen to the other Oxygen with the highest amounts of atomsb. 11 would now be needed to balance the Oxygen on the left with the Oxygen to the right and can be seen in the figure 7. Now you have successfully balanced a chemical equation!", "step_imgs": ["https://cdn.instructables.com/FU6/LYZC/IL2C70FZ/FU6LYZCIL2C70FZ.LARGE.jpg"], "step_title": "Step 4: Balancing Oxygen"}], "channel": "Science"}, {"category": "technology", "description": "This project is a re-boot from a 2-year-old project to accomplish the same.  The goal is to have an internet-enabled sensor mounted to a water tank which measures the amount of water in the tank and records it online.  When the tank gets low, an SMS is sent to me to alert me.  Additionally, at any time, I can send an SMS to inquire how much water is in the tank.Who would want such a thing?  The target here is a vacation home which is not on public water.  We don't want to leave guests without water, but every tank refill is expensive - and each refill is the same price whether they put in 10 or 1,000 gallons.  So, we can save a lot of money by knowing the water tank level in real time.  Plus, the collected data helps us understand how much water we should expect guests to use, thereby learning how low we can let the tank go.I made a similar system a couple years back, before Google's NEST acquisition and \"IoT\" became such a common term.  In re-doing this project, I was happy to see how much all of the tool sets had improved!  I think the result is a much more stable, higher-performance, less buggy system.", "title": "Remote Water Tank Level Sensor V2.0", "url": "https://www.instructables.com/id/Remote-Water-Tank-Level-Sensor-V20/", "section": "technology", "steps": [{"step": 1, "steps_text": "All good designs start with a good list of requirements.  Before spending any more time and money on this thing, let's make sure it meets your needs.OverviewThe Water Tank Level Sensor (WTLS) is a system of hardware and software which records and reports how much water is in a water tank.  It includes a distance sensor mounted in the top of the tank which is connected to a small microcontroller via cable.  The microcontroller reads the distance measurement from the sensor and then transmits that measurement over wireless internet to a server which stores the measurement with capabilities for graphical and tabular display of historical data.  Also, the measurement is compared against alert levels and sends an alert SMS if the water level is low.  In addition to this alert SMS, there are a few other SMS commands and responses that the system can receive and respond to.The HardwareThe WTLS consists of a sensor from Maxbotix ($270) and an Electric Imp microcontroller ($50).  These are the main pieces of hardware.  Appropriate waterproof connectors for the wires are sourced from Amphenol and are the bulk of the remaining hardware cost, which also includes cable tie-downs, jam nuts for the sensor, header and connector for the Electric Imp, and plastic project box and mounting screws (~$50).Total project budget: $370.Note: I will mention a variation of the project which cuts $100-$150 from the budget at the cost of a completely watertight sensor-to-cable connectionThe SoftwareThe software performs the following functions:Remote upgrade of software without physical sensor access.  Read the sensor measurement  Send an error SMS if the sensor measurement is clearly bad.  Have a way to turn on and off these error warnings.  Record sensor measurement at a regular interval (\u201cPeriod\u201d) which is user-defined, but defaults to every 15 minutes.  Display historical data from the sensor, processed so that it shows total gallons in the tank (not just distance) as a function of date/time.   This should be displayed on a web browser and the length of data displayed should be variable between a month and a single day.  A user should be able to look at prior months as well.  Record and display the time delay between when the sensor took a reading and when that reading was saved.  Ensure a sensor reading doesn\u2019t get \u201cfrozen\u201d and recorded more than once  If the gallons of the water in the tank drops below a user-prescribed level, send an alert SMS.  Send only 1 alert SMS per user-prescribed level, until tank is re-filled.  Allow for multiple user-prescribed levels where this happens  When the tank is re-filled, re-enable all of the alerts so that SMS\u2019s will be sent when the tank is low again  Receive the following commands via SMS and do the following: \"level\u201d \u2013 SMS back the most updated measurement, and how long ago it was taken  \u201cperiod=30\u201d \u2013 update the period for recording to 30 minutes.  This should work with not just 30, but any number from 10 to 1440.  \u201cenable\u201d \u2013 enable error SMS messages  \u201cdisable\u201d \u2013 disable error SMS messages  \u201chelp\u201d \u2013 SMS back this list of commandsTimelineIt will take 4-5 weeks to get all the necessary hardware.  The sensor is the longest-lead item, and most of the fabrication can be done before it arrives, in a few hours total.  Software development and debug is quick if you use my exact software (and it works for you).  For reference, it was probably 6 to 8 hours of development time for me to write and test.  Site installation can be done in an hours or less.", "step_imgs": [], "step_title": "Step 1: Confirm the Requirements"}, {"step": 2, "steps_text": "Next up: buy the parts.  Here's the full BOM, with some ordering notes below and then tools list below that.  Bill of MaterialsElectric Imp (Developer Edition) - Sparkfun or Adafruit - $29.95   Electric Imp Breakout Board - Sparkfun or Adafruit - $12.95   USB Cable (A to mini) - Sparkfun or others - $3.95   USB power block - Sparkfun or everywhere (I had a few sitting around my house) - $3.95   Distance Sensor - Maxbotix MB7589 SCXL-MaxSonar-WRMT - 1\" NPS - $149.95   Sensor Cable Attach Option - Maxbotix Shielded Cable Attach Option with 3 feet of MB7954 wire - $62.95   Sensor Cable - Maxbotix MB7954 wire - $3/foot (I got 12 feet)   Watertight connector (male); Amphenol LTW Series PN 12-04BMMA-SL8001 - Digikey - $4.32 ea   Watertight connector (female); Amphenol LTW Series PN 12-04BFFB-SL7001 - Digikey - $13.42  Alternate watertight connector (female); Amphenol LTW Series PN 12-04BFFA-SL8001 - Digikey - $4.94PCB Header - Digikey - $1.33 PCB Mating connector - Digikey - $1.11   6x PCB mating terminals - Digikey - $0.25 ea   *Plastic Box; Bud Industries PN CU-389-MB - Digikey - $7.10   *Panel watertight connector (female); Amphenol LTW Series PN 12-04PFFS-SH8001 - Mouser - $4.99  *G10/FR4 material  - McMaster PN 8667K1 - $7.58  *4x 5/16\u201d long #4 sheet metal screws - McMaster PN 90190A107 - $2.03 (pk of 100)   *22 AWG stranded copper wire, about 1 foot total.  I recommend 4 different colors for simplicity. Sensor Mounting Nuts (detail TBD)   *Box mounting screws (detail TBD)   Hold-downs for sensor cable (detail TBD)   Superglue Solder (electrical type)Optional Cable extension BOM:Extra cable for sensor - Digikey - $1.78/m Alternate cable - Digikey - $26.84 per 50 feetWatertight connector (male); Amphenol LTW Series PN 12-04BMMA-SL8001 - same as above Watertight connector (female); Amphenol LTW Series PN 12-04BFFB-SL7001 - same as above Alternate watertight connector (female); Amphenol LTW Series PN 12-04BFFA-SL8001 - same as aboveOrdering Notes:Items marked with a * can be omitted if you don't want to put your electric imp into a project box.  Since there's no way to mount that breakout board, I recommend the project box.The sensor is purchased directly from the manufacturer (Maxbotix).  I've attached a screen shot of the Maxbotix cart.  This can be tricky, since the base part number of the sensor does not specify the housing type.  If you want to see a major cost savings and can sacrifice some environmental protection, then just order the base sensor (or the MB7380 to save $40 more and not have the self-cleaning feature) without the Cable Attach Option or Sensor Cable.  Make sure you buy the \"Optional Cable Extension BOM\" without the female connector, though.Everything but the sensor comes through distributors.  I've listed suggested distributors for all of the parts; occasionally some distributors will be out of stock of certain parts, so watch for that.  I suggest using octopart.com to find other distributors who have the part in stock.  I've also listed a few alternative part numbers for the connectors to help with finding things in stockI haven't done the install yet, so I'm leaving off details for ordering the installation screws, nuts and cable hold-downs until I have verified parts.Bill of ToolsSpecial tool: 1 3/8\" paddle bit or hole saw and drill (used to drill a hole in the tank to mount the sensor)Note: I had previously recommended a 1 5/16\" hole saw (McMaster 4066A24) and corresponding arbor and shank (McMaster 4066A79), but I now worry this might be too tight for the sensor.  I did not try it, so I do not know.  The 1 3/8\" paddle bit I used worked very well.Generic tools:  Hacksaw or Dremel tool for cutting FR4 (any old hacksaw will probably do)   3/8\" chuck drill with the following bits: 3/32\", 7/64\", 3/16\", 1/2\"Xacto or other small razor knife   Soldering Iron (fine electronics kind) and electronics-grade solder  Thumb tack (for marking FR4) Wire stripper - I recommend one with a fixed-size 22 AWG stripper feature so that you do not accidentally cut some strands of conductor and weaken the wire at a crucial spot. Crimp tool - generic small-crimp tool such as the one pictured.  While I haven't tried it, I bet this one from Digikey would work well.If your drill chuck size is different, make sure to get an appropriately-sized arbor and shank for the hole saw.", "step_imgs": ["https://cdn.instructables.com/F2A/SFRK/IJHFEP1X/F2ASFRKIJHFEP1X.LARGE.jpg", "https://cdn.instructables.com/FB1/MV3W/IJHFEPZ5/FB1MV3WIJHFEPZ5.LARGE.jpg"], "step_title": "Step 2: Buy Parts"}, {"step": 3, "steps_text": "You can do this step once you have Electric Imp (e-imp), e-imp breakout board, USB cable and USB power block.Follow the directions on the e-imp website or on Sparkfun for doing a blink-up.  Basically, set up an account at electricimp.com, download the blink-up smartphone app, enter your e-imp username, Wifi network name and password into the app, and place your phone against the e-imp after you power it up.  Note you'll need the jumper installed to power it up from the USB - or use a temporary jumper like a piece of wire.I had to try to blink-up twice, but it worked perfectly the second time.  It works of the e-imp blinks green.Now, log into ide.electricimp.com and you should see your electric imp.  You can check the MAC address to make sure.  Make a new model and associate it with your e-imp.  Paste my software into your agent and device windows.  My software is available on my Github repository under MIT License, so enjoy!There are a few fill-in-the-blanks in the software on the agent side.  First, enter your phone number and phone number whitelist (everyone who's allowed to text in to the sensor) into the top of the agent code.Next, you have to create two more software accounts:Twilio.  Create a new account and get a phone number.  Note your AccountSID and Auth Token and copy them into the e-imp agent code.  Also, copy your Twilio phone number.   Thingspeak.  Create new account and set up a new channel and name field1 \"distance\" and field2 \"delay\".  Copy the Write API key into the e-imp agent code.Note: don't share your Thingspeak API Key or Twilio Auth Token with anyone and treat them as you would a password.Second note: it's possible that once you finish doing the above, your system will actually function.  Since you have no sensor connected to the e-imp, it shouldn't send gobs of useless data to ThingSpeak, but it may text you to tell you the sensor is offline.  You may want to comment out your ThingSpeak API key for now just to be careful.", "step_imgs": [], "step_title": "Step 3: Blink-up the Electric Imp and Set Up Software"}, {"step": 4, "steps_text": "Time for fabrication! The next 3 steps are the fabrication steps.  You can start this step after the following parts have arrived: project box, FR4, #4 screws, Electric Imp, Electric Imp breakout board, USB cable, USB power block and PCB header.First off, let's note that most of this step exists because there are no mounting features on the e-imp breakout board!  Who's bright idea was that one?  The best idea I had was to glue it down to a bigger board that could fit mounting features.  If anyone re-spins that breakout board to be bigger and have mounting holes (ideally, spin it with a PCB size, shape and hole pattern than matches a COTS plastic box!) - please let me know.Anyway, moving on.Here are the steps:Cut the FR4 to fit within the box as shown (note that I bought the wrong size of FR4 and had to glue 2 pieces together, oops).  Note that the FR4 extends to the box edge on the long sides of the box, but does not extend all the way to the edge on the short sides.  Approximate FR4 size should be 3 1/4\" by 4 1/8\"  Drill 4 mounting holes in the FR4 using a 7/64\" bit.  Determining hole location is a bit tricky; I used a marker to put ink on the stand-off faces, then pressed the FR4 piece down to pick up some ink.  Then, I used a thumb tack to mark the FR4 at the center of each stand-off face.  Mount the FR4 board into the box using the #4 screws.  Holding the Electric Imp breakout board flush to the long side of the FR4 board inside the box, use a thumb tack to mark the FR4 through the Electric Imp breakout board holes marked: Pin8, Pin9, CD, 3V3, GND, Bat, USB, and the unlabeled hole between Bat and USB.  See photo.  If you went out of order and already did step 5, then use a piece of paper to transfer dimensions to the FR4 (see photo).  Solder in PCB Header.  Make sure you put it in the last 5 holes: Pin8 through GND.  Also, solder in 3-pin header and place jumper on USB side (if the header and jumper didn't come installed).  Remove FR4 board from box.  Use 3/32\" drill bit to drill 8 holes in FR4 corresponding to the 8 markings made in step 4.  (optional) Cut a small piece of FR4 and glue to to the back side of the main FR4 piece so that it covers up all 8 holes.  This is to add strength to the FR4, but it's probably not necessary.  Check Electric Imp breakout PCB fit on to the FR4 board.  It should sit flush against the board with the PCB header stubs sitting comfortably in the holes you just drilled.  Mount the FR4 board back into the plastic box and hold the breakout board in place.  Use the thumb tack to mark the plastic box where the mini-USB port is.  Remove FR4 board and breakout board from plastic box and drill out a hole in the plastic box for the mini-USB.  Use a 3/16\" drill bit, then finish it off with a Xacto knife.  Mount FR4 board back in the box.  Ensure USB cable plugs into the breakout board through the new hole when you are holding the breakout board in place.  If it works, go ahead and superglue the breakout board down to the FR4.  And while you're at it, request Sparkfun or Electric Imp make a breakout board with mounting holes next time!!  Your box should look like the photo now.Cost-saving option is to skip the project box entirely and just run the sensor cable (or extender cable) directly to the PCB header connector.  You save the cost of the box, FR4, superglue, panel mount connector and one of the inline male connectors (the items marked with * on the BOM back a few steps).  Plus you save some fabrication time.  But then there's nothing mounting the e-imp.  Perhaps you could use some double-sided foam tape to hold it down somewhere, but over time dust and exposure to possible damage may threaten your otherwise awesome system.", "step_imgs": ["https://cdn.instructables.com/FL7/16EE/IJHFEPYK/FL716EEIJHFEPYK.LARGE.jpg", "https://cdn.instructables.com/FPK/MKZF/IJHFEP2H/FPKMKZFIJHFEP2H.LARGE.jpg", "https://cdn.instructables.com/FFI/O6ZT/IJHFEP2V/FFIO6ZTIJHFEP2V.LARGE.jpg", "https://cdn.instructables.com/FP9/V83N/IJHFEP2Y/FP9V83NIJHFEP2Y.LARGE.jpg", "https://cdn.instructables.com/F8Z/TCEE/IJHFEP20/F8ZTCEEIJHFEP20.LARGE.jpg"], "step_title": "Step 4: Mount the Electric Imp Breakout Board"}, {"step": 5, "steps_text": "You already have the min-USB hole in the box, so just one more hole to go.  For this step, you'll need the panel mount connector in addition to the items previously.  For tools, you'll need a drill with 1/2\" bit and Xacto (or other small razor) knife.Mark the center of where you want the panel connector using a thumb tack.  Place the connector on the same box face as the USB connector.  Locate its center point as follows: vertical: halfway between FR4 top surface and top edge of box (without lid) horizontal: halfway between the box corner and the edge of the e-imp that has the PCB header.Remove everything from inside the box and drill a hole for the panel mount connector using a 1/2\" drill bit. Don't use any bit larger than a 7/32\" because you want to maintain the flats on the connector hole. If you drill out the hole in the box too large, then mating the connector later will be nearly impossible because the panel mount connector will spin in place. After you drill the under-sized hole, you'll need to use the Xacto knife to widen it in the horizontal dimension. Work slowly and check fit with the connector often.", "step_imgs": ["https://cdn.instructables.com/FLB/3EXV/IJLZY5FE/FLB3EXVIJLZY5FE.LARGE.jpg", "https://cdn.instructables.com/FOY/GNVN/IJLZY5FF/FOYGNVNIJLZY5FF.LARGE.jpg"], "step_title": "Step 5: Cut Hole in the Box"}, {"step": 6, "steps_text": "We have a simple 4-conductor wire harness to build here which goes from the panel mount connector to the PCB header connector.  For this step, you'll need the 22 AWG wire and PCB header connector and terminals, in addition to the items from previous steps.  For tools, you'll need a soldering iron, wire strippers/cutters and crimp tool.Here are the steps:Solder 4 22 AWG wires to panel mount connector. Crimp the other end of the wires to the PCB connector terminals.  You'll need a crimp tool for this.  See photo.  Note that these terminals do not crimp to the insulation, only to the bare conductor.  So, strip the conductor, crimp on the terminal. Insert the terminals into the connector.  Note the tine on the terminal comes through the little hole on the connector. There should be a faint \"click\" when the terminal is inserted.  Insert the right terminals into the right positions!  See notes on pin counting below. Connector pin 1 = 3V3 power in e-imp Connector pin 2 = GND on e-imp Connector pin 3 = e-imp Pin 9 (sensor TX, e-imp RX) Connector pin 4 = e-imp Pin 8 (sensor RX - not currently used)Screw down the FR4 board, put in panel connector and tighten its nut.  Connect PCB header connector to PCB header. Screw lid on to box (or leave it off for debugging the next steps).Now you have a wireless sensor receiver box. Notes:Don't use solder on the terminals.  It will create a stress point at the place in the wire where the solder ends.  This is especially problematic because we don't have much clearance from connector to box lid, which further would stree such a point on the wire. If you don't have a crimp tool, you can very carefully use a needle-nose pliers or xacto knife to fold in one crimp tine at a time...but I highly recommend a crimp tool.  The PCB connector will fit through the hole you put in the box and through the panel connector nut. Use the attached photo to count connector pins and know which connector pin is \"pin 1\".  Reference \"female connector\". \"Front View\" is the view as if you were the mating connector.Do not put a terminal in the middle position of the PCB header connector.  We don't use the \"CD\" pin. The box is not watertight due to the mini-USB hole, so make sure it stays indoors. If you want an outdoors version, use a watertight USB connector (or a different watertight power connector).I am considering an upgrade to power this system from a battery pack.  I am looking at this pack in particular.  This pack has USB output and if we use a box with a clear lid, it would be solar-powered.  I think that would be very cool.  I am worried that the battery might turn its output off, though.  If anyone gives it a try, please let me know!", "step_imgs": ["https://cdn.instructables.com/FV5/LEFY/IJLZY5FC/FV5LEFYIJLZY5FC.LARGE.jpg", "https://cdn.instructables.com/FVY/9HLO/IJLZY5F8/FVY9HLOIJLZY5F8.LARGE.jpg", "https://cdn.instructables.com/FN8/EOBC/IJLZYDNL/FN8EOBCIJLZYDNL.LARGE.jpg", "https://cdn.instructables.com/FO4/XF9P/IJSUZASK/FO4XF9PIJSUZASK.LARGE.jpg", "https://cdn.instructables.com/FAB/S952/IJSUZAT7/FABS952IJSUZAT7.LARGE.jpg"], "step_title": "Step 6: Build the Wire Harness"}, {"step": 7, "steps_text": "Ok, now you need the Maxbotix sensor.  Despite the warnings on the website, their lead time for me was only about 1 week.  You also need the Amphenol connector(s) and extra cable, if you're using it.  For tools, you'll need a soldering iron.If you did not get the Cable Attach Option and Sensor Cable from Maxbotix, you should have gotten some 4-conductor 22-AWG cable.  You'll have to attach this cable yourself to your sensor.  You can either directly solder it or you can use the PCB header connector that we use on the e-imp breakout PCB.  Neither is environmentally sealed, unfortunately.In this step, we'll put the connector on the Maxbotix sensor cable.  If you're inserting your own cable in between the Maxbotix sensor and the box, you'll follow this same procedure to put the connectors on that extra cable.  Note that you may need to run the extra cable through a hole in a wall somewhere before putting the second connector on.Note that the Maxbotix sensor needs a MALE connector (since the panel mount connector is female).  On the xtra cable, you'll need a male connector on one end and a female on the other end.Here's the process:Open connector and run cable through cable gland pieces Strip back cable jacket and wires Solder wires to connector pins (red=1, black=2, blue=3, green=4) Close and tighten connector and cable gland (tighten connector first, then cable gland)And here's the critical wiring table:Circuit 1 = Connector pin 1 = E-imp pin 3V3 = Maxbotix V+ pin 6 = Maxbotix Red wire Circuit 2 = Connector pin 2 = E-imp pin GND = Maxbotix GND pin 7 = Maxbotix Black wire Circuit 3 = connector pin 3 = E-imp pin 9 = Maxbotix Pin 5 Serial Output = Maxbotix Blue wire Circuit 4 = Connector pin 4 = E-imp pin 8 = Maxbotix Pin 4 RX = Maxbotix Green wire (this circuit not currently used)Notes:See photo to identify which terminal is \"pin 1\" on the connector(s).  Note that \"Front view\" means the view as if you were the mating connector (NOT when viewed from the soldering side of the connector).", "step_imgs": ["https://cdn.instructables.com/FN8/EOBC/IJLZYDNL/FN8EOBCIJLZYDNL.LARGE.jpg", "https://cdn.instructables.com/F11/K1EJ/IJX58YDW/F11K1EJIJX58YDW.LARGE.jpg", "https://cdn.instructables.com/FSF/ULPZ/IJX58YEA/FSFULPZIJX58YEA.LARGE.jpg"], "step_title": "Step 7: Put Connectors on Sensor and Extra Cable"}, {"step": 8, "steps_text": "I recommend before doing your actual site install, that you connect and test the system.Here's my testbench: our e-imp box and sensor connected and on a coffee table.First, when you plug it all in to power, you should see your e-imp blinking to green eventually.  If it doesn't blink at all, you may have wired something incorrectly.  Then, put your ear next to the sensor and you should hear faint clicking.  This means the sensor is working.Next, it's time to test functionality.  I used some coasters to hold the sensor at the edge of the table, aimed for the wall.  I then could move the table closer and further from the wall to simulate the tank filling and emptying.  I tested all the various scenarios of tank refill and made sure I received appropriate error messages when the tank emptied, etc.", "step_imgs": ["https://cdn.instructables.com/FYA/B3VN/IJX58Z39/FYAB3VNIJX58Z39.LARGE.jpg"], "step_title": "Step 8: Connect and Test"}, {"step": 9, "steps_text": "Final step!  Let's get this installed and running.I used the drill and 1 3/8\" paddle bit to drill the hole through the tank - works like a charm.  The sensor was held in with a locknut on each side of the tank wall (1 inside, 1 outside) - that also worked like a charm.  I oriented the locknuts so that they both could bite into the plastic, then used a wrench to tighten the outside one and the inside one bit in and snugged up.What's that other hole you ask?  A relic of water tank level sensor 1.0.  Turns out it's next to impossible to enlarge an existing hole with a paddle bit... oops.  The other relic is a 4-conductor sold copper wire (telephone-style) which was left running from inside the house to outside near the tank.  I re-used this wire, so I had to solder some connectors on each end.I ran the cable off of the top of the tank and installed some plastic coaxial cable staples (the plastic u-shaped ones with a small nail in one arm of the U) to hold the cable in place in case of wind.  Then, I installed the inline connector to connect the cable from the sensor to the cable that was already in place running from outside the house to inside the house.Notes for connector install: - first, the connector is MUCH easier to install on solid copper wire than stranded - second, make sure the distance from cable jacket to connector body (see red line on the drawing) is short enough that the back shell of the connect can seal against the cable jacketThen, I plugged it all in, did a new blink-up of the electric imp (since I was on a new wifi network) and it worked!Good luck!  If you build something similar, please comment below and let me know about it!AddendumAfter some time, I noticed some noise in the data stream.  The sensor would occasionally jump by a meter or more, then would jump back either minutes or hours later.  I am still trying to figure out what is causing this.  I have a few guesses, but would also appreciate ideas or comments on the issue!  When I figure it out, I will post details and modify the instructable as needed.", "step_imgs": ["https://cdn.instructables.com/F1K/EI22/IMP4UVQ0/F1KEI22IMP4UVQ0.LARGE.jpg", "https://cdn.instructables.com/FWB/ZOGM/IMP4UVLP/FWBZOGMIMP4UVLP.LARGE.jpg", "https://cdn.instructables.com/FV0/DI4H/IMP4UVRC/FV0DI4HIMP4UVRC.LARGE.jpg"], "step_title": "Step 9: Install and Run"}], "channel": "Electronics"}, {"category": "technology", "description": "Machines have feelings. Sometimes they need to talk. They need to express themselves. Also, we need to make friends with them. Ok, currently they only have the intelligence of a cockroach, but this situation is rapidly improving. Very soon the machines may even become self aware and start crawling around surreptitiously in the back of our cupboards.In the meantime, we humans can help them with their communication issues and, in my case, they will reward us with bottles of very nice tasting whiskey and hopefully not destroy us all when they eventually take control.Here I am going to try to explain how we can get a machine that makes whiskey, or any other machine, to let us know that it is doing it's job properly and not getting confused or unhappy. Much of this is going to be done with computer code on what is known as I2C bus and I've written some special code to enable long, complex, numbers to be sent down the bus effectively.We start off in the machine, with an Arduino Mega taking an array of sensor readings and chopping up the data into smaller chunks and spurting it out every minute or so down the I2C and an Adafruit Fona Feather being triggered at the other end to catch it again (Machine \u21d2 Machine). The feather then reassembles the data and transmits it into cyber space via the cellular GPRS network (IoT).In a small sleepy town called Ipswich, near London, United Kingdom, a computer 'server' picks up the information and processes it via two pieces of computer code called PHP and SQL to dump it in a database. Please note that there are no 'Clouds' ... or any other mysterious weather phenomena involved in this system .... just a big warehouse in Ipswich.Once safely in the database, we can access the information any time we want and process it via the Interweb using PHP once more and get nice pretty custom made graphs and gauges using HTML and JavaScript on our personal screens. To summarise:There's lots of places that we can go to on the Interweb that offer to remove the arduous task of creating our own databases (SQL and PHP) and make the whole process easier ..... But I want .... I need .... I must have ..... My own customised DIY website that I can tinker with to eternity. That's just me. I want full control over my precious data, I want to be able to delete little bits of it and generally manipulate it by adding new columns, select particularly juicy bits of data for processing and so on. I guess I'm a bit of a control freak?You can find the end result (The webpage) here: TEMPERATURES", "title": "Machine \u21d2 I2C \u21d2 GPRS Cellular Network \u21d2 DIY Webpage", "url": "https://www.instructables.com/id/Machine-I2C-GPRS-Cellular-Network-DIY-Webpage/", "section": "technology", "steps": [{"step": 1, "steps_text": "Databases ARE interesting and ARE fun right? Ok ..... Maybe not to everybody, but they can be very useful.First of all, this project requires a proper website with something called 'cPanel'. There's plenty of companies who offer cheap or even free websites, but do they offer cPanel and proper databases? Moreover, do they offer a decent customer support service when/if something goes wrong? Trust me, everything will go wrong if it possibly can! For a professional system, we'd also want to be able to make a back up of the database any time it's needed.The company that I use is called 'United Hosting' and they have an excellent product and superb customer service.For this project, I'm going to keep things really nice and simple and just monitor two separate temperatures, tempA and tempB.It's quite easy and intuitive to set up the database in cPanel - just hit the 'new' button in phpMyAdmin and off you go, but be sure to make a note of the database name, the username you are using, the table name and the password for your username. Next, use the 'Structure' tab and add columns for 'Timestamp' and 'ID', then fiddle about with the options until you get the structure looking like the screenshot above. The ID column has to auto increment and the Timestamp must have 'CURRENT_TIMESTAMP' in the appropriate column. Create the appropriate columns for tempA and tempB and you're done.So why would we ever want or need our own database? The answer is that by using code called SQL and PHP we can 'query' the database and organise the information in all kinds of interesting and exciting ways. We could analyse the last batch of whiskey data and get our website to display the maximum temperature that the boiler reached, which would then tell us something about the possible flavour profile and alcohol content. Basically, a higher boiler temperature indicates more 'heavy' flavour compounds .... and greater hangover potential! By monitoring and manipulating the 'reflux' temperature and boiler temperature data on a graph we can look at the way they interact and get a really good idea of what our whiskey is going to taste like.", "step_imgs": ["https://cdn.instructables.com/FP0/KBJF/IV0AQXYD/FP0KBJFIV0AQXYD.LARGE.jpg", "https://cdn.instructables.com/F1U/F08X/IV0AQXY9/F1UF08XIV0AQXY9.LARGE.jpg", "https://cdn.instructables.com/F37/W0M8/IV0AQXYF/F37W0M8IV0AQXYF.LARGE.jpg"], "step_title": "Step 1: The Database"}, {"step": 2, "steps_text": "To make things really, really simple, I stuck the components on a breadboard but substituted the Mega for a Nano for sheer convenience. The main objective was to get the C++ code working properly and enable data from the Machine (the Nano) to be disassembled, transmitted to the Fona Feather and reassembled for further GPRS transmission. The Feather is an tiny Arduino microprocessor with a cell phone module bolted on to it and can be programmed similar to any other Arduino and communication between the two Arduinos is by way of the I2C bus. To summarise:The Machine (Nano) \u21d2 I2C bus \u21d2The GPRS transmitter (Feather)The circuit itself is fairly simple although there's a couple of things to watch out for. Most importantly, the 'chip' version of the DS18B20 is wired differently to the probe with leads attached. The chip has both it's outer legs attached to earth and the probe has the red wire attached to positive. Get this wrong and you will fry the chips.Getting the Feather to actually work, even with a simple 'Blink' program is a pain in the proverbial and all kinds of special drivers and board profiles need to be uploaded, which is all explained HERE. However, once it's up and running it seems to work well and handle the data ok.Bill of Materials:ANT1 Antenna   D1 Rectifier Diode package 300 mil [THT]; type Rectifier; part # 1N4001    DS1 DS18B20 1-Wire Temperature Sensor part # DS18B20     DS2 DS18B20 1-Wire Temperature Sensor Probe Cable     LED1 Red (633nm) LED package 5 mm [THT]; color Red (633nm); leg yes     LED2 Blue (470nm) LED package 5 mm [THT]; color Blue (470nm); leg yes     Part1 Arduino Nano (Rev3.0) type Arduino Nano (3.0)     Part3 Adafruit Feather 32u4 FONA variant variant 1; part # Adafruit #3027     Power plug1 Power plug   R4 4.7k\u03a9 Resistor package THT; bands 4; resistance 4.7k\u03a9; tolerance \u00b15%; pin spacing 400 mil     R5 10k\u03a9 Resistor package THT; bands 4; resistance 10k\u03a9; tolerance \u00b15%; pin spacing 400 mil     R6 10k\u03a9 Resistor package THT; bands 4; resistance 10k\u03a9; tolerance \u00b15%; pin spacing 400 mil     R7 10k\u03a9 Resistor package THT; bands 4; resistance 10k\u03a9; tolerance \u00b15%; pin spacing 400 mil     R8 1k\u03a9 Resistor package THT; bands 4; resistance 1k\u03a9; tolerance \u00b15%; pin spacing 400 mil     R9 1k\u03a9 Resistor package THT; bands 4; resistance 1k\u03a9; tolerance \u00b15%; pin spacing 400 mil     R10 1k\u03a9 Resistor package THT; bands 4; resistance 1k\u03a9; tolerance \u00b15%; pin spacing 400 mil     S1 Taiway 100-SP-X-T1 SPDT Miniature Toggle Switch variant - through hole solder lugs.; package THT; switching circuit SPDT; part # 100-SP-X-T1-0-0-B1-M1     S2 Pushbutton package [THT]     S4 Pushbutton package [THT]     U1 LIPO-1000mAh variant 1000mAh; package lipo-1000", "step_imgs": ["https://cdn.instructables.com/FFV/QJZD/IV0ARA9D/FFVQJZDIV0ARA9D.LARGE.jpg", "https://cdn.instructables.com/FM1/LR2V/IVA4JKFA/FM1LR2VIVA4JKFA.LARGE.jpg", "https://cdn.instructables.com/FFQ/RDRN/IV0ARA9F/FFQRDRNIV0ARA9F.LARGE.jpg"], "step_title": "Step 2: The Gadgets "}, {"step": 3, "steps_text": "The code is divided into two sets, one for the Nano, which is the 'Master' and one for the Feather, which is the 'Slave'. Essentially, we're breaking down a fairly complex number, namely a 'Float', which could have a value of, for example 98.29. This number is too complex to shove down the I2C bus so it needs to be broken down into pieces with an integer value of anything less than 255 (and no decimal place). For convenience, I broke the float down into individual integer digits, so 98.29 would get transmitted as 9 ..... then 8 .... then 2 ... then 9.The Nano uses string functions to calculate the length of the float number and remove the decimal place:testAAAA = nothing + tempZ*100;\nstringLengthAA = testAAAA.length();\ntestAAAA.remove((stringLengthAA-3),3); // Remove decimal place etc.\n\n'nothing' is an 'iniator' to change an integer to a string. It wont work without it!We process this string into individual characters using the variable digitCharAAAA[] and then spit out individual integers using the variable digitAAAA, which are then of a suitable size for transmission.n=stringLengthAA-4;<br>      while (n>-1)                                       // Send the data back to front.\n      {\n      digitCharAAAA[n-1] = testAAAA.charAt(n);\n      n--;\n      digitAAAA = (digitCharAAAA[n]+nothing).toInt();\n      Serial.print(\"Digit to send:  \"); Serial.println(digitAAAA); \n      delay(20); \n      Wire.write(int (digitAAAA));                       // Values must not be greater than 255 (1 byte)?\n      }But ..... We need to first tell the Feather that it needs to take notice of the data appropriately so we have to put a marker, or ID, into the stream of data to enable it to reassemble it AND the data requires a certain amount of 'junk' to be send between the relevant bits. Starting to sound complicated? We also need to tell the Feather how long the data stream is (number of individual integers).Wire.write(dataPrecursor);                          // Must send this junk data precursor first!<br>Wire.write(numberId);\nWire.write(stringLengthAA-3);                       // Length of the data streamThe ID and junk needs to be longer than one digit but not over 255, so for example the ID could be 101 and the junk 198.To summarise:Write, or transmit the junk and the ID first, then an integer representing the length of the data stream, then the individual digits of data themselves.Here's the whole transmission function:void sendData()<br>{\n  //  We're going to turn testAAAA and testBBBB into shorter numbers to transmit:\n  //  assume the number is less than 1,000 and we want to preserve the first two decimal places\n    testAAAA = nothing + tempZ*100;\n    stringLengthAA = testAAAA.length(); \n    testAAAA.remove((stringLengthAA-3),3); // Remove decimal place etc.\n    Serial.print(\"testAAAA: \");Serial.println(testAAAA);\n    Wire.write(dataPrecursor);                          // Must send this junk data precursor first!\n    Wire.write(numberId);\n    Serial.print(\"numberId is:   \");Serial.println(numberId);  \n    Wire.write(stringLengthAA-3);\n    n=stringLengthAA-4;\n      while (n>-1)                                       // Send the data back to front.\n      {\n      digitCharAAAA[n-1] = testAAAA.charAt(n);\n      n--;\n      digitAAAA = (digitCharAAAA[n]+nothing).toInt();\n      Serial.print(\"Digit to send:  \"); Serial.println(digitAAAA); \n      delay(20); \n      Wire.write(int (digitAAAA));                       // Values must not be greater than 255 (1 byte)?\n      }Yes it's complicated!NB. Don't be tempted to simplify the variable names as this causes memory handling errors.And here's the Master code in it's entirety:#include \n#include \n#include \n// Data wire is plugged into pin 10 on the Arduino\n#define ONE_WIRE_BUS 10\n#define TEMPERATURE_PRECISION 12\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(&oneWire);\nDeviceAddress sensor0,sensor1;\nint deviceCount =0;\nchar digitCharAAAA[10];\nchar digitCharBBBB[10];\nfloat tempA=27.39;\nfloat tempB=29.23;\nfloat tempZ=20.01;\nString testAA;\nString nothing;            // This is important - the string precursor.\nString testAAAA;          // File names need to be of sufficient complexity!\nString testBBBB;\nint stringLengthAA;\nint numberId =101;\nint dataPrecursor = 198;  // A randomish number below 254. Be careful it does not conflict with numberIds.\nint n = 0;\nint digitAAAA;\n\n                    \n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nvoid setup() \n{\n  pinMode(13,OUTPUT);\n  digitalWrite(13, HIGH);   \n  delay(1000);                       \n  digitalWrite(13, LOW);    \n  Wire.begin(); \n  Serial.begin(9600);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  sensors.begin();\n  // locate devices on the bus\n//  Serial.print(\"Locating devices...\");\n//  Serial.print(\"Found \");\n//  deviceCount = sensors.getDeviceCount(), DEC;\n//  Serial.print(deviceCount);\n//  Serial.println(\" devices.\");\n  \n  if (!sensors.getAddress(sensor0, 0)) Serial.println(\"Unable to find address for Device 0\"); \n  if (!sensors.getAddress(sensor1, 1)) Serial.println(\"Unable to find address for Device 1\"); \n  \n  sensors.setResolution(sensor0, TEMPERATURE_PRECISION);\n  sensors.setResolution(sensor1, TEMPERATURE_PRECISION);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nvoid loop() \n  {\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////// \n   Serial.println(\"\");\n   sensors.requestTemperatures();  \n   Serial.print(\"tempA: \");\n   tempA =sensors.getTempCByIndex(0); // Change the index value accordingly.\n   Serial.println(tempA); \n  \n  // sensors.requestTemperatures();  \n   Serial.print(\"tempB: \");\n   tempB =sensors.getTempCByIndex(1); // Change the index value accordingly.\n   Serial.println(tempB); \n   Serial.println(\"\");  \n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    \n   digitalWrite(13, HIGH);\n   delay(5000);\n   digitalWrite(13, LOW);\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n   Serial.println(\"Now we are doing a transmission ....... \"); \n   Serial.println(\"\"); \n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// \n   Wire.beginTransmission(9); // transmit to device #9     // Make sure the order is the same in master and slave.\n   delay(20);  \n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// \n  // We're going to send two chunks of data, tempA and tempB. Each of them is less than 1,000 and has two digits after the \n  //decimal place.\n\n   tempZ=tempA;\n   numberId= 101;\n   sendData();\n  \n   tempZ=tempB;\n   numberId= 109;\n   sendData();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n   Wire.endTransmission();\n   Serial.println(\"\");\n   Serial.println(\"Transmission ended ....... \");\n   Serial.println(\"\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n   delay(120000);\n}\nvoid sendData()\n{\n  //  We're going to turn testAAAA and testBBBB into shorter numbers to transmit:\n  //  assume the number is less than 1,000 and we want to preserve the first two decimal places\n    testAAAA = nothing + tempZ*100;\n    stringLengthAA = testAAAA.length(); \n    testAAAA.remove((stringLengthAA-3),3); // Remove decimal place etc.\n    Serial.print(\"testAAAA: \");Serial.println(testAAAA);\n    Wire.write(dataPrecursor);                          // Must send this junk data precursor first!\n    Wire.write(numberId);\n    Serial.print(\"numberId is:   \");Serial.println(numberId);  \n    Wire.write(stringLengthAA-3);\n    n=stringLengthAA-4;\n      while (n>-1)                                       // Send the data back to front.\n      {\n      digitCharAAAA[n-1] = testAAAA.charAt(n);\n      n--;\n      digitAAAA = (digitCharAAAA[n]+nothing).toInt();\n      Serial.print(\"Digit to send:  \"); Serial.println(digitAAAA); \n      delay(20); \n      Wire.write(int (digitAAAA));                       // Values must not be greater than 255 (1 byte)?\n      }\n}      \n\n", "step_imgs": ["https://cdn.instructables.com/F46/RSEM/IV0ARF2N/F46RSEMIV0ARF2N.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 3: Arduino Nano Code - Master"}, {"step": 4, "steps_text": "A lot of the 'Slave ' code is to do with sending the data to a PHP file called send.php and the crucial part is where a big long string called 'dataString' is created and then changed into a long character array which includes an 'initiator', the web address, the name for each temperature reading eg tempA and the data itself eg result101.dataString =  initiator + webAddress + \"tempA=\"+result101 + \"&tempB=\"+result109  ;  // To add another temperature reading we would need: +\"&tempB=\"+tempB \n  int n = dataString.length();  Serial.print(\"Data string to send:     \");Serial.println(dataString);   \n  Serial.print(\"Size of string:  \");Serial.println(n);\n  // Builds the url character:\n      for (int aa=0;aa<=n;aa++)                                              \n      {\n          url[aa] = dataString[aa];\n      }This is then sent to the Fona module on the Feather inside the fonaSerial connection using:if (!fona.HTTP_GET_start(url, &statuscode, (uint16_t *)&length)) {<br>          Serial.println(\"Failed!\");\n        }The data coming into the Feather is read by this bit of code:void receiveEvent(int bytes)<br>{\n  delay(5000); // wait for data to be sent.\n  a=10;\n  while (a>0) // This looks for the correct numberId to iniate the next if command.\n  {\n  numberId = Wire.read(); \n  ledFlash();\n//  Serial.print(\"Possible number Id:   \");Serial.println(numberId); \n  \n  n=-1;\n  compileA = nothing;\n  testad = nothing;\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  \n //   Serial.println(\"\"); \n    if (numberId==101)\n    {\n    unravelData();\n    result101 = (rabbits+nothing).toInt()/100.00;\n    }\n    else if (numberId==109)\n    {\n    unravelData();\n    result109 = (rabbits+nothing).toInt()/100.00; \n    Serial.print(\"Result 101:   \");Serial.println(result101,2);     \n    Serial.print(\"Result 109:   \");Serial.println(result109,2); \n    Serial.println(\"\");     \n    }It is then interpreted, or 'unravelled', in this function:void unravelData()\n{\n     a=10;\n    stringLength = Wire.read(); \n      while (n<stringlength) p=\"\" n++;<=\"\"      =\"\" string.=\"\" a=\"\" is=\"\" this=\"\" wire.read();=\"\" +=\"\" testad=\"nothing\" compilea;=\"\" compilea=\"testad\" {=\"\"></stringlength)>    //  Serial.print(\"Compile 109:  \");Serial.println(compileA); \n      }\n    \n  numberA = compileA;\n//  Serial.print(\"NumberA:  \");Serial.println(numberA); \n//  Serial.print(\"String length:   \");Serial.println(stringLength); \n  \n //Builds the rabbits character:\n      i=stringLength;\n      for (int aa=0;aa<=i;aa++)                                              \n      {\n          rabbits[aa] = compileA[aa];\n      }  \n //Now create a string in which the last 3 characters represent the ID. The string can have the last four characters removed before being processed at the next stage.\n      resultForNumberId = nothing + rabbits +\" & \" + numberId;\n   \n //   Serial.print(\"rabbits:  \");Serial.println(rabbits);  \n //   Serial.print(\"Result for number Id: \");Serial.print(numberId); Serial.print(\" is: \"); Serial.println(resultForNumberId );\n    Serial.println(\"\");  \n}Where 'rabbits' is a character array of the actual data. Eventually, rabbits gets turned into a complex float number using the famous toInt command. Notice the 'nothing' initiator - it wont work without it!result101 = (rabbits+nothing).toInt()/100.00;And here's the full Feather Slave code:#include <Wire.h>\n#include <OneWire.h>\n#include <DallasTemperature.h>\n// Data wire is plugged into pin 10 on the Arduino\n#define ONE_WIRE_BUS 10\n#define TEMPERATURE_PRECISION 12\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(&oneWire);\nDeviceAddress sensor0,sensor1;\nint deviceCount =0;\nchar digitCharAAAA[10];\nchar digitCharBBBB[10];\nfloat tempA=27.39;\nfloat tempB=29.23;\nfloat tempZ=20.01;\nString testAA;\nString nothing;            // This is important - the string precursor.\nString testAAAA;          // File names need to be of sufficient complexity!\nString testBBBB;\nint stringLengthAA;\nint numberId =101;\nint dataPrecursor = 198;  // A randomish number below 254. Be careful it does not conflict with numberIds.\nint n = 0;\nint digitAAAA;\n\n                    \n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nvoid setup() \n{\n  pinMode(13,OUTPUT);\n  digitalWrite(13, HIGH);   \n  delay(1000);                       \n  digitalWrite(13, LOW);    \n  Wire.begin(); \n  Serial.begin(9600);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  sensors.begin();\n  // locate devices on the bus\n//  Serial.print(\"Locating devices...\");\n//  Serial.print(\"Found \");\n//  deviceCount = sensors.getDeviceCount(), DEC;\n//  Serial.print(deviceCount);\n//  Serial.println(\" devices.\");\n  \n  if (!sensors.getAddress(sensor0, 0)) Serial.println(\"Unable to find address for Device 0\"); \n  if (!sensors.getAddress(sensor1, 1)) Serial.println(\"Unable to find address for Device 1\"); \n  \n  sensors.setResolution(sensor0, TEMPERATURE_PRECISION);\n  sensors.setResolution(sensor1, TEMPERATURE_PRECISION);\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\nvoid loop() \n  {\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////// \n   Serial.println(\"\");\n   sensors.requestTemperatures();  \n   Serial.print(\"tempA: \");\n   tempA =sensors.getTempCByIndex(0); // Change the index value accordingly.\n   Serial.println(tempA); \n  \n  // sensors.requestTemperatures();  \n   Serial.print(\"tempB: \");\n   tempB =sensors.getTempCByIndex(1); // Change the index value accordingly.\n   Serial.println(tempB); \n   Serial.println(\"\");  \n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    \n   digitalWrite(13, HIGH);\n   delay(5000);\n   digitalWrite(13, LOW);\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n   Serial.println(\"Now we are doing a transmission ....... \"); \n   Serial.println(\"\"); \n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// \n   Wire.beginTransmission(9); // transmit to device #9     // Make sure the order is the same in master and slave.\n   delay(20);  \n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// \n  // We're going to send two chunks of data, tempA and tempB. Each of them is less than 1,000 and has two digits after the \n  //decimal place.\n\n   tempZ=tempA;\n   numberId= 101;\n   sendData();\n  \n   tempZ=tempB;\n   numberId= 109;\n   sendData();\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n   Wire.endTransmission();\n   Serial.println(\"\");\n   Serial.println(\"Transmission ended ....... \");\n   Serial.println(\"\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n   delay(120000);\n}\nvoid sendData()\n{\n  //  We're going to turn testAAAA and testBBBB into shorter numbers to transmit:\n  //  assume the number is less than 1,000 and we want to preserve the first two decimal places\n    testAAAA = nothing + tempZ*100;\n    stringLengthAA = testAAAA.length(); \n    testAAAA.remove((stringLengthAA-3),3); // Remove decimal place etc.\n    Serial.print(\"testAAAA: \");Serial.println(testAAAA);\n    Wire.write(dataPrecursor);                          // Must send this junk data precursor first!\n    Wire.write(numberId);\n    Serial.print(\"numberId is:   \");Serial.println(numberId);  \n    Wire.write(stringLengthAA-3);\n    n=stringLengthAA-4;\n      while (n>-1)                                       // Send the data back to front.\n      {\n      digitCharAAAA[n-1] = testAAAA.charAt(n);\n      n--;\n      digitAAAA = (digitCharAAAA[n]+nothing).toInt();\n      Serial.print(\"Digit to send:  \"); Serial.println(digitAAAA); \n      delay(20); \n      Wire.write(int (digitAAAA));                       // Values must not be greater than 255 (1 byte)?\n      }\n}      \n\n\n", "step_imgs": ["https://cdn.instructables.com/FCJ/J8FH/IV0ARF2V/FCJJ8FHIV0ARF2V.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 4: Aduino Feather Code - Slave"}, {"step": 5, "steps_text": "So now that we've got the breadboard layout working, we need to program the server in Ipswich to accept the data into a database and then make it available on the Interweb for everybody to see. Thankfully, this code is a million times more simple than the Arduino Master and Slave code so relax .... The end is in sight!Create a file called 'send.php' and paste the following code into it:Can you spot the snippets of SQL code in the below?<?php\n// Create connection\n$username = \"paddygoa_test\";\n$password = \"testing\";\n$hostname = \"localhost\"; \n$databasetable = \"testing\";\n\n$dbhandle = mysql_connect($hostname, $username, $password) \nor die(\"Unable to connect to MySQL\");\n\n$selected = mysql_select_db(\"paddygoa_test\",$dbhandle) \nor die(\"Could not select database\");\n\n$result = mysql_query(\"INSERT INTO $databasetable(tempA,tempB) VALUES (\n'\" . $_GET[tempA] . \"',\n'\" . $_GET[tempB] . \"')\",\n$dbhandle);\n\n/////////////////////////////////////////////////////////////////////////////////\n\necho \"<html>\";\necho \"<head><Title> ... Success! ... </title>\";\necho \"</head>\";\necho \"<body>\";\necho \"</body>\";\necho \"</html>\";\nmysql_close($dbhandle);\n?>Feel free to use my 'test' database. Now the data should get into a database called 'paddygoa_test' and into a table located therein called 'testing'. To create your own database, go back to step 2.", "step_imgs": ["https://cdn.instructables.com/FFK/70JC/IV0ARJTN/FFK70JCIV0ARJTN.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 5: Database Code"}, {"step": 6, "steps_text": "Finally, we get to build a webpage., which is a glorious combination of HTML, PHP and JavaScript - our crowning glory! Notice that there are links to some other files including dataTemperature04.php, which creates something called a 'json' output.<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n\n  <head>\n  \n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\n  <meta http-equiv=\"Cache-control\" content=\"no-cache\">\n  <meta http-equiv='refresh' content='600';url='temperatures.html'> <!-- Refreshes page every 600 seconds -->\n  <META NAME=\"description\" CONTENT=\"GPRS temperature transmitter\">\n  <META  HTTP-EQUIV=\"EXPIRES\"  CONTENT=\"Mon, 31 Dec 2002 23:59:59 GMT\">  \n  <META NAME=\"keywords\" CONTENT=\"GPRS temperature transmitter\">\n  <link REL=\"SHORTCUT ICON\" HREF=\"goat.ico\">  \n  </head>\n  \n    <title>Temperatures</title>\n    <script src=\"http://www.amcharts.com/lib/3/amcharts.js\"></script>\n    <script src=\"http://www.amcharts.com/lib/3/serial.js\"></script>\n    <script src=\"http://www.amcharts.com/lib/3/plugins/dataloader/dataloader.min.js\"></script>\n\n    <script>\n    myCallback();    \n    var intervalID = window.setInterval(myCallback, 120000);\n    function myCallback() {    \n    \n    \n    var chart = AmCharts.makeChart(\"chartdivPressure\", {\n     \"type\": \"serial\",\n      \"dataLoader\": {\n        \"url\": \"dataTemperature04.php\",\n        \"timestamp\": true,\n   //     \"complete\": function(chart) { chart.invalidateSize();}\n        \"format\": \"json\",\n        \"showErrors\": true,\n        \"noStyles\": true,\n        \"async\": true,\n        \"load\": function( options, chart ) {\n          // Here the data is already loaded and set to the chart.\n          // We can iterate through it and add proper graphs\n          for ( var key in chart.dataProvider[ 0 ] ) {\n            if ( chart.dataProvider[ 0 ].hasOwnProperty( key ) && key != chart.categoryField ) {\n              var graph = new AmCharts.AmGraph();\n              graph.valueField = key;\n              graph.type = \"line\";\n              graph.title = key,\n              graph.lineThickness = 2;\n              chart.addGraph( graph );\n            }\n          }\n        }\n      },\n     \"rotate\": false,\n     \"marginTop\": 10,\n\t \n     \"categoryField\": \"category\",\n     \"categoryAxis\": {\n       \"gridAlpha\": 0.07,\n       \"axisColor\": \"#DADADA\",\n\t   \"labelRotation\": \"90\",\n       \"startOnAxis\": false,\n       \"title\": \"Date and Time\",\n     },\n\t \n     \"valueAxes\": [{\n       \"stackable\": \"false\",\n       \"gridAlpha\": 0.07,\n       \"title\": \"Temperatures\"            \n     }],\n\t \n     \"graphs\": [],\n     \"legend\": {\n       \"position\": \"bottom\",\n       \"valueText\": \"[[value]]\",\n       \"valueWidth\": 100,\n       \"valueAlign\": \"left\",\n       \"equalWidths\": false,\n     },\n     \"chartCursor\": {\n       \"cursorAlpha\": 0\n     },\n     \"chartScrollbar\": {\n       \"color\": \"FFFFFF\"\n     }\n\n    });\n/////////////////////////////////////////////////////////////////////////////////\n }\n/////////////////////////////////////////////////////////////////////////////////      \n    </script>\n<style type=\"text/css\">\n<!--\n\n#MenuLayer {\n\tposition:absolute;\n\twidth:350px;\n\theight:60px;\n\tz-index:5;\n        left: 400px;\n\ttop: 550px;\n}\n.style1 {\n\tfont-size: 20px;\n\tfont-weight: bold;\n}\n</style>    \n  </head>\n<style type=\"text/css\">\n  ul {list-style: none;padding: 0px;margin: 0px;}\n  ul li {display: block;position: relative;float: left;border:1px solid #000}\n  li ul {display: none;}\n  ul li a {display: block;background: #FFA;padding: 5px 10px 5px 10px;text-decoration: none;\n           white-space: nowrap;color: #000;}\n  ul li a:hover {background: #f0f;}\n  li:hover ul {display: block; position: absolute;}\n  li:hover li {float: none;}\n  li:hover a {background: #47c;}\n  li:hover li a:hover {background: #4d2;}\n  #drop-nav li ul li {border-top: 0px;}\n</style>  \n\n  <body>\n<div id=\"MenuLayer\"><ul id=\"drop-nav\">\n  <li><a href=\"http://www.goatindustries.co.uk/weather/\">Home</a>\n    <ul>\n      <li><a href=\"http://www.goatindustries.co.uk/weather/\">Home</a></li>\n    </ul>\n  </li>\n    <li><a href=\"#\">Themes</a>\n    <ul>\n      <li><a href=\"http://www.goatindustries.co.uk/weather/chrome.php\">Chrome</a></li>\n      <li><a href=\"http://www.goatindustries.co.uk/weather/index.php\">Plain</a></li>\n      <li><a href=\"#\">Other</a></li>\n    </ul>\n  </li>\n  <li><a href=\"#\">Graphs</a>\n    <ul>\n      <li><a href=\"http://www.goatindustries.co.uk/weather/plain.html\">Rain and Pressure</a></li>\n      <li><a href=\"http://www.goatindustries.co.uk/weather/temperatures.html\">Temperatures</a></li>\n      <li><a href=\"#\">Wind Speed</a></li>\n      <li><a href=\"#\">Wind Direction</a></li>\n      <li><a href=\"#\">Humidity</a></li>\n      <li><a href=\"http://www.goatindustries.co.uk/weather/pressure.html\">Pressure</a></li>\n      <li><a href=\"http://www.goatindustries.co.uk/weather/rainfall.html\">Rainfall</a></li>\n      <li><a href=\"#\">Volts</a></li>\t  \t  \t  \n    </ul>\n  </li>\n  <li><a href=\"http://www.goatindustries.co.uk/\">Contact</a>\n    <ul>\n      <li><a href=\"http://www.goatindustries.co.uk/\">General Inquiries</a></li>\n    </ul>\n  </li>\n</ul></div>  \n     \t\n     \t<div id=\"chartdivPressure\" style=\"position: absolute; left: 0px; top: 0px; width:1000px; height:590px; z-index: 3\"></div>\n  </body>\n\n</html>\ndataTemperature04.php:<?php\n// we need this so that PHP does not complain about deprectated functions\nerror_reporting( 0 );\n\n// Connect to MySQL\n$link = mysql_connect( 'localhost', 'paddygoa_test', 'testing' );\nif ( !$link ) {\n  die( 'Could not connect: ' . mysql_error() );\n}\n\n// Select the data base\n$db = mysql_select_db( 'paddygoa_test', $link );\nif ( !$db ) {\n  die ( 'Error selecting database \\'test\\' : ' . mysql_error() );\n}\n  \n\n// Fetch the data\n$query17 = \"\n  SELECT *\n  FROM testing\n  ORDER BY id DESC LIMIT 1008\";\n$result17 = mysql_query( $query17 );\n\n// All good?\nif ( !$result17 ) {\n  // Nope\n  $message  = 'Invalid query: ' . mysql_error() . \"\\n\";\n  $message .= 'Whole query: ' . $query17;\n  die( $message );\n}\n// Print out rows\n\n$prefix = '';\necho \"[\\n\";\nwhile ( $row17 = mysql_fetch_assoc( $result17 ) ) {\n\n// Parse timestamp:  \n      $timestamp = $row17['time'];\n      $epochtime = strtotime($timestamp);   \n      $dayhourminutes = date(\"D H:i\", $epochtime);\n\n\n  echo $prefix . \" {\\n\";\n  echo '  \"category\": \"' . $dayhourminutes . '\",' . \"\\n\";\n  echo '  \"TempA\": \"' . $row17['tempA'] . '\",' . \"\\n\";  \n  echo '  \"TempB\": ' . $row17['tempB'] . '' . \"\\n\";\n  echo \" }\";\n  $prefix = \",\\n\";\n}\necho \"\\n]\";\n\n\n\n// Close the connection\nmysql_close( $link );\n?>These files need to go in the correct folders on your website or they wont link up.", "step_imgs": ["https://cdn.instructables.com/FVN/QJS3/IV0ARKF6/FVNQJS3IV0ARKF6.LARGE.jpg", "/assets/img/pixel.png", "/assets/img/pixel.png"], "step_title": "Step 6: Webpage Code"}, {"step": 7, "steps_text": "Now we take the Feather off the breadboard and bolt it into a black box with some connectors, some switches and loads of LEDs to flash on and off as wildly as possible.Parts:8771113 1 M12 Panel mount Female 5W 200 mm, PG 9    487832 1 Panel mount power socket,2.1mm 5A 12V    8771141 1 M12 Field Connector male, 5W,PG 7    9131724 1 switch Push button 12mm blue momentary    7064060 1 Switch p/button,DPST green,220V,10A    7064067 1 Switch p/button,DPST red,220V,10A    7743341 10 Diode Schottky 20V 3A DO201AD   Max001 waterproof box", "step_imgs": ["https://cdn.instructables.com/FYQ/1207/IVA4JKFB/FYQ1207IVA4JKFB.LARGE.jpg", "https://cdn.instructables.com/FWA/0Y1D/IVA4JKFD/FWA0Y1DIVA4JKFD.LARGE.jpg"], "step_title": "Step 7: The Hardware - a Nestbox for the Feather"}, {"step": 8, "steps_text": "Above is the fully operation automated whiskey still with 4 temperature sensors, one pressure sensor and one alcohol vapour detector.If you've got 20 minutes to spare, you'll get a free tour of the distillery getting to see inside the control panels and be generally dazzled and bemused by a vast array of flashing lights, noisy pumps, beeping noises and robot voices.Please         in the competitions - top right - Thanks! ", "step_imgs": ["/assets/img/pixel.png"], "step_title": "Step 8: Final"}], "channel": "Mobile"}, {"category": "technology", "description": "What do scientist? They discover new things! You can say, that it is expensive. No! You can explore with cheap materials, at home with huge amount of data and nice graphs. This is project about popular Mpemba effect - hot water freeze faster then cooler. It is interesting story, how african boy found that effect. Story from wikipedia here :The effect is named after Tanzanian Erasto Mpemba. He described it in 1963 in Form 3 of Magamba Secondary School, Tanganyika,when freezing ice cream mix that was hot in cookery classes and  noticing that it froze before the cold mix. He later became a student at  Mkwawa Secondary (formerly High) School in Iringa. The headmaster invited Dr. Denis G. Osborne from the University College in Dar es Salaam  to give a lecture on physics. After the lecture, Erasto Mpemba asked  him the question \"If you take two similar containers with equal volumes  of water, one at 35 \u00b0C (95 \u00b0F) and the other at 100 \u00b0C (212 \u00b0F), and put  them into a freezer, the one that started at 100 \u00b0C (212 \u00b0F) freezes  first. Why?\", only to be ridiculed by his classmates and teacher. After  initial consternation, Osborne experimented on the issue back at his  workplace and confirmed Mpemba's finding. They published the results  together in 1969, while Mpemba was studying at the College of African Wildlife Management.[9]Well, that's interesting, but every hypothesis must be proved by experiments in laboratory and explain this phenomena. This project is about how to build simple datalogger for measure temperature using 2 digital termal sensors which send data to Thingspeak and how to measure this effect, analyze graphs in excell and interpret results. ", "title": "Explore Thermodynamics: Reach Your Mpemba Effect! (with Building ESP Thermologger) ", "url": "https://www.instructables.com/id/Explore-Thermodynamics-Reach-Your-Mpemba-Effect-wi/", "section": "technology", "steps": [{"step": 1, "steps_text": "When I think how to measure temperature simple, the best solution is send data toward to Internet. Using microSD cards are pretty uncomfortable, when I want just check temperature, I must open SD cards, move etc. So I decided to use esp8266 board instead of using Arduino and check data wherever I am (just check using thinspeak app on smartphone).In this step, I describe list of materials and  circuit. For project is needed:1. WeMos D1 retired (I use this) or  whatever what work on esp8266 chip2.  2 xDS18b20 waterproof termal sensors3. resistor 4k7 (4700 ohm)4. 9V power adapter (here) for powering wemos5. breadboard6. some cables for connections7. containers, cups or something where we can measure water, i used these plastic cup suitable for measuring8. freezer (fridget usually takes only - 5 \u00b0), I used to - 25 \u00b0C9. several liquids for measure, depends, what you want to measure, I use water, distilled water (pure water), saline water, Coca cola, Optional:1. soldering iron, solder, etc for make proper pins for termal sensorsCircuit is pretty simple (check picture). I use WeMos D1 retired board, which is mix of Arduino Uno and Esp8266. First you can connect both termal sensors to breadboard. Connect VCC cables together, Gnd cables  together and signal cables too. Usually you can recognize VCC pins as red cables, Gnd as black, and signal as yellow. Then connect 4k7 resisot between Vcc pin (cables) and Signal pin (cables). Finally connect Vcc pin with 3,3 V on Wemos (marked as 3V3) and GND pin with Ground on Wemos. Signal pin from termal sensor to digital pin on wemos, I choose digital pin 8 (marked as D8). ", "step_imgs": ["https://cdn.instructables.com/FRG/T8KK/J4SQDZNH/FRGT8KKJ4SQDZNH.LARGE.jpg", "https://cdn.instructables.com/FAC/CTIU/J4YFU2AY/FACCTIUJ4YFU2AY.LARGE.jpg"], "step_title": "Step 1: Datalogger: Hardware"}, {"step": 2, "steps_text": "Firstly, you must have account on Thingspeak , where you must create your own  channel. Basically, it is intuitive way, how to create own channel, but most of all, you must remember your channel ID and write API key for code. You can donwload all your data at the end, see online your graphs and work with them.Secondly, is code for our datalogger. We use 2 digital termal sensors, which have unique address written in chip. So firstly you must find adress from both adress using code: /* YourDuino Example: Find Address of a DS18B20 Temperature Sensor<br>Cut and paste the address to a text file for later use.\nV1.1 01/17/2013\nQuestions: terry@yourduino.com\n\nConnections:\nDS18B20 Pinout (Left to Right, pins down, flat side toward you)\n- Left   = Ground\n- Center = Signal (Pin 2):  (with 3.3K to 4.7K resistor to +5 or 3.3 )\n- Right  = +5 or +3.3 V  \nThis sketch looks for 1-wire devices and  prints their addresses (serial number)\nto the Serial Monitor in a format that is useful in Arduino sketches.\nBased on example at:\n<a href=\"http://www.hacktronics.com/Tutorials/arduino-1-wire-address-finder.html\" rel=\"nofollow\">\nhttp://www.hacktronics.com/Tutorials/arduino-1-wi...</a>\n*\n*-----( Import needed libraries )-----*/\n#include \n\n/*-----( Declare Constants and Pin Numbers )-----*/\n#define SENSOR_PIN 8  // Any pin 2 to 12 (not 13) and A0 to A5\n\n/*-----( Declare objects )-----*/\nOneWire  ourBus(SENSOR_PIN);  // Create a 1-wire object\n\nvoid setup()  /****** SETUP: RUNS ONCE ******/\n{\n Serial.begin(9600);\n\ndiscoverOneWireDevices();  // Everything happens here!\n}//--(end setup )---\n\nvoid loop()   /****** LOOP: RUNS CONSTANTLY ******/\n{\n // Nothing happening here\n}\n\n/*-----( Declare User-written Functions )-----*/\nvoid discoverOneWireDevices(void) {\n byte i;\n byte present = 0;\n byte data[12];\n byte addr[8];\n\nSerial.print(\"Looking for 1-Wire devices...\\n\\r\");// \"\\n\\r\" is NewLine\n while(ourBus.search(addr)) {\n   Serial.print(\"\\n\\r\\n\\rFound \\'1-Wire\\' device with address:\\n\\r\");\n   for( i = 0; i < 8; i++) {\n     Serial.print(\"0x\");\n     if (addr[i] < 16) {\n       Serial.print('0');\n     }\n     Serial.print(addr[i], HEX);\n     if (i < 7) {\n       Serial.print(\", \");\n     }\n   }\n   if ( OneWire::crc8( addr, 7) != addr[7]) {\n     Serial.print(\"CRC is not valid!\\n\\r\");\n     return;\n   }\n }\n Serial.println();\n Serial.print(\"Done\");\n ourBus.reset_search();\n return;\n}\n\n//*********( THE END )***********You can use wemos, or any arduino. For wemos board, you must firstly go to file - preferences  and write to Manager board URL this:http://arduino.esp8266.com/stable/package_esp8266c...and then go to manager board at Tools and download esp8266. You should have new boards - so choose wemos d1 retired or any, which you use.After that, you can upload code to your esp:#include <br>#include \n#include \n \n#define ONE_WIRE_BUS D8\n \nconst char* ssid = \"here add wifi name\"; // here write your wifi \nconst char* password = \"456432132454\";  // here password from your wifi\nconst char* server = \"api.thingspeak.com\";\nconst char* api_key = \"GFDGDTRSDFDSFDSFDSFDSFSFSFSFSF\";  // here you write your thinspeak API KEY (write API KEY)\n \nWiFiClient client;\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(&oneWire);\n\n// variable for saving temperature\nfloat temp;  // for first sensor, variable is temp\nfloat temp2; // for second sensor, variable is temp2\n\n// set adress for 1-Wire communication\nDeviceAddress Probe01 = { 0x28, 0xFF, 0x9B, 0xB8, 0x70, 0x16, 0x04, 0xCA }; // here you must write adress of first termal sensor\nDeviceAddress Probe02 = { 0x28, 0x43, 0xEB, 0x26, 0x00, 0x00, 0x80, 0x6D }; // here you must write adress of second termal sensor \n\nvoid setup() \n{\nSerial.begin(115200);\ndelay(10);\nWiFi.begin(ssid, password);\n \nSerial.println();\nSerial.println();\nSerial.println(\"Connecting to Wifi \");\n \nWiFi.begin(ssid, password);\n \nwhile (WiFi.status() != WL_CONNECTED) \n{\ndelay(500);\nSerial.print(\".\");\n}\nSerial.println(\"WiFi connected\");\nsensors.begin();\n\nsensors.setResolution(Probe01, 12);\nsensors.setResolution(Probe02, 12);\n}\n \nvoid loop() \n{\nif (client.connect(server,80)) \n{\nSerial.println(\"Connect to ThingSpeak - OK\"); \n \nsensors.requestTemperatures();\n  temp = sensors.getTempC(Probe01);                                       \n temp2 = sensors.getTempC(Probe02); \n\nString dataToThingSpeak = \"\";\ndataToThingSpeak+=\"GET /update?api_key=\";\ndataToThingSpeak+=api_key;\n\ndataToThingSpeak+=\"&field1=\";\ndataToThingSpeak+=temp;          // writing to field 1 temperature from first sensor\n\ndataToThingSpeak+=\"&field2=\";\ndataToThingSpeak+=temp2;       // writing to field 2 temperature from second sensor\n\ndataToThingSpeak+=\"&field3=\";\ndataToThingSpeak+=temp2-temp;   // write to field 3 difference of both sensors\n \ndataToThingSpeak+=\" HTTP/1.1\\r\\nHost: a.c.d\\r\\nConnection: close\\r\\n\\r\\n\";\ndataToThingSpeak+=\"\";\nclient.print(dataToThingSpeak); \n \n\nSerial.println(temp);\nSerial.println(temp2);  \n \n \nSerial.println();\ndelay(1000); // wait 1 second = 1000 miliseconds\n}}Dont forget to do this:1. rewrite you wifi name at code2. rewrite your password to your wifi3. change both address on termal sensors4. rewrite your write API keyYou can also download app - Thingspeak on your smartphone to check temperature online on your mobile. ", "step_imgs": ["https://cdn.instructables.com/FXN/GG58/J4YFOHLM/FXNGG58J4YFOHLM.LARGE.jpg", "https://cdn.instructables.com/F4Z/9TSR/J4YFOHLP/F4Z9TSRJ4YFOHLP.LARGE.jpg", "https://cdn.instructables.com/FGC/QILH/J4YFOHLQ/FGCQILHJ4YFOHLQ.LARGE.jpg", "https://cdn.instructables.com/FPN/AXF6/J4YFOHLR/FPNAXF6J4YFOHLR.LARGE.jpg", "/assets/img/pixel.png", "/assets/img/pixel.png"], "step_title": "Step 2: Datalogger: Software"}, {"step": 3, "steps_text": "After that crucial electronics, you can measure. I use water, Coca cola and destilled water of different amounts. Method of measuring is simple: prepare firstly one warm liquid and colder liquid with same volume. I dont measure the mass, what should be better. Then fill containers, cups or whatever fit warm and cold liquids and place them to freezer. You can use basket and polystyrene to make place for cups or containers.Some notes:You can prepare distilled water pure water with evaporize and condensation water. Check this nice instructable Dont foget, that ice expand, so better dont use glass. Use some plastic things as plastic cups.Freezer can handle steam, but better use older one.If you use larger amounts, it takes more time, I wait basically from 3 - 12 hours. ", "step_imgs": ["https://cdn.instructables.com/F7T/3DZ0/J4YFOJ13/F7T3DZ0J4YFOJ13.LARGE.jpg", "https://cdn.instructables.com/F59/RF9F/J4YFOJFJ/F59RF9FJ4YFOJFJ.LARGE.jpg", "https://cdn.instructables.com/F6O/RPR4/J4YFOJFM/F6ORPR4J4YFOJFM.LARGE.jpg", "https://cdn.instructables.com/F6B/HTZO/J4YFOJFP/F6BHTZOJ4YFOJFP.LARGE.jpg", "https://cdn.instructables.com/FGF/CG48/J4YFOJFR/FGFCG48J4YFOJFR.LARGE.jpg", "https://cdn.instructables.com/FLB/3QCR/J4YFOJFZ/FLB3QCRJ4YFOJFZ.LARGE.jpg"], "step_title": "Step 3: Measuring"}, {"step": 4, "steps_text": "After measuring, go to your Thingspeak channel, and download all data (called feeds) at the end. You can open csv file with Excell. Firstly, you have all data in one collum, so you must go to data - text to collum and then you make in one collum one kind of data. I add at thingspeak one another collumm - temperatures difference.Firstly, I make graphs in Excell, check them, if you want. One for both temperatures - Temperature curves. On the x -axis I add datetime, which is date and time, another graph has time in seconds, at x - axis. Then I make difference graph.Also, at beginning, I made basic info table, where is important amount of liquid and type of liquid. Analyzing graphs are simple, just look at them, and check, if curve of warmer liquid goes under curve of colder one. Mostly point where it goes is 0 \u00b0C, or below a little. analyzing my graphs:1. coca cola - it contains a lot of sugar, and when I measure saline water (unfortunately, I dont mark excell file), I got similar situation around zerou point, when it freeze. When that kind of solutions (like saline water, sugar water) freeze, firstly it goes  to - 2 or - 5 \u00b0C  and then rapidly back to freezing point (for colaaround - 1.5 \u00b0C). You can check it at photos. This phenomena called supercooling. Anyway, for cola, Mpemba effect doesnt work.2. water - I use several times water from tap, but it looks, that it sometimes work, sometimes doesnt work. I show only one measuruing of water, because others I miss.3. distilled water - This is reversing point! For distilled water, which contains basically only molecules of H2O, it works! Mpemba effect occurs! Basically, Mpemba effect occurs for all amounts of distilled water, different is how much it occurs. We can check maximum difference between warmer and colder distilled water, which is absolute:1. for 20 ml difference is 3.94 \u00b0C2. for 30 ml difference is 4.12 \u00b0C3. for 100 ml difference is 1.69 \u00b0CWhen we check temperature \u00b10.5\u00b0C accuracy from \u201310\u00b0C to +85\u00b0C, which give totally 1 \u00b0C miss, even that, I reach Mpemba effect!", "step_imgs": ["https://cdn.instructables.com/FUG/484H/J4YFTKX8/FUG484HJ4YFTKX8.LARGE.jpg", "https://cdn.instructables.com/FUG/2343/J4YFTKXU/FUG2343J4YFTKXU.LARGE.jpg", "https://cdn.instructables.com/FHP/WSNS/J4YFTKZH/FHPWSNSJ4YFTKZH.LARGE.jpg", "https://cdn.instructables.com/FVD/B666/J4YFTL1Q/FVDB666J4YFTL1Q.LARGE.jpg", "https://cdn.instructables.com/FJ9/ZNVM/J4YFTL1U/FJ9ZNVMJ4YFTL1U.LARGE.jpg", "/assets/img/pixel.png", "/assets/img/pixel.png", "/assets/img/pixel.png", "/assets/img/pixel.png", "/assets/img/pixel.png"], "step_title": "Step 4: Analyze the Graphs"}, {"step": 5, "steps_text": "Explanation of this phenomena is a little complicated, but here are main reasons:1. supercooling Supercooling occurs              when a liquid does not freeze although its temperature is below its freezing point. That is simple explanations from  this  article. Supercooling is important for some organisms which live close to Articweather, where blood, organic liqguids instead crystalized and making ice, they stay fluid.Check photo of our curve of distilled water 20 ml - there was point of supercooling.Question is, what is freezing point for distilled water. Well, I dont know exactly, it can be zero theoretically, but there are not \"dirty\" crystals for making ice. But supercooling is characterized by \"reversed peak\", where distilled water rapidly, at once jump to higher place (0 \u00b0C or less). 2. Evaporation- warmer water evaporize more, so warmer water lose some mass. Basically warmer water lose around 3 % of mass. Not such impact, according me.3. Dissolved gases (check here what is dissolved gases)- well, distilled water has basically no dissolved gases.4. Convection- molecules of warmer water move faster, more molecules goes up, and freeze faster. Possible impact.5. surroundings- it is question, if warmer and cold liquids are good isolated, but I think that this factor havent such impact.Other arguments, which are against it:1. wrong measuring - temperature sensors in both cups arent in same position - well, it can be true, basically, when one sensor is in horizontal position and the second sensor is in vertical position. Another argument is, scientists measure Mpemba effect and they at second measurement move up one sensor, and Mpemba effect doesnt occur. Check photo above in this step, where are both sensors.", "step_imgs": ["https://cdn.instructables.com/F78/OKDT/J4YFTTJP/F78OKDTJ4YFTTJP.LARGE.jpg", "https://cdn.instructables.com/F8W/H37Y/J4YFTX0M/F8WH37YJ4YFTX0M.LARGE.jpg"], "step_title": "Step 5: Explanation"}, {"step": 6, "steps_text": "Well, Mpemba effect is really interesting, and we still dont know, if it exist, or it is just wrong measuring. If it exist, it change principle of thermodynamics, and help humanity.We show, that Mpemba effect can be appeared at homemade conditions. you just need some electronics, distilled water and patience, to wait for  freezing warmer liquid :DReferences:Sciencium YT channelasking on Quorasome articleWikipedia", "step_imgs": ["https://cdn.instructables.com/FN8/2P8Q/J4SQ46HJ/FN82P8QJ4SQ46HJ.LARGE.jpg"], "step_title": "Step 6: Conclusion"}, {"step": 7, "steps_text": "I think how to improve measuring. How about using infrared thermometers, which they do not need to touch liquids or ice! Basically, some factors miss, like position of sensor. Also thermometer is pointed to some point, so what about using special infrared camera, which should taking photo every 15 seconds of both liquids? I will see, if whether someone shows his measuring with infrared camera on Instructable!", "step_imgs": ["https://cdn.instructables.com/FHH/2E7A/J4YFU0EE/FHH2E7AJ4YFU0EE.LARGE.jpg"], "step_title": "Step 7: Extras: Infrared Concept"}], "channel": "Science"}, {"category": "technology", "description": "I like to experiment new things, Blynk is an android app where most of them use it for NodeMCU, I tried to interface it to an emerging IoT platform Photon.Fortunately, i was successful in interfacing it.To begin with my introduction, I'm Sridhar Janardhan popularly known as Appytechie.In This Ibles, i am going to show how to interface a humidity sensor DHT11 to a Photon and display the value using a Blynk app.start to sound amazing??Read on.Have a glance on the components required for this project.", "title": "Photon:Displaying Values of DHT11 Using Blynk ", "url": "https://www.instructables.com/id/PhotonDisplaying-Values-of-DHT11-Using-Blynk/", "section": "technology", "steps": [{"step": 1, "steps_text": "Things used in this project are:Photon DHT11BreadboardJumper wiresAndroid mobileType A to To C USB cableLet's now connect the Photon to the Wifi using an Android.", "step_imgs": ["https://cdn.instructables.com/F39/W5Y7/J5CQ2CJQ/F39W5Y7J5CQ2CJQ.LARGE.jpg", "https://cdn.instructables.com/FBG/1WQI/J5CQ2CK0/FBG1WQIJ5CQ2CK0.LARGE.jpg", "https://cdn.instructables.com/FUJ/FKVY/J5CQ2C8C/FUJFKVYJ5CQ2C8C.LARGE.jpg", "https://cdn.instructables.com/FD0/7W4Z/J5CQ2C9R/FD07W4ZJ5CQ2C9R.LARGE.jpg", "https://cdn.instructables.com/FZ7/N6CO/J5CQ2CJY/FZ7N6COJ5CQ2CJY.LARGE.jpg"], "step_title": "Step 1: Components Required:"}, {"step": 2, "steps_text": "To turn on the Photon use the USB cable and connect.After you turn on the Photon put the device into listening mode just by pressing the setup button for few seconds.If your device is blinking in a different color please check out the docs presented by the Particle here.Connecting the Photon to Wifi:Download the official particle app here.After downloading, Log in with your Particle account credentials, If you are a new user sign up here.After signing up, Press the '+' button in the bottom right and choose Photon.Now complete the process as per the screen instruction.At last stage name your device and then you can see the breathing Cyan indicating that the Photon is connected successfully to wifi.let's now interface the DHT11 sensor.", "step_imgs": ["https://cdn.instructables.com/F89/FPTQ/J5CQ2CAA/F89FPTQJ5CQ2CAA.LARGE.jpg", "https://cdn.instructables.com/FVK/BHOR/J5CQ2CB4/FVKBHORJ5CQ2CB4.LARGE.jpg", "https://cdn.instructables.com/F19/H643/J5CQ2CCG/F19H643J5CQ2CCG.LARGE.jpg", "https://cdn.instructables.com/FM6/FHBJ/J5CQ2CGU/FM6FHBJJ5CQ2CGU.LARGE.jpg", "https://cdn.instructables.com/F99/SU20/J5CQ2CGX/F99SU20J5CQ2CGX.LARGE.jpg", "https://cdn.instructables.com/FFC/695K/J5CQ2CHL/FFC695KJ5CQ2CHL.LARGE.jpg", "https://cdn.instructables.com/F59/80L6/J5CQ2CI2/F5980L6J5CQ2CI2.LARGE.jpg", "https://cdn.instructables.com/FPK/Y1PF/J5CQ2CJE/FPKY1PFJ5CQ2CJE.LARGE.jpg"], "step_title": "Step 2: Wifi Linkage to the Photon"}, {"step": 3, "steps_text": "DTH-11 is a humidity sensor that measures the humidity content.This sensor throws a data at a regular interval.This data we are going to show in Blynk app.The connection of the DHT11 sensor are as follows:The VCC pin of the sensor is given to the On board 3.3 volts.The GND pin is connected to the GND pin of Photon.The Signal pin is connected to the Digital pin 2 of the Photon.", "step_imgs": ["https://cdn.instructables.com/FRH/OU5P/J5CQ2CDS/FRHOU5PJ5CQ2CDS.LARGE.jpg", "https://cdn.instructables.com/FX6/GBT3/J5CQ2CE9/FX6GBT3J5CQ2CE9.LARGE.jpg", "https://cdn.instructables.com/FOK/YIHW/J5CQ2CET/FOKYIHWJ5CQ2CET.LARGE.jpg", "https://cdn.instructables.com/FMO/UKDP/J5CQ2CGD/FMOUKDPJ5CQ2CGD.LARGE.jpg"], "step_title": "Step 3: Connect DHT11 Sensor"}, {"step": 4, "steps_text": "login with your credentialsChoose new projectIn choose device choose particle photonin connection type choose WiFiChoose the gauge and value as the displaying parameter and Set gauge virtual pin as v2 and display virtual pin as v1.Add the auth code in the code below.", "step_imgs": ["https://cdn.instructables.com/FF1/8Y70/J5CQ2CRY/FF18Y70J5CQ2CRY.LARGE.jpg", "https://cdn.instructables.com/FN4/XD2E/J5CQ2CRS/FN4XD2EJ5CQ2CRS.LARGE.jpg", "https://cdn.instructables.com/FGG/TJFR/J5CQ2CS2/FGGTJFRJ5CQ2CS2.LARGE.jpg"], "step_title": "Step 4: Blynk App Interfacing"}, {"step": 5, "steps_text": "#include \"blynk/blynk.h\"#include \"PietteTech_DHT.h\"// system defines #define DHTTYPE  DHT22              // Sensor type DHT11/21/22/AM2301/AM2302 #define DHTPIN   4              // Digital pin for communications #define DHT_SAMPLE_INTERVAL   60000  // Sample every minute//declaration void dht_wrapper(); // must be declared before the lib initialization// Lib instantiate PietteTech_DHT DHT(DHTPIN, DHTTYPE, dht_wrapper);// globals unsigned int DHTnextSampleTime;     // Next time we want to start sample bool bDHTstarted;      // flag to indicate we started acquisition int n;                              // counter//this is coming from https://www.instructables.com/id/Datalogging-with-Spark-Core-Google-Drive/?ALLSTEPS char resultstr[64]; //String to store the sensor data//DANGER - DO NOT SHARE!!!! char auth[] = \"01234567890123456789\"; // Put your blynk token here //DANGER - DO NOT SHARE!!!!char VERSION[64] = \"0.04\";#define READ_INTERVAL 60000void setup() {  Blynk.begin(auth);    DHTnextSampleTime = 0;  // Start the first sample immediately  Particle.variable(\"result\", resultstr, STRING); Particle.publish(\"DHT22 - firmware version\", VERSION, 60, PRIVATE);   }// This wrapper is in charge of calling // must be defined like this for the lib work void dht_wrapper() {     DHT.isrCallback(); }void loop() {  Blynk.run(); // all the Blynk magic happens here    // Check if we need to start the next sample   if (millis() > DHTnextSampleTime) {         if (!bDHTstarted) {  // start the sample      DHT.acquire();      bDHTstarted = true;  } if (!DHT.acquiring()) {  // has sample completed?  float temp = (float)DHT.getCelsius();   int temp1 = (temp - (int)temp) * 100;  char tempInChar[32];   sprintf(tempInChar,\"%0d.%d\", (int)temp, temp1);   Particle.publish(\"The temperature from the dht22 is:\", tempInChar, 60, PRIVATE);  //virtual pin 1 will be the temperature   Blynk.virtualWrite(V1, tempInChar);     //google docs can get this variable   sprintf(resultstr, \"{\\\"t\\\":%s}\", tempInChar);  float humid = (float)DHT.getHumidity();   int humid1 = (humid - (int)humid) * 100;  sprintf(tempInChar,\"%0d.%d\", (int)humid, humid1);   Particle.publish(\"The humidity from the dht22 is:\", tempInChar, 60, PRIVATE);  //virtual pin 2 will be the humidity   Blynk.virtualWrite(V2, tempInChar);  n++;  // increment counter   bDHTstarted = false;  // reset the sample flag so we can take another   DHTnextSampleTime = millis() + DHT_SAMPLE_INTERVAL;  // set the time for next sample  }   }}", "step_imgs": [], "step_title": "Step 5: Coding"}], "channel": "Arduino"}, {"category": "technology", "description": "Most of you have heard the expression \u2018Hot Air Rises\u2019. Well, it\u2019s true.So in your typical house, it\u2019s going to be hotter near the ceiling than near the floor. How much hotter?Well, being a Lazy Old Geek, I wanted to know how much. Well, that\u2019s easy, I just point my IR thermometer (See picture) up in the corner and down at the floor. Okay, it reads 82 F at the ceiling and 75 F on the floor. All done.But wait a minute. This is during a sunny warm day. What about when the A/C is on? What about when the heater is on during the winter? This calls for an Arduino!", "title": "Temperature Wand", "url": "https://www.instructables.com/id/Temperature-Wand/", "section": "technology", "steps": [{"step": 1, "steps_text": "1 Arduino RBBB $10Arduino USB$5 \thttps://www.instructables.com/id/Arduino-USB/6 KTY81-250 Temperature sensors $0.45@Mouser.com \t6 1.2K resistors $0.01@ Taydaelectronics.com \t25ft Ethernet cable $3.48 ebay.com \t10ft \u00bd\u201d PVC $2.70 Home DepotWell, I had an Arduino RBBB lying around. See picture.And I recently bought a bunch of KTY81-250 temperature sensors. See picture. I bought these because they were cheap and two leads only. I also had a 25 foot Ethernet cable lying around.Total cost is around $23.", "step_imgs": ["https://cdn.instructables.com/F7R/B4X2/GU1UZG3F/F7RB4X2GU1UZG3F.LARGE.jpg", "https://cdn.instructables.com/F6F/JWX9/GU59XE3V/F6FJWX9GU59XE3V.LARGE.jpg", "https://cdn.instructables.com/FCQ/MJ6I/GU4MCIH6/FCQMJ6IGU4MCIH6.LARGE.jpg"], "step_title": "Step 1: Parts List"}, {"step": 2, "steps_text": "So here\u2019s my physical/mechanical plan. I decided to use some KTY81-250 temperature sensors to measure temperatures from the ceiling to the floor. My ceiling is about nine feet tall. The basic Arduino is limited to six analog inputs so I decided on six sensors. So I spaced the sensors about 1.8 feet apart.Ethernet cable has eight wires in it. The KTY81-250s are two wire sensors but one can be ground so I used six wires for the sensors and two for ground. So I hacked it up as follows:Here\u2019s the color code scheme, I selected:SensorRJ45Common5Brn/WhtBrown4GrnBrown3Grn/WhtBrown2Blu/WhtBlue1OrgBlue0Org/WhtBlueFor the sensor on the top, I just stripped back the wires and solder the first KTY81 to the Brn/Wht and Brown wires. It doesn\u2019t matter which lead goes to which. I used hot glue to insulate and support the leads.The pictures show how I spliced in the other KTY81 sensors. First I marked the cable approximately every 1.8 feet for the sensor locations with a Sharpie. Using a utility knife I carefully cut about an inch on each side of the mark. Carefully cut along the insulation and remove it.In my cable there is some nylon braiding for strength. (See picture) I just cut it away. There is also some blue colored aluminum foil for noise reduction. This is not a concern in this application so just peel it away.Now you should see the wires plus another bare wire that is for strength and grounding. (See picture) The wires are in twisted pairs. Find the two colors for this sensor and try to separate them to give you some access. Now, carefully remove the insulation on these two wires. Try to keep the cuts a little separated from each other so they can\u2019t short together. Solder on the KTY81 sensor as shown. I used hot glue to insulate and support the sensors and to add strength to the cable. Repeat the process for the other sensors.", "step_imgs": ["https://cdn.instructables.com/F74/KP2N/GU59Z6V2/F74KP2NGU59Z6V2.LARGE.jpg", "https://cdn.instructables.com/F2Y/E9QE/GU59Z6V4/F2YE9QEGU59Z6V4.LARGE.jpg", "https://cdn.instructables.com/F1G/9M8R/GU1UZG4R/F1G9M8RGU1UZG4R.LARGE.jpg", "https://cdn.instructables.com/F98/7C1T/GU4MCIJ1/F987C1TGU4MCIJ1.LARGE.jpg", "https://cdn.instructables.com/F68/N9V6/GU4MCIKS/F68N9V6GU4MCIKS.LARGE.jpg", "https://cdn.instructables.com/FYV/M95U/GU4MCIKT/FYVM95UGU4MCIKT.LARGE.jpg"], "step_title": "Step 2: Sensor Design"}, {"step": 3, "steps_text": "The KT81-250 Temperature Sensor is basically a resistor whose resistance changes with temperature. At room temperature the resistance is about 2000 ohms. The Arduino can\u2019t read resistance but can read voltage so I built a voltage divider with 5 volts going to a 1.2K resistor then to the KTY81 sensor to ground. The connection between the resistor and sensor is attached to the appropriate Analog input of the Arduino. There are six of these circuits as shown in the schematic. The schematic also shows an 8.2K resistor going from 3.3V to Aref. I had a good reason for using an 8.2K resistor but don\u2019t remember. It works fine. The Arduino software has to use analogReference(EXTERNAL) to use this.THEORY: The 1.2K resistors were selected to yield the best resolution for the Arduino. The resolution is about 0.6 degrees F. This means the Arduino can only detect a change of 0.6 degrees. The Arduino has a 10 bit resolution so there are only 1023 different steps. The resistor was also selected so that the temperatures between 50 to 100 degrees F will be less than 3.3V and readable by this Arduino. Six resistors are connected to the Analog inputs. The other ends are tied to 5 VDC. The Ethernet cable is wired to the Analog inputs and grounds. (See pictures)", "step_imgs": ["https://cdn.instructables.com/F0W/G3FE/GU59XE29/F0WG3FEGU59XE29.LARGE.jpg", "https://cdn.instructables.com/FJV/N8EE/GU63Y0SP/FJVN8EEGU63Y0SP.LARGE.jpg", "https://cdn.instructables.com/FXO/7FFG/GU1UZG61/FXO7FFGGU1UZG61.LARGE.jpg"], "step_title": "Step 3: Electrical Design"}, {"step": 4, "steps_text": "I will get back to the calibration step later.Problem: Well my first attempt was a disaster. The temperatures were all over the place and not very stable.Solution1: One of the problems was that I was powering the Arduino with 5V from the USB port of my computer through a 4 port hub. Well, this voltage measured about 4.65V and varied a lot. So I added a 5Volt regulator and capacitors and a 6 Volt power supply. See schematic. Some of you sharp-eyed readers will notice that the power supply (See picture) is rated at 6 VDC output and that the 7805 regulator is specified for a minimum of 7 VDC. Well, most of these power supplies actually put out more voltage than rates. With this one hooked up, the output was 7.5VDC and the regulator output was a consistent 5.1VDC output.Solution2: The software I first wrote sampled the temperature 10 times, averaged it then output it. It repeated this every minute. Well, I decided to implement a rolling average. The way this works is that it samples the voltage constantly and averages the last 25 samples and outputs it.Programmers: I created a 25 element array for each sensor and a pointer to the array. float TempArray[NUM_SAMPLES][MAX_TEMPS]; byte ArrPtr=0; Then I read in the counts for each sensor and stored it in the array bin pointed to by the ArrPtr. Then I incremented the ArrPtr++ and repeated the process. If the ArrPtr = 25 then it is set to 0. Each array is summed and averaged by dividing by 25, then this averaged count value is converted to a temperature. This is like a low pass filter. The sensor is averaged over about 50 seconds. The temperature shouldn\u2019t change significantly in that period of time.", "step_imgs": ["https://cdn.instructables.com/F5K/OE37/GU4MCISE/F5KOE37GU4MCISE.LARGE.jpg"], "step_title": "Step 4: Problems"}, {"step": 5, "steps_text": "I\u2019ve worked with temperature sensors before. I know they are hard to calibrate especially in air. It is very hard to get them to within a degree F of each other.As with most temperature sensors, the KTY81s are not very accurate and need to be calibrated. For example, the resistance at room temperature can vary from 1900 to 2100 ohms.If you want to build this, then you will need to calibrate your sensors. This involves Algebra, maybe a game killer for some readers. But I will try to take you through a simple two point linear fit.Procedure Theory: First you need to get the sensor (or in this case sensors) at a fixed and known temperature. The known temperature is measured by some known instrument. I used my IR thermometer. The Arduino will read the associated sensor and send out a number from 0 and 1023. The temperature and count is recorded. Then for a different temperature the whole process is repeated. Procedure Applied: I wrapped the hacked Ethernet cable in a coil and stuck them in a box, then closed it. (See pictures) I put it in a fairly stable environment on my floor and let it set for a while. Then I got a readout from the Arduino, just the raw counts from the Analog sensors and I measured the temperature in the box with my IR Thermometer.(See picture)Next I set the box outside at a hotter temperature and repeated the process.So now you should have two different temperatures and two different counts for each sensor.Algebra: So these sensors are fairly linear. That means the resistance changes pretty evenly with temperature. So I used a linear fit.TempF = Multiplier * count + OffsetTempF is the temperature in Fahrenheit. \tCount is the Arduino count. \tMultiplier is a constant for each sensor. \tOffset is a different constant for each sensor.Once you figure out what the Multiplier and Offset is for each sensor then when the Arduino reads the count from the sensor, the software will multiply this by the Multiplier and add the Offset to give the temperature in Fahrenheit.To find the Multiplier and Offset for a sensor, you know the TempF and counts for two different points so you have two different equations. Example:At 83.5 degrees, the fifth sensor had 999.3 counts. \tAt 75.5 degrees, the fifth sensor had 979.5 counts.The two equations are:83.5 = M * 999.3 + O75.5 = M * 979.5 + OM=Multiplier and O=OffsetUsing Algebra you can subtract the second equation from the first83.5-75.5 = M * 999.3 - M * 979.5 + O - OSimplify:8 = M * 999.3 - M * 979.58 = 19.8 * MM = 0.4040So now you know what M is. To find O, just plug the M into one of the starting equations:83.5 = M * 999.3 + O83.5 = 0.4040 * 999.3 + O83.5 = 403.7576 + O83.5 - 403.7576 = OO = -320.258To check your calculations you can plug the M and O into the other equation.Alert Readers: Some may wonder how I got a count of 999.3 when the Arduino only outputs 0 to 1023. That is correct but I am using an average value over 25 samples. \tThe Offset is a negative number. This is okay as the computer knows that adding a negative number is the same as subtracting it.Repeat the above procedure for the other five sensors and plug the values into the software. By the way I used Excel to do the calculations.The Arduino software is attached.Software Notes: Once the software is loaded to the Arduino, the serial terminal is used to display the results. Each line contains the temperatures from the top sensor to the bottom separated by commas. \tThe software will have to run through 25 samples before it starts averaging correctly. This will take about a minute.Code Notes: float TempArray[NUM_SAMPLES][MAX_TEMPS]; \tThis is a double array, 25 samples x 6 sensorsUnder \u201cvoid setup(void){\u201c you will see the Multipliers and Offsets for each sensor.Under \u201cfloat getTemperatureF(unsigned int TempNum){\u201c \tthere are two return statements.The one commented out \u201c//return (SumTotal/NUM_SAMPLES);\u201d \tis uncommented to get the average raw counts for calibrationThe other \"return Multiplier[TempNum]*(SumTotal/NUM_SAMPLES)+Offset[TempNum];\" \treturns the calibrated temperature.", "step_imgs": ["https://cdn.instructables.com/FHE/4YUT/GU4MCIUR/FHE4YUTGU4MCIUR.LARGE.jpg", "https://cdn.instructables.com/FH5/G0J4/GU4MCIUY/FH5G0J4GU4MCIUY.LARGE.jpg", "https://cdn.instructables.com/F8A/FMO8/GU59Z782/F8AFMO8GU59Z782.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 5: Calibration"}, {"step": 6, "steps_text": "To use the Temperature wand, I bought ten feet of \u00bd\u201d PVC and a couple of couplers. I have a little car, so I had to cut the ten foot piece in half to get it into my car. Unwrap the coiled sensors. Cut PVC pieces to desired height and connect with couplers. Attach the top sensor to the top of the PVC. I used tie wraps. Plug in and run software.Results: The picture is a sample of a hot room. (I added some fudge factors into the software) It does shows the fairly wide gradient in temperatures.Conclusions: Well, I am not too happy with the results. When I have some free time, I think I will try a modified calibration procedure to see if I can get better results. But it does show the temperature gradients in a room. I think it would be a good project for someone with ceiling fans and/or attic fans. You could probably get a good idea on how effective they are. I might try some experiments with fans myself.", "step_imgs": ["https://cdn.instructables.com/FBQ/FUNM/GU4MCIXE/FBQFUNMGU4MCIXE.LARGE.jpg", "https://cdn.instructables.com/FYI/14QS/GU59Z6SC/FYI14QSGU59Z6SC.LARGE.jpg", "https://cdn.instructables.com/F6O/FFCW/GU59Z7E2/F6OFFCWGU59Z7E2.LARGE.jpg"], "step_title": "Step 6: In Use and Conclusions"}], "channel": "Arduino"}, {"category": "technology", "description": "Update 15th January 2017: Lancaster Uni is changing the micro:bit UART service (issue #259). pfodApp supports both the old and new style services so this change will not effect pfodApp users.Update: 21st December 2106 \u2013 Fixing paring with PixelIf you are having problems paring with Pixel or other Android 7.1 mobiles, implement the 500mS delay shown in this GitHub pull request #225This instructable will cover :-Reading an Input Voltage and Switching an Output - No Android or micro:bit programming required      Plotting and Logging the Measured Input Voltage - No Android or micro:bit programming required      Displaying, Plotting and Logging the Measured Temperature - No Android programming requiredThese instructions are also available on the www.pfod.com.au websiteThere are a number of programming tools for the BBC micro:bit, but the combination of pfodDesignerV2 and pfodApp lets you use your Android mobile to design a custom menu (and sub-menus) and create charts and log data. After designing your Android interface with the free pfodDesignerV2, you can preview the resulting menu exactly as it will be displayed by pfodApp, before generating the C++ files to load into your micro:bit, via the off-line Netbeans compiler. Then when you have set up a Bluetooth Low Energy (BLE) connection from pfodApp to your micro:bit, your menu will be displayed, letting you control your micro:bit's outputs and read, chart and log it inputs.pfodDesigner provides a range of menu design options that cover :-Setting a Digital Output pin High or Low or pulsing the pin High or Low for a set time interval.      Setting the value of an Analog Output (PWM)       Displaying the state of a Digital Input.       Displaying the value of an Analog Input        Charting and Logging Analog Inputs.       Adding a general purpose Button, a Sub-Menu or a Label.In each case you have complete control over the text displayed for the High/Low inputs, the scaling and offset and units used for the Analog inputs and charts and logs as well as the font sizes, colours, format etc.pfodDesignerV2 already supported a wide range of Arduino style boards connected via Bluetooth Classic, Bluetooth Low Energy, WiFi, Ethernet or SMS. pfodDesignerV2 V2.2211+ adds support for designing for the BBC micro:bit board. For the BBC micro:bit, the pfodDesignerV2 generates a single cpp class, pfodMenu which together with pfodParserMB library and Lancaster University microbit C++ support libraries compiles to serve your custom menu to pfodApp running on your Android mobile. There are a few steps involved in setting up to code the micro:bit using C++. The Offline Compiler Setup for BBC micro:bit page explains how to do that.", "title": "Android Controlled C++ Micro:bit - No Programming Required", "url": "https://www.instructables.com/id/Android-Controlled-C-Microbit-No-Programming-Requi/", "section": "technology", "steps": [{"step": 1, "steps_text": "This first simple menu is going to read and display the voltage applied to one of the micro:bit's analog inputs and add a control to turn one of micro:bit's digital outputs on and off. Apart from the different pin names and capabilities of the BBC micro:bit board, the rest of the pfodDesignerV2 menus are unchanged from board to board so you can also work through the tutorials on the pfodDesignerV2 page. Just be sure the set the board to BBC micro:bit when starting each menu.There are three parts to this first example:- Design the menu using the free pfodDesignerV2 android app and generate the code. Setup the Offline Netbeans C++ compiler for the BBC micro:bit and replace the pfodMenu.h and pfodMenu.cpp files with the generated code. Install the pfodApp on your Android. Register your micro:bit with your Android and then set up a pfodApp connection to your micro:bit to display your menu showing the Input Voltage. None of these steps involve writing any C++ or Android code.", "step_imgs": [], "step_title": "Step 1: A First Menu \u2013 Reading an Input Voltage and Switching an Output"}, {"step": 2, "steps_text": "Install the free pfodDesignerV2, V2.0.2211+, from the Google Play Store and click Start New MenuThen click Target button to change the target and choose Bluetooth Low Energy targets and select BBC micro:bit. Use your mobile's back button to get back to the Editing Menu_1 screen.", "step_imgs": ["https://cdn.instructables.com/FJU/7192/IUORMZ0Y/FJU7192IUORMZ0Y.LARGE.jpg", "https://cdn.instructables.com/F5A/NO6A/IUORMZ0K/F5ANO6AIUORMZ0K.LARGE.jpg", "https://cdn.instructables.com/FSR/O0M9/IUORMZ0R/FSRO0M9IUORMZ0R.LARGE.jpg", "https://cdn.instructables.com/F0F/TOA8/IUORMZ0U/F0FTOA8IUORMZ0U.LARGE.jpg"], "step_title": "Step 2: 1. Menu Design - Setting the BBC Micro:bit Target"}, {"step": 3, "steps_text": "Now click Add Menu Item. Scroll down and select Data Display. This opens the editing screen for that menu item. At the top of the screen is a preview (Reading 775) of the menu item as currently configured. The 775 reading is just a preview example value.Connecting the Menu Item to micro:bit Pin P0To connect this display to an input pin, scroll down and click Not connected to an I/O pin. This opens a list of micro:bits Analog capable pins that have not already been assigned to other menu items.Choose P0 as the input. When the code is generated, it will connect the menut display to the analog value read from micro:bit's P0 pin.Previewing the MenuGo back to the Editing Menu_1 screen and select Preview Menu to see what the final menu currently looks like.There are two things about this menu that need to be improved:-The Prompt needs to be changed The display of the AtoD reading from P0 needs to be converted to a Volts value/display.", "step_imgs": ["https://cdn.instructables.com/FKJ/OU75/IUORMZBO/FKJOU75IUORMZBO.LARGE.jpg", "https://cdn.instructables.com/FII/P34N/IUORMZBW/FIIP34NIUORMZBW.LARGE.jpg", "https://cdn.instructables.com/FS8/TURH/IUORMZBX/FS8TURHIUORMZBX.LARGE.jpg", "https://cdn.instructables.com/FDW/X82U/IUORMZC7/FDWX82UIUORMZC7.LARGE.jpg"], "step_title": "Step 3: Adding the Analog Data Display Menu Item"}, {"step": 4, "steps_text": "Go back to the Editing Menu_1 screen and open the Edit Prompt screen and edit the prompt to something suitable (see the pfodDesignerV2 tutorials for detailed examples of editing the prompt). The prompt background colour set the default colour for the whole menu, but you can override it in each menu item with another background colour.Setting the Display Text and ScalingHaving fixed the prompt, return the the Editing Menu_1 screen and select Edit Menu and click on Reading (Data Display) to open that menu item for editing.Edit Leading Text to \u201cP0 \u201c. Edit Trailing Text to \u201cV\u201d You can also edit the font size, colour style and background if you wish. Here I have increased the font size.The sets the text. To set the scaling there are 4 values that can be changed.You can Edit Data Variable Range to set the expected range of the raw measure value. These numbers are ALWAYS integers and for micro:bit Analog inputs the default range of 0 to 1023 is correct.The other two values set the Display Max and Display Min. These values can be decimal values and set the scaling from the Data Variable Range to the slider display. In this case a raw measured value of 1023 == 3.3V and 0 == 0V so you only need to Edit the Display Max to \u201c3.3\u201d. Then go back Editing Menu_1 and preview your current design. Note that the 775 example reading has now been scaled to 0 to 1023 counts == 0V to 3.3V", "step_imgs": ["https://cdn.instructables.com/FFP/5WVV/IUORMZQA/FFP5WVVIUORMZQA.LARGE.jpg", "https://cdn.instructables.com/FCG/VGDZ/IUORMZQP/FCGVGDZIUORMZQP.LARGE.jpg", "https://cdn.instructables.com/F0U/IEHD/IUORMZR9/F0UIEHDIUORMZR9.LARGE.jpg", "https://cdn.instructables.com/FW0/KNKX/IUORMZR5/FW0KNKXIUORMZR5.LARGE.jpg", "https://cdn.instructables.com/FO0/QL26/IUORMZYC/FO0QL26IUORMZYC.LARGE.jpg", "https://cdn.instructables.com/FGZ/QAY5/IUORMZYE/FGZQAY5IUORMZYE.LARGE.jpg"], "step_title": "Step 4: Editing the Prompt and Setting the Display Text and Scaling"}, {"step": 5, "steps_text": "The pfodApp menus on your mobile are only updated when pfodApp requests them. To have the menu update with the latest reading from P0 you should set a menu refresh interval. Go back to the Editing Menu_1 screen and set the Refresh Interval to 1 sec.", "step_imgs": ["https://cdn.instructables.com/FF0/7T1D/IUORN0MG/FF07T1DIUORN0MG.LARGE.jpg"], "step_title": "Step 5: Setting the Refresh Interval"}, {"step": 6, "steps_text": "In Editing Menu_1 screen and click on Add Menu Item and select On/Off Setting or Pulse.Connect this control to micro:bit pin P1 and Edit Leading Text, Low Text and High Text to suit your needs. Here I have set Leading Text to \u201cP1 is \u201c, Low Text to \u201cOff\u201d and High Text to \u201cOn\u201d I also set the font to +6 and BOLD. The preview at the top the screen is live, you can click on it to toggle between On and Off.", "step_imgs": ["https://cdn.instructables.com/FKH/9CU1/IUORN0WI/FKH9CU1IUORN0WI.LARGE.jpg", "https://cdn.instructables.com/F45/MIID/IUORN0XG/F45MIIDIUORN0XG.LARGE.jpg"], "step_title": "Step 6: Adding an On/Off Control"}, {"step": 7, "steps_text": "Go back and preview the final design. You can add extra labels and spacing between elements if you wish. I have added some here for my final menu design. See this tutorial for how to add spacers.", "step_imgs": ["https://cdn.instructables.com/FCG/MF4O/IUORN1LO/FCGMF4OIUORN1LO.LARGE.jpg"], "step_title": "Step 7: Labels and Spacing"}, {"step": 8, "steps_text": "When you are satisfied with your menu design go back to Editing Menu_1 and scroll down and click on Generate Code and then click on Write Code to file and then close pfodDesignerV2 to close the code file.This writes a file to your mobile. You need to copy that file to your computer and replace the exitsing pfodMenu.h and pfodMenu.cpp with the corresponding sections from the file. There are various ways to get the file from your android to your computer, see pfodAppForAndroidGettingStarted.pdf for using a USB connection. You can also use a WiFi File transfer app like Wifi File Transfer.Here is the generated pfodDesignerV2.txt file for the above menu design.Netbeans micro:bit C++ CompilerNow that you have the pfodDesignerV2.txt file on your computer, you need to compile it with the pfodParserMB library and the Lancaster University micro:bit support libraries. Start by following this tutorial to install the Netbeans IDE and set up the Lancaster University micro:bit C++ compiler support.Once you have the \u201cHello World\u201d program running on your micro:bit, close Netbeans and delete all the pfodtest/source files. Then install the pfodParserMicroBit zip file as described on this page.Replace the pfodMenu.h and pfodMenu.cpp filesThe pfodParserMicroBit librar supplies a complete set of source files which when compiled and loaded into your micro:bit, server up a simple empty menu to pfodApp. Once you have that running as described on the pfodParserMicroBit library page you can replace the code in the pfodMenu.h and pfodMenu.cpp files with the generated code from pfodDesignerV2.txt file. Then when you re-compile and download the .hex file to your micro:bit it will serve up your custom menu when you connect with pfodApp. The complete set of source files for this menu is here.Connecting with pfodApp displays the menu. The PO display just measure noise pickup. If you put you fingers on P0 you can vary the reading. Another thing to do is to put a clip lead between P0 and P1 and then when you turn P1 On and Off the value displayed for P0 switches between 0V and ~3.3V", "step_imgs": ["https://cdn.instructables.com/FCR/M7ZG/IUORN1ZJ/FCRM7ZGIUORN1ZJ.LARGE.jpg", "https://cdn.instructables.com/FZ1/JJ2W/IUORN20H/FZ1JJ2WIUORN20H.LARGE.jpg"], "step_title": "Step 8: Generate the Code"}, {"step": 9, "steps_text": "This example extends the first one by adding add a chart that plots the Input Voltage on P0. The voltage is automatically logged as well on your Android mobile. This does not involve writing any C++ or Android code. There is also another pfodDesignerV2 tutorial available How to Display/Plot Arduino Data on Android which covers similar ground.Open the pfodDesignerV2 and select Edit existing Menu and choose Menu_1. Click on Add Menu Item and scroll down and choose Chart Button.Edit the button to your liking. Here I changed the text to \u201cPlots\u201d and increased the font size.Then to edit the actual plots, Click on the \u201cPlot\u201d button.Since there is only one plot at the moment, click on Edit Plot 2 scroll down and hide it. Do the same for Plot 3. Then click Chart Preview to see what the initial chart with one plot looks like.Then go back and Edit Chart Label to say \u201cmicro:bit plots\u201d and on the Edit Plot 1 screen Edit Plot Label to say \u201cP0 Voltage\u201d and Edit Plot yAxis Units to \u201cVolts\u201d. Finally Edit Display Max to \u201c3.3\u201d because the data range of 0 to 1023 == 0 to 3.3V and connect this plot to micro:bit pin P0. Then preview the chart again.You can also go back the Edit Menu_1 screen and click Preview Menu from there to see the updated menu with the Plots button.Clicking the Plots button in the preview opens the sample chart you have designed. Use the your mobile's back button to go back to the Editing Menu_1 screen and use the Generate Code to generate the updated pfodDesignerV2.txt file containing the new pfodMenu.h and pfodMenu.cpp code.Updating the Netbeans pfodMenu.h and pfodMenu.cpp code from the new pfodDesignerV2.txt and re-compiling and dowloading into you micro:bit installs the new menu with chart. Here are the complete source files.Now when you connect with pfodApp you see the menu with the Plots button. Clicking the plots button opens the plot of P0You can touch P0 with you finger to get the plot to change. You can also connect P0 to P1 with an alligator clip lead and drive P0 between 0V and 3.3V as you turn P1 on and off from your mobile. The plot values are also saved in CSV format to a .txt file on your mobile under the /pfodAppRawData with the name you gave to your connection. As you exit pfodApp, it will pop up a note with the data file name.", "step_imgs": ["https://cdn.instructables.com/FJ5/1PBR/IUORN64I/FJ51PBRIUORN64I.LARGE.jpg", "https://cdn.instructables.com/FX5/AFMY/IUORN64Z/FX5AFMYIUORN64Z.LARGE.jpg", "https://cdn.instructables.com/F6V/75IY/IUORN650/F6V75IYIUORN650.LARGE.jpg", "https://cdn.instructables.com/F6Y/8MHO/IUORN651/F6Y8MHOIUORN651.LARGE.jpg", "https://cdn.instructables.com/FJ7/C5ZY/IUORN653/FJ7C5ZYIUORN653.LARGE.jpg", "https://cdn.instructables.com/FOK/NJ8N/IUORN654/FOKNJ8NIUORN654.LARGE.jpg", "https://cdn.instructables.com/F4S/29UL/IUORN66Q/F4S29ULIUORN66Q.LARGE.jpg"], "step_title": "Step 9: 2 Plotting and Logging the Input Voltage"}, {"step": 10, "steps_text": "The BBC micro:bit provides a built in temperature meansurement. See  https://lancaster-university.github.io/microbit-d... This example adds the micro:bit's temperature to the menu and as another plot on the chart. This example involves you writing two lines of code.Open pfodDesignerV2 again and edit your existing Menu_1. Click Add Menu Item and choose Data Display. Edit Leading Text to delete all of it. Edit Trailing Text to \u2103 pfodApp supports Unicode characters, encoded as UTF-8, so you can use non-ASCII (i.e. non-English text) and special symbols. The Unicode for \u2103 is U+2103 To enter that unicode character in the Edit Trailing Text input screen you type \\u2103 and as you enter the 3 the sequence will be immediately replaced by \u2103That handles the text, now you need to fix the display scaling. First set the Edit Data Variable Range. The micro:bit temperature measurement raw data is returned as degrees C (as an integer), so set the expected range, say 0 to 40 degs C. That is change the Maximum Variable Range to 40. Finally Edit Display Max to 40 to match.Set the font size, say +9 and click on the Display Text and Slider to change it to Display Text Only, so hiding the slider display.Go back to Editing Menu_1 and scroll down to click Move Items Up/Down and move the (Data Display) the top, above the P0. Check The Menu Preview.Go back to Editing Menu_1 and click on Edit Menu and click on Plots (Chart Button) and then click on the Plots button to edit the chart. Click on the Edit Plot 2 and click on Show Plot to unhide the plot. Edit Plot Label to \u201cTemperature\u201d, Edit Plot yAxis Units to \u2103 , Edit Display Max to 40 and Edit Plot Data Variable Range to 0 to 40 as you did for the Data Display menu item above. Now when you click Chart Preview you will see the updated chart.", "step_imgs": ["https://cdn.instructables.com/FO8/LY0B/IUORN7FT/FO8LY0BIUORN7FT.LARGE.jpg", "https://cdn.instructables.com/F7D/OWKR/IUORN7FX/F7DOWKRIUORN7FX.LARGE.jpg", "https://cdn.instructables.com/F6K/MVBT/IUORN7G4/F6KMVBTIUORN7G4.LARGE.jpg"], "step_title": "Step 10: 3 Adding the Temperature Reading"}, {"step": 11, "steps_text": "That's the design finished. Go back to Editing Menu_1 and Generate Code again for this new menu. This is the pfodDesignerV2.txt file that is generated. Use it to update the Netbeans pfodMenu.h and pfodMenu.cpp code. Now while this new code compiles and runs, it will not show the micro:bit temperature without adding two lines of code to set the cmd_F_var and the plot_2_var to the current temperature measurement.Open the pfodMenu.cpp file and near the top of pfodMenu::processCmd() under    // read inputs, if any, for menu update;    cmd_A_var = uBitPtr->io.P0.getAnalogValue();addcmd_F_var = uBitPtr->thermometer.getTemperature();And in pfodMenu::sendData() add replace//  plot_2_var= ?withplot_2_var = uBitPtr->thermometer.getTemperature();That completes the necessary coding. Here is the complete set of source files for this menu. Re-compile and download to your micro:bit and re-connect your mobile to see the new menu and plots.You may want to add a line of code to the pfodMenu::initGlobalVars() to calibrate the temperature measurement for better accuracy, using uBitPtr->thermometer.setCalibration(..)ConclusionUsing pfodDesignerV2 and pfodApp, you can control and log and plot your micro:bit pins from your Android mobile without doing any coding at all. However the pfodDesignerV2 does not support all the screens and features of pfodAppV2. You should read the complete pfodSpecification.pdf for all the available options.", "step_imgs": ["https://cdn.instructables.com/FLH/O9J9/IUORN83A/FLHO9J9IUORN83A.LARGE.jpg", "https://cdn.instructables.com/FPP/5133/IUORN83W/FPP5133IUORN83W.LARGE.jpg"], "step_title": "Step 11: Reading the Temperature"}], "channel": "Remote Control"}, {"category": "technology", "description": "The Internet of Things has brought a lot of formerly complex device applications into the homes of many craft brewers and wine makers. Applications with level sensors have been used for decades in large refineries, water treatment plants, and chemical plants. With sensor prices falling, now both industrial and DIY can monitor the volume of any tank, barrel, or canister.The sensors available on the open market can sense most anything and are classified accordingly. Sensor used for measuring humidity are termed humidity sensor, pressure called pressure sensor, distance are called position sensors,and so on. In a similar fashion, the sensor used for measurement of fluid levels is called a level sensor.The level sensors are used to measure the level of the free-flowing substances. Such substances include liquids like water, oil, slurries, etc as well as solids in granular/powder form (solids which can flow). These substances tend to get settle in the container tanks due to gravity and maintain their level in rest state. In this guide you will learn how to build your own home-made level, temperature, and humidity sensor. Also included are instructions for you newly collected data to be utilized via Ubidots, an application enablement platform.", "title": "Build a Tank Volume Reader in Under $30 Using ESP32", "url": "https://www.instructables.com/id/Build-a-Tank-Volume-Reader-in-Under-30-Using-ESP32/", "section": "technology", "steps": [{"step": 1, "steps_text": "ESP32Ultrasonic Sensor - HC-SR04 DHT11 SensorPlastic protection caseJumper WiresMicro USB cableArduino IDE 1.8.2or higherUbidots account - for Educational LicensesUbidots account - for Business/Industrial Licenses", "step_imgs": [], "step_title": "Step 1: Requirements"}, {"step": 2, "steps_text": "The sensor HC-SR04 (Ultrasonic Sensor) works with 5V logic. Please, follow the tables and diagram to make the correct connections between the ESP32 and the ultrasonic sensor, also between the ESP32 and the DHT11 sensor (Temperature and Humidity Sensor). I built a small prototype with a scale-sized tank to shows the functions of the sensor, but a final prototype with it case should look like the one above.As you can see the ultrasonic sensor should be at the top of the tank, so with it we're going to be able to measure the distance between the up part of the tank and the endpoint of the substance Then, place the temperature and humidity sensors to monitor environment.", "step_imgs": ["https://cdn.instructables.com/FXA/XI0C/J3NKZNJ0/FXAXI0CJ3NKZNJ0.LARGE.jpg", "https://cdn.instructables.com/F6O/NA2D/J3NKZNJC/F6ONA2DJ3NKZNJC.LARGE.jpg", "https://cdn.instructables.com/F0G/WCB8/J3NKZNJD/F0GWCB8J3NKZNJD.LARGE.jpg"], "step_title": "Step 2: Wiring and Casing"}, {"step": 3, "steps_text": "Before beginning with the ESP32, setup your board with the Arduino IDE. If you are not familiar with a board setup, please reference the article below and follow step-by-step until you've compiled the board:Connect the ESP32-DevKitC to UbidotsOnce your board is compiled, install the libraries required to run the sensors: \"PubSubClient\" and \"DHT:\"Go to Sketch/Program -> Include Library -> Library Manager and install the PubSubClient library. To simply find the correct library, search PubSubClient within the search bar.2. Go to the library repository to download the DHT library. To download the library click the green button called \"Clone or download\" and select \"Download ZIP\".3. Now, back in the Arduino IDE, click on Sketch -> Include Library -> Add .ZIP Library 4. Select the .ZIP file of DHT and then \u201cAccept\u201d or \u201cChoose\u201d 5. Close the Arduino IDE and open it again. The restart is required; please do not skip this step.Now it is time to start coding :) Copy the code below and paste into the Arduino IDE. Please go to the following link to find the code.Next, assign the parameters: Wi-Fi name and password, plus your unique Ubidots TOKEN. If you don't know how locate your Ubidots TOKEN, please reference this article below.How to get your Ubidots TOKENOnce you've pasted your code and assigned the appropriate wifi, verify in the Arduino IDE. To verify, in the top left corner of our Arduino IDE you will see the below icons. Choose the Check Mark icon to verify any code. Once verified, you will receive a \"Done compiling\" message in the Arduino IDE.Next, upload the code into your ESP32. Choose the right-arrow icon beside the check mark icon to upload. Once uploaded, you'll receive a \"Done uploading\" message in the Arduino IDE.With this, you're sensor is now sending the data to the Ubidots Could!", "step_imgs": [], "step_title": "Step 3: To Program Your Connected Device, Connect With the Arduino IDE"}, {"step": 4, "steps_text": "If your device is correctly connected you will see a new device created within your device section in your Ubidots application. The name of the device will be \"esp32\", also inside the device you will see the variables distance, humidity, and temperature:If you desire to change you device and variable names to a more friendly one, please reference this article:How to adjust you Device Name and Variable NameNext, to calculate the volume of free-flowing substances in the tank, we need to create a derived variable to calculate a volume value. The Derived Variable let us build operations using the default variables, so in this case we are going to apply the volume formula with the characteristic of a cylindrical tank where:Pi = The ratio of a circle's circumference to its diameter (constant)r = The radius of the tankh = The height of the tankClick on \"Addvariable\" and select \"Derived\". As you can see at the new window you have to attach the formula in the field.Once you've attached the formula with the characteristics of your tank, select the variable \"distance.\"With your formula entered, you're volume will begin reading in your Ubidots application.", "step_imgs": ["https://cdn.instructables.com/F5D/GIOR/J3NKZNQT/F5DGIORJ3NKZNQT.LARGE.jpg", "https://cdn.instructables.com/FQ2/CTKS/J3NKZNQU/FQ2CTKSJ3NKZNQU.LARGE.jpg", "https://cdn.instructables.com/FOG/GLGX/J3NKZNQV/FOGGLGXJ3NKZNQV.LARGE.jpg", "https://cdn.instructables.com/FGU/QVFQ/J3NKZNQW/FGUQVFQJ3NKZNQW.LARGE.jpg", "https://cdn.instructables.com/FI1/HBFS/J3NKZNQX/FI1HBFSJ3NKZNQX.LARGE.jpg", "https://cdn.instructables.com/FW5/Y4BK/J3NKZNQY/FW5Y4BKJ3NKZNQY.LARGE.jpg", "https://cdn.instructables.com/FSA/8D5F/J3NKZNQZ/FSA8D5FJ3NKZNQZ.LARGE.jpg", "https://cdn.instructables.com/FL1/V0MV/J3NKZNR2/FL1V0MVJ3NKZNR2.LARGE.jpg"], "step_title": "Step 4: Management of the Data in Ubidots"}, {"step": 5, "steps_text": "Now your sensor is ready to start working! Above you can see the function of the level sensor at different volumes.To learn more about Ubidots widgets and events, check out these video tutorials.", "step_imgs": ["https://cdn.instructables.com/FIU/F0EB/J3NKZNUG/FIUF0EBJ3NKZNUG.LARGE.jpg", "https://cdn.instructables.com/F70/X1Q9/J3NKZNUH/F70X1Q9J3NKZNUH.LARGE.jpg"], "step_title": "Step 5: Results"}], "channel": "Microcontrollers"}, {"category": "technology", "description": "14.7.2018 UPDATEQuite long time has passed since this instructable was first published and a lot has changed during this time. As comments indicate, some of the packages have changed along the way and that has been causing some issues for finishing this instructable. I decided to give an update for the whole instructable in order to get everything back in order.Biggest change is that OS is now changing from previous Wheezy to Raspbian Stretch Lite. Everyting else, is pretty much as used to.25.4.2018 UPDATEDHT22-TemperatureLogger code used for collecting sensor data to database and for mail sending, has gone through some serious refactoring. This was done to add some features and to fix some minor bugs.If you have finished this instructable prior this update, but want to update the code. Jump to page 10, download the DHT22Logger code again, setup revised config.json and you are good to go.Few examples about what changed:Logging added.      Execution of the code now creates rotating log files to DHT22-TemperatureLogger/Debugger/Logs/. Handy in case that something goes wrong. Added support for 1-n sensors.      First version supported only 1-2 sensors, now there can be as many as      Raspberry pi has gpios. Attach sensor to RPI and add sensor configuration to config.json and it is      taken into account when executed. Code refactored from first      \"quick and dirty\" implementation to separate logical components. Hopefully easier to understand and to extend or refactor for your personal useConfigurations renamed and rearranged for easier understanding e.g. connection check is now weekly averages as      it actually sends weekly average temperatures (intention for this that rpi      is reporting weekly that it is still alive)Added configurable timeoutfor mail sending so that user can decide how long Logger waits before      sending warnings after previously sended mail. Previously hardcoded value      was used and that found out to be little inconvenientSql backup dump is no longer daily, user sets day when dump is taken. 0 is daily, 1-7      is from Monday to Sunday. Weekly average temperatures sending is now also configurable. Works with same pattern as sql dump above. 0 is daily, 1-7 is from Monday to Sunday. Note that it will always count 7 days backwards and send average from those.Possibility to choose from Fahrenheits or CelsiusAnd some more minor tweaks and fixes.---------------------------------------------------------------------------------------This is an Raspberry Pi based temperature and humidity logger that uses Adafruit DHT22 sensors for measurements. You might have seen similar kind of instructions before, but this one has a twist. It doesn't just read temperature and humidity from sensors, but it stores data to database and provides means to read that temperature data with any web enabled device (computer, phone, tablet) web browser. This logger also allows you to set limits for temperatures and is able to send email if sensor temperature or humidity exceeds set limits...this neat feature can be for example used to alarm when it is time to set heating on in your house / carage / greenhouse / you name it.To complete this instructable, you will need following:- Raspberry PI (I used      Raspberry PI 1 model B+, but should be doable with other models as well)- Power supply for the pi. (I      used old Nokia microusb telephone charger which gives about 880mA)- SD memory card. Note that you      might need adapter. (I used 8Gb and had 4.1Gb available after installing      everything) - Ethernet cable or USB wlan      dongle that is supported by Raspberry Pi (google can help with this) - DHT22 sensor/s and 4.7 kOhm      resistors. Instructable supports 1-n sensors.  https://www.adafruit.com/products/385- Cables and breakout for      connection  https://www.adafruit.com/products/914- Computer where you set up the      SD card for the raspberry PI and from where you can connect and do the      configurations. (NOTE: this instruction uses PC)- Optional: Breadboard. Test assembly is easier to be created on this, than by connecting wires directly to sensors:  http://thepihut.com/products/raspberry-pi-breadbo...Internet connection is also require in location where you are going to set the raspberry logger. Either via ethernet or wlan dongle.Keyboard + display are needed as well while installing and configuring the Wheezy OS. But once installations are finished, network is up and SSH enabled, it is possible to use connect raspberry pi remotely from PC and keyboard + display can be put aside.", "title": "Raspberry PI and DHT22 Temperature and Humidity Logger With LAMP and Email Warnings", "url": "https://www.instructables.com/id/Raspberry-PI-and-DHT22-temperature-and-humidity-lo/", "section": "technology", "steps": [{"step": 1, "steps_text": "Create assembly as instructed in attached image. Image instructs how you can connect two DHT22's to the Raspberry Pi, but if you have only one available just ignore another one and add one. And vice versa, if you have more sensors add them to free ground, power and gpio pins.Notable here is that you can connect sensors to any GPIO you like. I had mine connected in GPIO22 and GPIO23. Both sensors also need +3.3Volts and ground. Resistor is set between +3.3V line and GPIO line.When assembly is ready, prepare SD card and go to next step.", "step_imgs": ["https://cdn.instructables.com/FEJ/7RIQ/IH54GPUB/FEJ7RIQIH54GPUB.LARGE.jpg", "https://cdn.instructables.com/F5G/24VW/IH54GPUC/F5G24VWIH54GPUC.LARGE.jpg"], "step_title": "Step 1: Sensor and RPI Assembly"}, {"step": 2, "steps_text": "Previously Wheezy was selected OS for this instructable. But that has long since changed and the link was dead as well. Instead, get Raspbian-Stretch-Lite image from here to your computer https://www.raspberrypi.org/downloads/raspbian/And get also Win32 Disk Imager http://sourceforge.net/projects/win32diskimager/Start Win32 Disk Imager and set the location of the downloaded Os image (.img file) to \"Image File\". Select the drive where your SD card is and select \"Write\". Imager asks to Confirm Overwrite. Double check that drive is correct and select \"Yes\". Wait for write to finish. When Disk Imager informs that write is completed and successful press \"OK\", close the Disk Imager and eject the SD card from computer.Place the card to your Raspberry Pi and go to next step.", "step_imgs": ["https://cdn.instructables.com/FES/ICCO/JJJ7FTY9/FESICCOJJJ7FTY9.LARGE.jpg"], "step_title": "Step 2: OS for the RPI"}, {"step": 3, "steps_text": "Set SD card to Raspberry Pi and power it up by plugging the power supply to Raspberry Pi's micro-usb. (Remember to attach keyboard and display before you insert power supply).Rasperry Pi starts to boot up and will prompt for username and password.By default those are:username: pipassword: raspberryAfter boot up finished start the configuration tool by typingsudo raspi-configIn configuration tool, do the following:1. Change your password and give      new password to Raspberry Pi2. Open network options -> 2.1 Change name if you want to -> 2.2 Enter wi-fi information (ssid, password)3. Make sure that Raspberry Pi boots to console by selecting option 1, console.4.This is optional, but it is advised that you set up locale information correctly. If you want to      change internationalization options e.g. keyboard layout, timezone.5. From interfacing options, select P2 - SSH and enable it This allows you to connect to RPI with SSH from your computer. This way you don't need display or keyboard on RPI to use it6.Don't do anything7. Open advanced options -> 7.1 Expand filesystem8. OptionalFinally go to \"Finish\" and restart RPI by typing sudo rebootConfiguration is now ready. Next step is to check how it can be connected remotely from PC.", "step_imgs": [], "step_title": "Step 3: Setting Up Raspberry Pi"}, {"step": 4, "steps_text": "Raspberry Pi is now configured and booted up. You should be able connect it via PuTTY from your PC now. PuTTY can be downloaded from  http://www.chiark.greenend.org.uk/~sgtatham/putty...When you start up the PuTTY you will notice that Host name or IP is required in order to connect to your Raspberry PI. To obtain the Raspberry Pi's IP address. Type the following to Raspberry Pi and press enterIfconfigThis will list you network adapters and information from them (check image). If you are connected with Ethernet (like I was at this point) you should see inet addr:xxx.xxx.xxx.xxx in eth0. by typing this inet address to PuTTY's host name line you should be able to connect Raspberry Pi remotely.If you set up Wlan in previous step, you should also see wlan0 information, inet addr: etc. You can connect using those as well.There is also manual way to configure WLAN. It was used earlier with Wheezy OS and it is described in next page. If you have network setup already, you can skip it and continue with how to connect with PuTTY.", "step_imgs": ["https://cdn.instructables.com/FWA/NL7H/IGZGVVJB/FWANL7HIGZGVVJB.LARGE.jpg", "https://cdn.instructables.com/FIH/QYMQ/IGZGVVI8/FIHQYMQIGZGVVI8.LARGE.jpg"], "step_title": "Step 4: Connect Your Raspberry Pi From PC Part 1"}, {"step": 5, "steps_text": "Manual way of adding Raspberry Pi WLAN settings. You need to set wlan ssid and password to configuration so that Raspberry Pi can connect it.To start type following and press enter.sudo nano /etc/wpa_supplicant/wpa_supplicant.confAdd network section and configurations to the end of the file (check above image for reference):Network={ssid=\"yourssid\"psk=\"passwordtoyourwlan\"}Save with Ctrl+X and select \"Y\" to confirm save.Now restart Raspberry Pi. Type following and press enter.sudo rebootOnce booted up and logged in, type following and press enter.IfconfigYou should now see that also wlan0 has inet addr available.", "step_imgs": ["https://cdn.instructables.com/F5N/LGSY/IGZGVVLI/F5NLGSYIGZGVVLI.LARGE.jpg"], "step_title": "Step 5: Optional: Wlan Configuration to Raspberry Pi"}, {"step": 6, "steps_text": "Now the IP (ethernet or wlan) address is known. You can now connect via PuTTY from your windows desktop. To do so, open putty, type in IP address and port 22 and select open. Say yes to security alert and command line opens up in PuTTY.Type in login name and password and now you should be in pi's command prompt. This means that you can now disconnect keyboard and display from Raspberry Pi and do all the rest of the steps from your pc via PuTTY. To shutdown pi (just in case when disconnecting keyboard and display) type following and press enter.sudo shutdown -h nowRaspberry Pi will shut down. Once you have disconnected keyboard and display disconnect power supply and put it back in to boot up the Raspberry Pi. Wait for a moment (so Raspberry Pi boots up) and then try to connect again via PuTTY, if everything works like it should you should be now able to login...if you get timeout at first, wait for a moment and try again.NOTE: IP address can change if your routers DHCP gives new IP address to the Raspberry Pi during bootup / reset and therefore you should know the new IP in order to connect again via PuTTY.To avoid this problem, you have option to set in static ip address for the Raspberry Pi\u2026there is few guides how to do that. E.g. try this  http://www.modmypi.com/blog/tutorial-how-to-give-...Or then you can do like I did (if your router allows it), add address reservation to Raspberry Pi's wlan adapter MAC address in router configurations. I have tplink router so i added MAC address and reserved currently assigned IP address for it.  For this trick, you need both, IP address and MAC. Againy type following and press enter.ifconfigTake note from hwaddr (this is the Mac and inet addr which is the IP)Then create address reservation to your DHCP / address reseravtion list. Check your routers user guide to see how this can be done in your own router. I have TPLink so Address Reservation looks exactly like in attached image.Now everything is set up and we can get to the fun part.", "step_imgs": ["https://cdn.instructables.com/FH1/7394/IGZGVVK0/FH17394IGZGVVK0.LARGE.jpg", "https://cdn.instructables.com/FRT/3T3F/IGZGVVIE/FRT3T3FIGZGVVIE.LARGE.jpg", "https://cdn.instructables.com/F9Y/0YDA/IGZGVVG0/F9Y0YDAIGZGVVG0.LARGE.jpg"], "step_title": "Step 6: Connect Your Raspberry Pi From PC Part 2"}, {"step": 7, "steps_text": "Start by updating and upgrading the Raspberry Pi. Type following and press enter.sudo apt-get updateThis updates software sources then type following and press enter.sudo apt-get upgradeThis updates to everything to latest version. If prompted to continue press \"Y\".When these are finished, it is time to install Adafruit Python code. You will need this code in order to get readings from DHT22 sensors. This will also allow you to test that your assembly works in first place.At first, get compiler and python library. For that type following and press entersudo apt-get install build-essential python-dev python-opensslThen, make sure that you are in folder where you want to install the Adafruit code, by default i would suggest /home/. For that type following and press enter.cd /home/piIn stretch lite, you also need to install Git separately as it is not included by default. To do so, type:sudo apt-get install gitNow clone the git repository. Type following and press enter.git clone  https://github.com/adafruit/Adafruit_Python_DHT.g...Go to folder.Type following and press enter.cd Adafruit_Python_DHTAnd finally install the Adafruit library. Type following and press enter.sudo python setup.py installThen it is time to test your assembly...", "step_imgs": [], "step_title": "Step 7: Installing DHT22 Sensor Libraries"}, {"step": 8, "steps_text": "Now that installation is completed you can test the connected sensor/s and see that you get reading from them. Go to folder where you cloned the Adafruit_Python_DHT and then to examples folder. Type following and press enter.cd /home/pi/Adafruit_Python_DHT/examplesYou remember the gpio/s where you plugged the sensor/s? Good, then type sudo ./AdafruitDHT.py     and press enter. I had gpio 22 and 23 so I tested withsudo ./AdafruitDHT.py 22 22sudo ./AdafruitDHT.py 22 23If your sensor and assembly is ok, you should get back temperature and humidity from the sensor/s. Like seen in attached image.NOTE:If you see \"Failed to get reading. Try again!\", then try again few times.If still nothing, re-check that you typed in the right GPIO. If gpio is for sure right, check your assembly again. E.g. DHT22 gets power, ground and resistor is connected correctly.If all above are right, try to connect your sensor to another GPIO and see if you get reading from thatIf nothing from above works, it is always possible that your DHT22 is broken. :( Libraries for DHT22 sensors are now installed and you can get the readings from sensor/s. Time to set up database for holding that data.", "step_imgs": ["https://cdn.instructables.com/FUL/MHET/IGZGVVLD/FULMHETIGZGVVLD.LARGE.jpg"], "step_title": "Step 8: Testing the DHT22's"}, {"step": 9, "steps_text": "Get Mysql/MariaDb and required addons for it. To do that type following and press enter.sudo apt-get install mysql-server python-mysqldbNote: You won't be queried for password for ROOT user anymore during the installation. This is empty by default.After installation completed. It is time to set up the actual database and tables for storing the data. This need to be done in mysql console. To get into console type in the following and press enter.sudo mysql -u root -p -h localhostHit enter (empty) for password and you should be in MariaDb consoleIn consoleFirst, create database called temperatures. Type following and press enter.CREATE DATABASE temperatures;Select the created database by typing following and pressing enter.USE temperatures;Next you need to create database user and grant access to database . (Change password to something else if you like).To do that type in the following lines separately and after each press enter (check reference image 2).CREATE USER 'logger'@'localhost' IDENTIFIED BY 'password';GRANT ALL PRIVILEGES ON temperatures.* TO 'logger'@'localhost';FLUSH PRIVILEGES;Now the user has been created and privileges added. Time to change user from root to this new logger. Log out  by typing following and pressing enter.quitAnd log back in with this new user by typing following and pressing entersudo mysql -u logger -p -h localhostAnd give password that you assigned after IDENTIFIED BY when creating the user (by default it was password).Now it is time to create two tables. Temperaturedata for storing sensor information and time of measurement and also mailsendlog that holds information when temperature limit trigged mail warnings have been sent. Mailsendlog is used in code to check when last warning was sent and it has been restricted that warning can be sent only within mail sending timeout limit set in configurations. This restriction is required so that mailbox is not flooded in cases where measurements are done frequently, e.g. every minute and every measurement causes warning.However there is little exception when this check is ignored and that is in cases when temperature or humidity increases or decreases more than sensor limits allow, between measurements. Think of the case when you are logging home temperature via this logger and there is suddenly huge drop in temperature between measurements, it would be nice to get information about that even if set mail sending time out has not passed yet.Some warnings, like sensor cannot be read, or database insert failed are send every time when they occur. These warning indicate that there is something wrong with Raspberry Pi or sensors and should be checked right away.To start creating tables, type in the following and press enter.USE temperatures;Create first table with columns dateandtime, sensor, temperature and humidity. To do that type in the following and press enter.CREATE TABLE temperaturedata (dateandtime DATETIME, sensor VARCHAR(32), temperature DOUBLE, humidity DOUBLE);Create second table with columns dateandtime, triggedsensor, triggedlimit and lasttemperature. To do that type in the following and press enter.CREATE TABLE mailsendlog (mailsendtime DATETIME, triggedsensor VARCHAR(32), triggedlimit VARCHAR(10), lasttemperature VARCHAR(10));You can confim, that empty sets are present by typing in the following and pressing enter.SELECT * FROM mailsendlog;SELECT * FROM temperaturedata;If tables exist, you should see \"Empty Set (0.00 sec)\"Database and tables are now setup, exit the MySql console by typing in the following and pressing enter.quitThen restart mysql to changes take effect. To do that type in the following and press entersudo /etc/init.d/mysql restartThats it, mysql and database is ready. Next thing is to download the DHT22-TemperatureLogger for reading sensors, and inserting data to these new tables.", "step_imgs": ["https://cdn.instructables.com/FG1/XHBD/IGZGVVIU/FG1XHBDIGZGVVIU.LARGE.jpg"], "step_title": "Step 9: Setting Up the MySql for Storing the Temperature Data"}, {"step": 10, "steps_text": "TemperatureLogger Python code can also be found from github, just like the Adafruit DHT22 codes.NOTE: If this is first time you are doing this, you can skip to \"Setting up\" few lines below. But if you already have done this step earlier and now there is fixes/update in github that is wanted on your setup as well, you need to fetch the code again. Folder can either be removed and cloned again or fetched and reseted with Git. Either way, first backup configurations json file, backup also SQL backups from DHT22-TemperatureLogger/Backups folder, then remove DHT-TemperatureLogger folder. To remove and re-clone the folder make sure you are on the folder that contains DHT22-TemperatureLogger. e.g. type:cd /home/piand remove the folder by typingsudo rm -r DHT22-TemperatureLogger/Now you can re-clone from GIT and reset the configurations with the steps mentioned below in \"Setting up\". Notable is that if there were changes also to configurations json file (e.g. new configurations), you cannot copy the backed up old file back as is.For Git fetch and resetGo to DHT22-TemperatureLogger/ foldertype git remote -v and you should see something similar like this:origin    https://github.com/jjpFin/DHT22-TemperatureLogger... (fetch)origin    https://github.com/jjpFin/DHT22-TemperatureLogger....(push)Fetch latest version with git fetch --alland reset folder to match latest version with git reset --hardIf Git approach didn't work, you can always just delete and re-clone as mentioned above.Setting up.Make sure that you are in folder where you want to install the DHT22-TemperatureLogger, by default i would suggest /home/pi/. Type in the folder and press enter.cd /home/piNow clone git repository by typinggit clone https://github.com/jjpFin/DHT22-TemperatureLogger....Typelsand press enter. And you should see that TemperatureLogger is unpacked to new DHT22-TemperatureLogger folder (image attached). Now to get this to work with Adafruit code and your MySql database that was just created, some configurations are needed. Start by editing the settings. To do this go to DHT22-TemperatureLogger folder by typing following and pressing entercd /home/pi/DHT22-TemperatureLoggerNow open config.json in editor. Type in the following and press enter.sudo nano config.jsonConfiguration file opens up in editor (reference image attached).Start going through the configurations and make them match your configurations.mysql: Change mysql part to      match what was created in mysql creation phase.sensors: Create configurations for sensors attached to your RPI. Notable is that each sensor need to have own configuration line. name: Set names for your      sensors, e.g. outside, inside, livingroom, kitchen and so on. Where that      sensor is going to be located or how you want to name it in log. Also add GPIO from where sensor is found. Other values are triggerlimits. SensorType: Keep this as 22 with dht22 sensor, this is here in case that i will later add support for other sensors as well. (However I think that DHT11 should work, but haven't tested it. Try it out...)Temperature low and high are limits for triggering email warnings. E.g. if sensor low liimit is 0 and temperature on that location drops below 0, you      will receive warning to email address that you assign later. Same goes with high limit. If temperature gets higher than set limit. Warning is sent.Humidity limits works exactly like temperature limits, but send warnings if humidity received from sensor doesn't fit between the limitsThreshold is used for measuring if temperature or humidity drops more than set limit between 2 measurements. As example, TemperatureThreshold is set to 5, last measurement was 10 and on next measurement you get 0. This means that 5 or 15 would be ok, but anything below or above that is more than threshold and email warning is triggered. Use case for this is to follow if temperature raises or drops too quickly in monitored location.NOTE: There is two example rows here for two sensors. If you want to attach more, just copy and paste more lines and edit values.mailInfo: This is for sending      those email warnings. (I created new gmail just for this purpose) NOTE CURRENTLY ONLY GMAIL IS SUPPORTEDSenderaddress: This is shown in receivers inbox as senderReceiveraddress: Where do you want to sent these warningsUsername: username for sender emailPassword: password for sender emailsubjectMessage: Can be changed if you want to, this is subject of the sended email in normal casesubjectWarning: This can also be changed, this is sended in case that warning is triggered (e.g. temperature is below triggerlimit)sqlBackupDump: Backup dumps are either once a week or daily now.BackupDumpEnabled y/n indicates if backup dumps are wanted in first place. backupDay is day of the week when dump is taken. 1-7 (Monday to Sunday) 0 daily.backupHour is the hour of the day when dump is taken- 0-24backupDumpPath is the path where dump is stored. By default it is in Backups folder.Every dump is automatically created to own datetime folder in      this directory. Note that this folder isn't automatically backed up to any      location. You need to copy it manually every now and then.weeklyAverages: Used to define if weekly average temperatures are sent and on which day. This is done in order that you can be sure that logger is up and running even though warnings haven't been sent recently.weeklyAveragesSendingEnabled: y means enabled, anything else means it is disabled. weekDayForSendingAverages: is day of the week when dump is taken. 1-7 (Monday to Sunday)hourOfTheDayForSendingAverages: is the hour of the day when dump is taken 0-24.useFahrenheits: y enabled, n disabled. Note that if you change to fahrenheits and back to celsius \"on the fly\", you might get some warning mails about exceeded threshold limits or broke limits.mailSendingTimeoutInFullHours: 0-xUsed to reduce spam. If set to 0, logger will send mail from every warning. Bigger values allow it to send warnings only once per hour. Used so that mailbox doesn't get flooded in case that measurements are done frequently and every measurement causes mail notification to be sent.adafruitPath: This is the      path where Adafruit_Python_DHT was downloaded from Git in beginning. By      default it was /home/pi/Adafruit_Python_DHT/ Script AdafruitDHT.py  This is important as it is used to get      readings from each connected sensor.Once settings are set, press Ctrl+x and save when prompted with \"Y\". Now test that readings are written to database correctly In DHT22-TemperatureLogger folder, type following and press enter.python DHT22logger.pyIf everything goes as planned, Raspberry executes the python script, gets readings from sensor/s and writes them to database. If you cant see any errors, all seems to be working. Now check database that data is inserted. Go to mysql console by typing following and pressing enter.sudo mysql -u logger -p -h localhostAnd log in with your password. In mysql console type following and press enter.use temperatures;And then type (and press enter)select * from temperaturedata;And check that readings were saved to table (reference image)If everything seems to be in order and you can see the readings, exit mysql by typing following and pressing enterquitNote that mailsendlog table is empty at this point as no warning mails have been send. However, if you have only one sensor attached, but in configs sensor amount setting is more than 1, you will get email indicating that sensor couldn't be read. These kind of warnings are send always if they occur and are not logged.", "step_imgs": ["https://cdn.instructables.com/FDD/W2H3/IGZGVVI5/FDDW2H3IGZGVVI5.LARGE.jpg", "https://cdn.instructables.com/F8I/VZPT/IGZGVVIP/F8IVZPTIGZGVVIP.LARGE.jpg", "https://cdn.instructables.com/FD4/XA4B/JGCJAO2Z/FD4XA4BJGCJAO2Z.LARGE.jpg"], "step_title": "Step 10: Set Up the Temperature Logger Code"}, {"step": 11, "steps_text": "Now that temperature logger seem to be working, you probably want to take measurements automatically every n minutes all the time when Raspberry is powered on. To do so add timed event to crontab schedulerType following and press enter.crontab -eRpi will prompt that \"no crontab for pi - using empty one\" and gives options to selecting editor.Select  option 2. /bin/nano and crontab should open up.Add the following line at the end of the file (check reference image). This will run the script every 15 minutes. */15 * * * * python /home/pi/DHT22-TemperatureLogger/DHT22logger.pyMore information about setting the crontab job can be found from here  http://www.thesitewizard.com/general/set-cron-job...Quit and save with Ctrl+x and select \"Y\" when promptedWait for 15-20 minute (or reduce time to wait less) and check that new inserts are done to mysql table. If yes, everything is now set up\u2026and logger is working automatically and inserting data to MySql & sending mails.Next thing thing is to set up LAMP (Linux, Apache, MySQL, PHP) and serve MySql information to web page. This way you can check the current readings with any web enabled device.", "step_imgs": ["https://cdn.instructables.com/FYN/CWDO/IGZGVVHN/FYNCWDOIGZGVVHN.LARGE.jpg"], "step_title": "Step 11: Automatical Sensor Reading"}, {"step": 12, "steps_text": "First type insudo apt-get updateto update again. After update finished. Install apache2 web-server (and addons) so that you can serve temperaturelogger web page to client.sudo apt-get installapache2 php7.0 php7.0-curl php7.0-gd php7.0-imap php7.0-json php7.0-mcrypt php7.0-mysql php7.0-opcache php7.0-xmlrpc libapache2-mod-php7.0After install finished restart apache server by typingsudo /etc/init.d/apache2 restartNow the web server is ready and can serve your first web-page.On your PC web-browser type in the IP address of the raspberrypi and you shdould see the apache landing page. (same as in attached picture)Good, now change html page to PHP and get data for the page from temperatures database. Go to location from where the index.html page is served. Typecd /var/www/html/Note: location used to be /var/www/ but has since changed to /var/www/html/Check that you are in correct folder and actually have the index.html in this folder by typinglsYou should see that there is index.html in this page (attached reference image 2)Create the index.php page and copy following code section to it. Type in.sudo nano index.phpEditor opens up. Copy the code from attached index.php.txt file to the editor. Remember to change settings to match your MySql settings. And you can also change how many hours backwards temperatures are seen in web page by editing $hours variable.When ready Exit with Ctrl+X and save with \"Y\" when promptedNow remove the index.html, so that next time page is loaded index.php is used by typingsudo rm index.htmlThen once again, on your PC web-browser type in the IP address of the raspberrypi and you should see the page, but this time with temperature information from your MySql database (attached image as reference).Good, you are almost finished. Last thing to do is installing dynamic DNS so that you can connect this page with www. instead of IP.", "step_imgs": ["https://cdn.instructables.com/F4Z/UW2L/IGZGVVGJ/F4ZUW2LIGZGVVGJ.LARGE.jpg", "https://cdn.instructables.com/FFQ/18YT/IGZGVVHU/FFQ18YTIGZGVVHU.LARGE.jpg", "https://cdn.instructables.com/F3Z/3KJZ/JJJ7FZCG/F3Z3KJZJJJ7FZCG.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 12: LAMP (Linux, Apache, MySQL, PHP) and Data to Web Page"}, {"step": 13, "steps_text": "As dynamic DNS I have been using no-ip as it is free to use and quite simple to set up. To use this, first you need to create account to No-Ip. Go to  www.noip.com and sign up. NOTE: remember the account information as it is needed also during the installation in Raspberry Pi.Once you have account and access to no-ip and have signed in, it is time to create host.1. Select add a host2. Givee hostname. Hostname is the       name of your site, e.g. mylogger.ddns.net. After the setup, when you       write this to your browser, it connects to temperaturelogger index.php page. Good part is that you don't need to know Raspberry Pi's IP address anymore.3. When ready, save with      \"add host\"Now go back to you Raspberry Pi terminal and create folder for the noip by typingmkdir /home/pi/noipGo to that folder by typingcd /home/pi/noipGet the software packagewget  http://www.no-ip.com/client/linux/noip-duc-linux....You noticed that software is packed and need to be extract. For extracting, type:tar vzxf noip-duc-linux.tar.gzNow select the noip folder that was extracted. This folder changes along with version changes. Easiest way to select latest is to type cd ./n and press tab and then enter to selectNow compile and install the noip software from the extracted source. Typesudo make && sudo make installDuring the install, you will be asked for the no-ip account information and after that everything is set.Check that you can access the page with hostname you gave (e.g.. mylogger.ddns.net) by typing it to web browser.You should again see the temperaturelogger temperature data. Notice that you can now check temperatures with any web enabled device by just setting that host name to your web page e.g. try it with your phone.Now everything is set, but remember that if you restart your Raspberry Pi, no-ip need to be started manually by typing.sudo /usr/local/bin/noip2However this can be easily tweaked so that  no-ip is automatically run on a startup. For doing that you can follow this tutorial:  http://www.stuffaboutcode.com/2012/06/raspberry-p...That's all for this instructable. Thank you for reading it all the way through and congratulations for finishing it. I hope you had as fun following it through as I had while putting it all together. In case you have some questions, please don't hesitate to leave question or contact me.Thanks and best regards,JJ", "step_imgs": [], "step_title": "Step 13: Installing Dynamic DNS"}], "channel": "Raspberry Pi"}, {"category": "technology", "description": "Drinking enough water is very important for our health. Drinking more water can lead to clearer skin, better overall health, improved productivity and brain function, increased energy levels, and even weight loss.In our busy life it is really hard to remember to drink enough water and most of the time we forget to drink enough water either we are in home, office or on the go. Around 75% of Americans are chronically dehydrated all the time. So, in order to build a healthy water drinking habit, it\u2019s important to track your water intake every day.To track my water intake I made my water bottle smart using Arduino. It can:1.   Track my daily water intake2.   Track my weekly average water intake3.   Remind me to take water4. Track last intake time5. Run more than one month in a single charge. Demo Video", "title": "Arduino Powered Water Bottle", "url": "https://www.instructables.com/id/Arduino-Powered-Water-Bottle/", "section": "technology", "steps": [{"step": 1, "steps_text": "1. Waterproof Ultrasonic Sensor (ebay.com)2. Arduino Pro Mini (digikey.com) (seeedstudio.com)3. RTC Module (digikey.com) (seeedstudio.com)I made the RTC module myself using DS1307 RTC and 32.768 kHz crystal. In next step I will show you how I made the RTC module.4. Common-cathode 4-digit 7-segment Display (digikey.com) (sparkfun.com)5. Piezoelectric speaker (sparkfun.com)6. Momentary Pushbutton Switch - 12mm Square (sparkfun.com)7. Transistor - NPN (2N3904 or 2N2222 or any compliment) (4 pcs)(sparkfun.com)8. Li-ion battery charger Module (amazon.com) 9. Polymer Lithium Ion Battery - 400mAh (digikey.com) (sparkfun.com)10. Your water bottle (unsmart one, we will make it smart.) 11. Resistors (8 x 220 ohm, 2 x 4.7k, 4 x 1k)", "step_imgs": ["https://cdn.instructables.com/FIQ/T88O/IY0FUJGB/FIQT88OIY0FUJGB.LARGE.jpg", "https://cdn.instructables.com/FLQ/BPGD/IY0FUJG8/FLQBPGDIY0FUJG8.LARGE.jpg", "https://cdn.instructables.com/FLZ/OVDQ/IY0FUJG9/FLZOVDQIY0FUJG9.LARGE.jpg", "https://cdn.instructables.com/F9Z/H66Y/IY0FUJVR/F9ZH66YIY0FUJVR.LARGE.jpg", "https://cdn.instructables.com/FB5/LS7M/IY0FUJVU/FB5LS7MIY0FUJVU.LARGE.jpg", "https://cdn.instructables.com/FUB/2XJA/IY0FX7YA/FUB2XJAIY0FX7YA.LARGE.jpg"], "step_title": "Step 1: Bill of Materials"}, {"step": 2, "steps_text": "To log or track water intake information its require current time and date information to be stored along with the accumulated data. A Real Time Clock (RTC) chip such as DS1307 with a suitable back-up battery can be used to supply the required information. The programming process of the RTC chip (in software) is also very simple and is supported in the majority of programming environments.Here is the design of a compact RTC module, based on the popular RTC IC DS1307, for your everyday microcontroller projects. The DS1307 serial real-time clock (RTC) is a low power, full binary coded decimal (BCD) clock/calendar plus 56 bytes of NV SRAM. Address and data are transferred serially through an I2C, bidirectional bus. The 24-hour/12-hour format clock/calendar provides seconds, minutes, hours, day, date, month, and year information, including corrections for leap year.Let's make the real time clock module according to the attached schematic. DS1307 RTC requires an external crystal to operate correctly. Two pull-up resistors are required for SCL & SDA pin of the IC. The value of the resistor may be around 2k to 10k . I used 4.7k. During soldering I tried to keep the module as small as possible because space is limited for my circuit. You can use DS3231 instead of DS1307 and the IC has an internal crystal oscillator. So, you need not to add any external crystal. You may also buy a ready-made tiny RTC module if you don't like to make it own. As the complete system will be operate from battery, for the reason I connected VBAT pin of the RTC to ground without using coin cell. Important Pins of DS1307:5V Pin: When this pin is high then the ds1307 sends the data and when it is low it runs on the backup button cell. GND: This is the ground pin for the module. Both the ground of the battery and the power supply are tied together. SCL: It is the i2c clock pin - Which communicates with the microcontroller. Should connect with arduino SCL pin. SDA: It is the i2c data pin - Which communicates with the microcontroller. Should connect with arduino SDA pin.VBAT: Battery input for any standard 3V lithium cell or other energy source. Must be grounded if not used.", "step_imgs": ["https://cdn.instructables.com/F8N/7NPQ/IY0FVEM7/F8N7NPQIY0FVEM7.LARGE.jpg", "https://cdn.instructables.com/FGI/W37K/IY0FVEHU/FGIW37KIY0FVEHU.LARGE.jpg", "https://cdn.instructables.com/FM0/TKVF/IY0FVEJI/FM0TKVFIY0FVEJI.LARGE.jpg", "https://cdn.instructables.com/FOU/5HWL/IY0FVENR/FOU5HWLIY0FVENR.LARGE.jpg", "https://cdn.instructables.com/F0E/M53H/IY4QBL7J/F0EM53HIY4QBL7J.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 2: Making RTC Module "}, {"step": 3, "steps_text": "For the display module here I used a self-contained, compact common-cathode module containing four 7-segment LED numeric displays good for displaying numerical data with some simple character. Each segment in the display module is multiplexed, meaning it shares the same anode connection points. And each of the four digits in the module have their own common cathode connection point. This allows each digit to be turned on or off independently. Also, this multiplexing technique turns the massive amount of microcontroller pins necessary to control a display into just eleven or twelve (in place of thirty-two)!The LED segments of the display require current-limiting resistors when powered from a 5 V logic pin. The value of the resistor is typically between 330 and 470 ohms for 5 V. For li-ion battery operation it may be 220 ohms. And, driver transistors are recommended to provide additional driving current to the LED segments, because each pin of a microcontroller can source or sink near 40 mA of current only. When all (seven) segments of the display turned on at once (the numeral 8), the current demand will exceed this 40 mA limit. The image shown below indicates the basic wiring diagram of the current limiting resistors and driver transistors.This 4 -digit 7-segment display section is wired around four common-cathode 7-segment LED displays, and four 2N2222 npn transistors. The 1K resistors are used for base current limiting, and the 220R resistors limits the operating current of the LED display segments.In the Arduino board, digital outputs from D10 to D17 are used to drive segments (a to g & dp), and digital outputs D6 to D9 are used for the digits (D0-D3) of the 4\u00d77 LED display.A button switch is added with the display module to access different options. It will also used to wake up the arduino from sleep mode using external hardware interrupt. so, button is connected to arduino digital pin #2 (INT0).", "step_imgs": ["https://cdn.instructables.com/FZ0/V116/IY0FVGT6/FZ0V116IY0FVGT6.LARGE.jpg", "https://cdn.instructables.com/F0U/0YT0/IY0FVH0Y/F0U0YT0IY0FVH0Y.LARGE.jpg", "https://cdn.instructables.com/F2W/3QJN/IY4QEAQ0/F2W3QJNIY4QEAQ0.LARGE.jpg", "https://cdn.instructables.com/F8Z/X438/IY0FVGUV/F8ZX438IY0FVGUV.LARGE.jpg", "https://cdn.instructables.com/FNW/2YLW/IY0FVGRH/FNW2YLWIY0FVGRH.LARGE.jpg", "https://cdn.instructables.com/FZD/WIKO/IY0FVGWK/FZDWIKOIY0FVGWK.LARGE.jpg", "https://cdn.instructables.com/F12/G4RL/IY0FVGYA/F12G4RLIY0FVGYA.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 3: Making Seven Segment Display Board"}, {"step": 4, "steps_text": "The principle of operation of the ultrasonic sensor system is to use the ultrasonic pulses which are transmitted by the transducer to the surface to be monitored and are reflected back to the transducer, the time period between transmission and reception of the sound pulses is directly proportional to the distance between the transducer and surface, A micro-controller computes this time period for all echoes received and analyses them to determine which is the correct reflection from the material surface, it uses this data as the basis for giving control outputs and displays in usable engineering units. The distance D is determined from the velocity of sound and the time period t by the formula: D = .t /2.Example: With the velocity of sound = 334.1 M/s, a time period of 60m/s corresponds to a transmission path of 20.046M and thus to a distance of 10.023M.Ultrasonic pulse will bounce from liquid level since because change of density of ultrasonic pulse travel medium (ultrasonic pulse first travel through air and bounce of liquid with higher density than air). Because water has higher density, majority of pulse will bounce off.Though it is a contact less methods is to measure distance between transceiver and fluid there are two disadvantages exist with ultrasonic method:1st: because of pulse length there is small window that we cannot receive pulse with transceiver because transceiver is transmitting. This problem is simple to solve: we placed our sensor higher from maximum water level for few centimeters allowing receiver to start receiving.2nd: because of the beam width we are limited with bottle diameter. If bottle diameter is too small, signal could bounce of bottle\u2019s walls and could cause false readings.To know more details about it please read this nice instructable: Measuring water level with ultrasonic sensor by vonPongrac.Lots of theory. Now, solder 5 CM long jumper wire with the ultrasonic sensor and buzzer as shown in the image. You will connect trigger pin of the sonar to Arduino digital pin #4 and echo pin of the sonar to arduino digital pin #5. Buzzer pin should be connected to arduino digital pin #3.", "step_imgs": ["https://cdn.instructables.com/FK2/BALP/IY0FVHAW/FK2BALPIY0FVHAW.LARGE.jpg", "https://cdn.instructables.com/FLR/JM7B/IY0FVH9C/FLRJM7BIY0FVH9C.LARGE.jpg"], "step_title": "Step 4: Preparing Ultrasonic Sensor and Buzzer"}, {"step": 5, "steps_text": "According to the schematic provided before solder all the segments pin to the arduino mini pin. Then solder 4 common pin to the collector pin of the transistor. Transistor's bases are connected to arduino pin. After connecting the display connect the button switch with the arduino digital pin 2 (INT 0). Be sure you connected button to arduino pin 2 because we will implement external hardware interrupt to wake up arduino from sleep mode using this button. ", "step_imgs": ["https://cdn.instructables.com/FNN/TBSK/IY0FX41W/FNNTBSKIY0FX41W.LARGE.jpg", "https://cdn.instructables.com/FL4/A061/IY0FX3WP/FL4A061IY0FX3WP.LARGE.jpg", "https://cdn.instructables.com/FZU/PNR2/IY0FX3WQ/FZUPNR2IY0FX3WQ.LARGE.jpg", "https://cdn.instructables.com/FFS/RBAN/IY0FX3Y0/FFSRBANIY0FX3Y0.LARGE.jpg", "https://cdn.instructables.com/FDU/2JXX/IY0FX454/FDU2JXXIY0FX454.LARGE.jpg"], "step_title": "Step 5: Connecting Display Board With Arduino Mini Pro"}, {"step": 6, "steps_text": "Now, connect the RTC module you made earlier to the arduino board. SDA pin of the module must be connected to SDA (A4) pin of the arduino pin and SCL pin of the module must be connected to SCL (A5) pin of the arduino. Then connect the buzzer to the arduino board. Connection:RTCArduino ------> Mini ProSDA ------> A4SCL ------> A5Buzzer ------> D3", "step_imgs": ["https://cdn.instructables.com/FG2/UDIG/IY0FZT39/FG2UDIGIY0FZT39.LARGE.jpg", "https://cdn.instructables.com/F4E/PT2N/IY0FZT3O/F4EPT2NIY0FZT3O.LARGE.jpg", "https://cdn.instructables.com/FOZ/HWK1/IY0FZT3C/FOZHWK1IY0FZT3C.LARGE.jpg", "https://cdn.instructables.com/FRQ/2DVA/IY0FZT3G/FRQ2DVAIY0FZT3G.LARGE.jpg"], "step_title": "Step 6: Connecting RTC Module and Buzzer"}, {"step": 7, "steps_text": "Make a hole into the bottle cap as shown in the image. Bring out four wires of the ultrasonic sensor through the hole and fixed the ultrasonic sensor at the middle of the bottle cap. Sensor must be attached in the inner side of the bottle cap and it should be place at the center position.Connection:Ultrasonic Sensor ------> Arduino Mini ProVCC ------> VCCGND ------> GNDTrigger ------> D4Echo ------> D5", "step_imgs": ["https://cdn.instructables.com/F80/PTID/IY0FZTGW/F80PTIDIY0FZTGW.LARGE.jpg", "https://cdn.instructables.com/FJ2/AQOK/IY0FZTDQ/FJ2AQOKIY0FZTDQ.LARGE.jpg", "https://cdn.instructables.com/FD0/FHLE/IY0FZTF3/FD0FHLEIY0FZTF3.LARGE.jpg", "https://cdn.instructables.com/F49/01WJ/IY0FZTK1/F4901WJIY0FZTK1.LARGE.jpg", "https://cdn.instructables.com/FYM/AHID/IY0FZT91/FYMAHIDIY0FZT91.LARGE.jpg", "https://cdn.instructables.com/FTW/Q1I1/IY0FZTJI/FTWQ1I1IY0FZTJI.LARGE.jpg"], "step_title": "Step 7: Attaching Ultrasonic Sensor With Bottle Cap"}, {"step": 8, "steps_text": "After completing all the connection it is the right time for uploading program to Arduino board and testing the functionality. You will be required several library for the program to work correctly. For button interfacing you need to add OneButton library. As the device will operate from battery, power consumption is an important issue. I implemented sleep mode to my arduino sketch. Watchdog timer and external hardware interrupt was used to wake up the Arduino from sleep mode. Arduino takes sensor reading for three times, average it and calculate the necessary information and display information for 10 seconds and then go to the sleep mode for 1 minutes. It wake up any time on button pressed connected to INT0 (digital pin 2). So, if you want to see the information about your water intake just press the option button any time. It will wake up for you. Without any button press it will take reading every 1 minutes. For implementing sleep mode I used arduino Low-Power library. For reading time from DS1307 RTC module I used DS1307RTC library. So, for compiling the attached program add all the library to your environment.  I will explain here only the calculation algorithm in brief. See the attached fill for complete sketch. Calculation is done from the average of five sensor readings to make it accurate enough. Daily reading is reset at 24 hours and prepared for new reading for new day. void calculation(){\n  float water_level = 0;// store level in every step\n  int read_value = 0; //read sensor reading in cm\n\n  for(int i=0; i<5; i++){ //take five reading\n      read_value = distance_in_cm();\n      if(read_value>16 || read_value<3){// unstable reading\n          return; //return to calling function because reading is unstable\n        }\n      else if(read_value<=16 && read_value>=3){//valid value      \n          water_level = water_level + read_value;\n        }\n      delay(10);\n   } \n  average_water_level = 17 - water_level/5; //find average from five reading, 17 = botole height\n  water_amount_in_ounce = int(average_water_level*1.87);//16 cm water level = 30 ounch\n  if(water_intake_times==0){\n     previous_water_amount = water_amount_in_ounce;\n     water_intake_times = 1;\n    }\n  if((water_amount_in_ounce < previous_water_amount-1) && (hours < 24)){//some water is consumed\n    water_intake_ounch[water_intake_times - 1] = previous_water_amount - water_amount_in_ounce;\n    water_intake_times++;\n    previous_water_amount = water_amount_in_ounce;\n    }\n  else if(water_amount_in_ounce > previous_water_amount){ //water is refilled\n    //water refil here\n    previous_water_amount = water_amount_in_ounce;\n    }\n  else if(water_amount_in_ounce == previous_water_amount){ //no water consumed or reafill\n    idle_time+=1;\n    }\n  if(hours==23 && minutes==59){ // a day is over and all values start from zero for new day\n    for(int i=0; i<15; i++){\n      water_intake_ounch[i] = 0;\n      }\n    water_intake_times = 0;\n    intake_day++;\n    if(intake_day==8){\n      intake_day = 1;\n      }\n    }\n}\nint total_water_intake_in_day(){//calculate total water intake in a day\n  total_water_intake_today = 0;\n  for(int i=0; i<water_intake_times; i++){\n    total_water_intake_today = total_water_intake_today + water_intake_ounch[i];\n    } \n    water_intake_days[intake_day] = total_water_intake_today;\n    return total_water_intake_today;\n  }\n\nint average_water_intake_last_week(){//calculate average water intake last week\n  for(int i=1; i<=intake_day; i++){\n    average_intake_last_week = average_intake_last_week + water_intake_days[i-1];\n    }\n  average_intake_last_week = average_intake_last_week/intake_day;\n  return average_intake_last_week;\n  }\nAverage water intake is prepared from the average of previous seven day's daily intake. You 2 hours passed without intake of any water it will alert the user with double beep in every 15 minutes and stops for next 2 hours after intaking water. Download the attached code and upload it to your Arduino mini pro. Connect all the module and power it up to test either all components is working correctly or not. If display shows some result then Congratulation!!! You already done the hard things. ", "step_imgs": ["https://cdn.instructables.com/FCV/MPZV/IY0FZTOG/FCVMPZVIY0FZTOG.LARGE.jpg", "https://cdn.instructables.com/FB4/WYMP/IY0FZTPS/FB4WYMPIY0FZTPS.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 8: Uploading Program & Testing"}, {"step": 9, "steps_text": "Using hot glue attache arduino mini to the upper side of the bottle cap. Keep in mind that you have to fix all the component into the bottle cap. Add enough glue so that it tightly attached to the bottle cap.", "step_imgs": ["https://cdn.instructables.com/FTS/KOBL/IY0FZU1K/FTSKOBLIY0FZU1K.LARGE.jpg", "https://cdn.instructables.com/F99/9VA3/IY0FZTZL/F999VA3IY0FZTZL.LARGE.jpg", "https://cdn.instructables.com/FNC/9THV/IY0FZU10/FNC9THVIY0FZU10.LARGE.jpg", "https://cdn.instructables.com/F5K/NF5S/IY0FZU30/F5KNF5SIY0FZU30.LARGE.jpg"], "step_title": "Step 9: Fixing Arduino With Bottle Cap "}, {"step": 10, "steps_text": "After attaching arduino board it is the time to attache display board to the bottle cap. Keep the display outer side so that it can be easily visible to the user. In the other side attache RTC module tightly with enough glue. You may follow the photos attached in the step. ", "step_imgs": ["https://cdn.instructables.com/FUS/3K4D/IY4Q6U0Q/FUS3K4DIY4Q6U0Q.LARGE.jpg", "https://cdn.instructables.com/F1N/MWYW/IY4Q6U9W/F1NMWYWIY4Q6U9W.LARGE.jpg", "https://cdn.instructables.com/F25/ETDT/IY0FZU29/F25ETDTIY0FZU29.LARGE.jpg", "https://cdn.instructables.com/FNJ/LCKO/IY0FZU2L/FNJLCKOIY0FZU2L.LARGE.jpg"], "step_title": "Step 10: Glueing Display Board With Bottle Cap"}, {"step": 11, "steps_text": "Now, fix the li-ion battery in the top of the arduino. Be careful about shorting the battery with any open pin. Then connect the charger module with the cap. Keep the usb port easy accessible from the outer side so that it can be connect easily to the charger.  ", "step_imgs": ["https://cdn.instructables.com/FIK/JZHT/IY4Q6UWC/FIKJZHTIY4Q6UWC.LARGE.jpg", "https://cdn.instructables.com/FNL/YOTW/IY4Q6V5Q/FNLYOTWIY4Q6V5Q.LARGE.jpg", "https://cdn.instructables.com/FN9/6YJK/IY4Q6VAG/FN96YJKIY4Q6VAG.LARGE.jpg", "https://cdn.instructables.com/FRJ/9C0H/IY4Q6VJP/FRJ9C0HIY4Q6VJP.LARGE.jpg"], "step_title": "Step 11: Attaching Battery and Charger Module"}, {"step": 12, "steps_text": "After connecting all the components and module it it the right time to make our device completely water proof. It is very important because it is water bottle and any time water can be drop to the circuit and may damaged the circuit. To make it completely waterproof add enough glue in every outer part of the circuits without the usb port. You can make the cap nice using glue to make it round at original cap. Don't sink the bottle cap in the water. ", "step_imgs": ["https://cdn.instructables.com/FRT/2A0H/IY4Q6WAJ/FRT2A0HIY4Q6WAJ.LARGE.jpg", "https://cdn.instructables.com/FVN/LW9O/IY4Q6WJS/FVNLW9OIY4Q6WJS.LARGE.jpg", "https://cdn.instructables.com/FMD/L2LU/IY4Q6WXI/FMDL2LUIY4Q6WXI.LARGE.jpg", "https://cdn.instructables.com/FXT/3BIB/IY4Q6X6M/FXT3BIBIY4Q6X6M.LARGE.jpg", "https://cdn.instructables.com/FWY/8EW9/IY4Q6XTJ/FWY8EW9IY4Q6XTJ.LARGE.jpg", "https://cdn.instructables.com/F10/0UDG/IY4Q6XTS/F100UDGIY4Q6XTS.LARGE.jpg"], "step_title": "Step 12: Making All the Circuits Waterproof"}, {"step": 13, "steps_text": "Congratulation!!! You made it. Enjoy it and modify it in more creative and useful way.", "step_imgs": ["https://cdn.instructables.com/FL4/4FRB/IY4QEJJ5/FL44FRBIY4QEJJ5.LARGE.jpg", "https://cdn.instructables.com/FQO/7KP5/IY4QEJOV/FQO7KP5IY4QEJOV.LARGE.jpg", "https://cdn.instructables.com/FTY/RR2L/IY4QEJP8/FTYRR2LIY4QEJP8.LARGE.jpg"], "step_title": "Step 13: Enjoy It"}], "channel": "Arduino"}, {"category": "technology", "description": "I decided to go out and find the truth. Unfortunately, there were no Instructables for doing this so I decided to make one and share it with you!I found out that all the biggest truths were located at 'standard conditions\u2019.In this instructable, I will show you how to create a Truth Voyager which ventures beyond your reach to the truth by approaching the standard conditions. There are many ways of finding the truth, more than I know or could describe. In this instructable, I will be showing you the balloon method.Please take a look at my other Instructables which describe alternative methods for reaching the truth.", "title": "How to Reach the Truth: Truth Voyager", "url": "https://www.instructables.com/id/How-to-Reach-the-Truth-Truth-Voyager/", "section": "technology", "steps": [{"step": 1, "steps_text": "Materials:6+ helium balloons (will depend on the size of your payload)  A fishing rod  Arduino Nano  3DR telemetry kit  BMP180 Barometric Pressure Sensor (or equivalent)  Small battery (anything between 6-20V)  Wires  Rubberbands  LaptopDesirable:GoPro with handlebar mount  A lot of helium  Friend to help you navigate", "step_imgs": ["https://cdn.instructables.com/FBU/HCWG/J140DX0Z/FBUHCWGJ140DX0Z.LARGE.jpg", "https://cdn.instructables.com/FVN/23CZ/J16P5HO7/FVN23CZJ16P5HO7.LARGE.jpg"], "step_title": "Step 1: Gathering Materials"}, {"step": 2, "steps_text": "Pease refer to the above diagram for wiring.Some wirings deserve some explanation:A Bluetooth module has been used in place of the 3DR telemetry kit, this is nothing to be concerned about it has the same Tx,Rx,Vin,Grd pins which we are interested in  unintuitively the Rx and Tx pins of the 3dr are not connected to the Tx, Rx pins on the Nano. This is because this Nano is a non-genuine board and uses these pins for serial communication via USB which makes the behavior unpredictable. I found these pins would only work when connected via USB. To get around this I used the software serial library and used digital pins 7 and 8 for Rx and Tx respectively    Also due to the limited number of ground pins on the Nano the ground of my pressure sensor is connected to a digital output pin set to low. This replicates a ground connection but is not suitable for components which draw a high amperage (perfectly OK for this sensor) DO NOT connect the sensor to 5v (only 3.3v) by doing so, you will likely damage the sensor", "step_imgs": ["https://cdn.instructables.com/FQX/GPN6/J16P29FE/FQXGPN6J16P29FE.LARGE.jpg"], "step_title": "Step 2: Wiring Hardware "}, {"step": 3, "steps_text": "This sketch was modified from the SFE_BMP180 library offered by SparkFun, I have commented out some code regarding altitude output which you may want to include if you are more interested in this than the pressure. You can find more resources about this sensor  here<p>/* SFE_BMP180 library example sketch</p><p>This sketch shows how to use the SFE_BMP180 library to read the\nBosch BMP180 barometric pressure sensor.\nhttps://www.sparkfun.com/products/11824</p><p>Like most pressure sensors, the BMP180 measures absolute pressure.\nThis is the actual ambient pressure seen by the device, which will\nvary with both altitude and weather.</p><p>Before taking a pressure reading you must take a temparture reading.\nThis is done with startTemperature() and getTemperature().\nThe result is in degrees C.</p><p>Once you have a temperature reading, you can take a pressure reading.\nThis is done with startPressure() and getPressure().\nThe result is in millibar (mb) aka hectopascals (hPa).</p><p>If you'll be monitoring weather patterns, you will probably want to\nremove the effects of altitude. This will produce readings that can\nbe compared to the published pressure readings from other locations.\nTo do this, use the sealevel() function. You will need to provide\nthe known altitude at which the pressure was measured.</p><p>If you want to measure altitude, you will need to know the pressure\nat a baseline altitude. This can be average sealevel pressure, or\na previous pressure reading at your altitude, in which case\nsubsequent altitude readings will be + or - the initial baseline.\nThis is done with the altitude() function.</p><p>Hardware connections:</p><p>- (GND) to GND\n+ (VDD) to 3.3V</p><p>(WARNING: do not connect + to 5V or the sensor will be damaged!)</p><p>You will also need to connect the I2C pins (SCL and SDA) to your\nArduino. The pins are different on different Arduinos:</p><p>Any Arduino pins labeled:  SDA  SCL\nUno, Redboard, Pro:        A4   A5\nMega2560, Due:             20   21\nLeonardo:                   2    3</p><p>Leave the IO (VDDIO) pin unconnected. This pin is for connecting\nthe BMP180 to systems with lower logic levels such as 1.8V</p><p>Have fun! -Your friends at SparkFun.</p><p>The SFE_BMP180 library uses floating-point equations developed by the\nWeather Station Data Logger project: http://wmrx00.sourceforge.net/</p><p>Our example code uses the \"beerware\" license. You can do anything\nyou like with this code. No really, anything. If you find it useful,\nbuy me a beer someday.</p><p>V10 Mike Grusin, SparkFun Electronics 10/24/2013\nV1.1.2 Updates for Arduino 1.6.4 5/2015\n*</p><p>/ Your sketch must #include this library, and the Wire library.\n// (Wire is a standard library included with Arduino.):</p><p>#include <sfe_bmp180.h>\n#include <wire.h>\n#include <softwareserial.h></softwareserial.h></wire.h></sfe_bmp180.h></p><p>// You will need to create an SFE_BMP180 object, here called \"pressure\":</p><p>SFE_BMP180 pressure;\nSoftwareSerial mySerial(7, 8); // RX, TX</p><p>#define ALTITUDE 1655.0 // Altitude of SparkFun's HQ in Boulder, CO. in meters</p><p>void setup()\n{\n  pinMode(5,OUTPUT);\n  digitalWrite(5,LOW);\n  mySerial.begin(57600);\n  mySerial.println(\"REBOOT\");</p><p>  // Initialize the sensor (it is important to get calibration values stored on the device).\ndelay(10000);\n  if (pressure.begin())\n    mySerial.println(\"BMP180 init success\");\n  else\n  {\n    // Oops, something went wrong, this is usually a connection problem,\n    // see the comments at the top of this sketch for the proper connections.</p><p>    Serial.println(\"BMP180 init fail\\n\\n\");\n    while(1); // Pause forever.\n  }\n}</p><p>void loop()\n{\n  char status;\n  double T,P,p0,a;</p><p>//-------------uncomment for altitude reading-------------//</p><p>  // If you want sea-level-compensated pressure, as used in weather reports,\n  // you will need to know the altitude at which your measurements are taken.\n  // We're using a constant called ALTITUDE in this sketch:\n  \n//  Serial.println();\n//  Serial.print(\"provided altitude: \");\n//  Serial.print(ALTITUDE,0);\n//  Serial.print(\" meters, \");\n//  Serial.print(ALTITUDE*3.28084,0);\n//  Serial.println(\" feet\");\n  \n  // If you want to measure altitude, and not pressure, you will instead need\n  // to provide a known baseline pressure. This is shown at the end of the sketch.</p><p>  // You must first get a temperature measurement to perform a pressure reading.\n  \n  // Start a temperature measurement:\n  // If request is successful, the number of ms to wait is returned.\n  // If request is unsuccessful, 0 is returned.</p><p>  status = pressure.startTemperature();\n  if (status != 0)\n  {\n    // Wait for the measurement to complete:\n    delay(status);</p><p>    // Retrieve the completed temperature measurement:\n    // Note that the measurement is stored in the variable T.\n    // Function returns 1 if successful, 0 if failure.</p><p>    status = pressure.getTemperature(T);\n    if (status != 0)\n    {\n      // Print out the measurement:\n      mySerial.print(\"temperature: \");\n      mySerial.print(T,2);\n      mySerial.print(\" deg C, \");\n \n      \n      // Start a pressure measurement:\n      // The parameter is the oversampling setting, from 0 to 3 (highest res, longest wait).\n      // If request is successful, the number of ms to wait is returned.\n      // If request is unsuccessful, 0 is returned.</p><p>      status = pressure.startPressure(3);\n      if (status != 0)\n      {\n        // Wait for the measurement to complete:\n        delay(status);</p><p>        // Retrieve the completed pressure measurement:\n        // Note that the measurement is stored in the variable P.\n        // Note also that the function requires the previous temperature measurement (T).\n        // (If temperature is stable, you can do one temperature measurement for a number of pressure measurements.)\n        // Function returns 1 if successful, 0 if failure.</p><p>        status = pressure.getPressure(P,T);\n        if (status != 0)\n        {\n          // Print out the measurement:\n          mySerial.print(\"absolute pressure: \");\n          mySerial.println(P,2);</p><p>          // The pressure sensor returns abolute pressure, which varies with altitude.\n          // To remove the effects of altitude, use the sealevel function and your current altitude.\n          // This number is commonly used in weather reports.\n          // Parameters: P = absolute pressure in mb, ALTITUDE = current altitude in m.\n          // Result: p0 = sea-level compensated pressure in mb</p><p>//          p0 = pressure.sealevel(P,ALTITUDE); // we're at 1655 meters (Boulder, CO)\n//          Serial.print(\"relative (sea-level) pressure: \");\n//          Serial.print(p0,2);\n//          Serial.print(\" mb, \");\n//          Serial.print(p0*0.0295333727,2);\n//          Serial.println(\" inHg\");</p><p>          // On the other hand, if you want to determine your altitude from the pressure reading,\n          // use the altitude function along with a baseline pressure (sea-level or other).\n          // Parameters: P = absolute pressure in mb, p0 = baseline pressure in mb.\n          // Result: a = altitude in m.</p><p>//          a = pressure.altitude(P,p0);\n//          Serial.print(\"computed altitude: \");\n//          Serial.print(a,0);\n//          Serial.print(\" meters, \");\n//          Serial.print(a*3.28084,0);\n//          Serial.println(\" feet\");\n        }\n        else Serial.println(\"error retrieving pressure measurement\\n\");\n      }\n      else Serial.println(\"error starting pressure measurement\\n\");\n    }\n    else Serial.println(\"error retrieving temperature measurement\\n\");\n  }\n  else Serial.println(\"error starting temperature measurement\\n\");</p><p>  delay(100);  // Pause.\n}</p>", "step_imgs": ["https://cdn.instructables.com/FQK/WP87/J16P28HO/FQKWP87J16P28HO.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 3: Writing Code"}, {"step": 4, "steps_text": "Setting up the communication took a lot longer than it shouldWhen setting up my communication I followed this great instructable https://www.instructables.com/id/Radio-915MHz-3dr-...The main differences I had to make were to accommodate for the clone Arduino Nano. Following his steps are fine for a larger board such as an Uno or Mega but for the Nano I would recommend using the software serial library so you are not messing about trying to share the serial communication with the USB. This way you can test the functionality while still being connected to your computer.The orientation of your aerials is important. They should be parallel, not perpendicular to each other =          <== GOOD+          <== BAD", "step_imgs": ["https://cdn.instructables.com/FMO/OBXM/J140DX1H/FMOOBXMJ140DX1H.LARGE.jpg"], "step_title": "Step 4: Setting Up Communication to Board"}, {"step": 5, "steps_text": "Before getting your balloons scope out a suitable location and day.Fortunately, I had a great location close to where I live, but I made the mistake of not picking a perfectly still day.I would recommend making a checklist of thing you will need, something like this:Fully charged Laptop  Camera and camera batteries  USB telemetry dongle (I forgot this initially)  Payload  Helium Balloons  Spare string, tape, rubber bands, batteries  a friend to help you navigate", "step_imgs": ["https://cdn.instructables.com/FV0/UP9L/J16P28HI/FV0UP9LJ16P28HI.LARGE.jpg"], "step_title": "Step 5: Getting Ready for Launch Day"}, {"step": 6, "steps_text": "before getting Helium, Predict how may balloons you will need. 1 Litre of helium will lift approximately 1 gram. A standard balloon will hold approximately 10 liters of Helium. Hence, a single balloon should lift around 10 grams. My payload weighed approximately 38 grams. I initially got 5 to be safe and found that it was just enough to start taking it up. Consequently, I got 6 as I wanted it to move up reasonably quickly. In hindsight, I should have got more to be safe but helium is expensive!Also, I would strongly recommend that you get plastic balloons which will hold the helium for as long as possible.The color you choose is also important. ", "step_imgs": ["https://cdn.instructables.com/FE8/H7OC/J16P28FU/FE8H7OCJ16P28FU.LARGE.jpg"], "step_title": "Step 6: Getting Helium Balloons"}, {"step": 7, "steps_text": "The worst thing that I could conceive happening was my balloons coming lose with my payload attached.Make sure your payload is attached to your line and not the balloons. You also don't want your payload to pop your balloons (the nano pins are sharp). Consider attaching your payload a safe distance from the balloon.", "step_imgs": ["https://cdn.instructables.com/F2L/OJTU/J16P28I8/F2LOJTUJ16P28I8.LARGE.jpg"], "step_title": "Step 7: Mounting Payload to Balloon"}, {"step": 8, "steps_text": "It's nearly the moment of truth!Before launch, do one last check:Is my payload battery connected?  Is communication established?  Is the camera running?  is the launch site clear?  is the payload securely attached?  is my laptop charged?  are the conditions good?  are my aerials as aligned as best as they can?  are you feeling calm and in control of the situation?  are you prepared for the consequences of what you will/will not find?You are ready to launch.", "step_imgs": ["https://cdn.instructables.com/F5S/RZ9K/J16P28HB/F5SRZ9KJ16P28HB.LARGE.jpg"], "step_title": "Step 8: Pre Launch Checklist"}, {"step": 9, "steps_text": "", "step_imgs": ["https://cdn.instructables.com/FYO/S79U/J16P28IM/FYOS79UJ16P28IM.LARGE.jpg", "https://cdn.instructables.com/FIL/RXAF/J140DX3H/FILRXAFJ140DX3H.LARGE.jpg", "https://cdn.instructables.com/FZE/XA28/J16P28IA/FZEXA28J16P28IA.LARGE.jpg", "https://cdn.instructables.com/FEO/8VR3/J16P28IW/FEO8VR3J16P28IW.LARGE.jpg"], "step_title": "Step 9: Lift Off!!"}, {"step": 10, "steps_text": "Don't be sad if it doesn't work, You are pushing the boundaries of truth exploration. No one expects you to find the truth on your first try. it's more important you keep trying to find it than actually finding it.", "step_imgs": ["https://cdn.instructables.com/FU8/CILT/J140DX3X/FU8CILTJ140DX3X.LARGE.jpg", "https://cdn.instructables.com/F4E/ERQD/J16P28NA/F4EERQDJ16P28NA.LARGE.jpg"], "step_title": "Step 10: Be OK With the Outcome"}, {"step": 11, "steps_text": "Keep trying and congratulations for giving it a shot.", "step_imgs": ["https://cdn.instructables.com/FKS/4KHL/J16P28N9/FKS4KHLJ16P28N9.LARGE.jpg"], "step_title": "Step 11: Repeat Till You Find It"}], "channel": "Arduino"}, {"category": "technology", "description": "Long story short: I needed to sample an analog signal with as many bits and samples per second as possible but without breaking the bank. I also needed the sampled data to be stored on my PC.In this instructable I will show you how to do just that for less than $10 per one DAQ unit.If you want to know more WHY I built this, check out my GitHub page about the Meteor Radiometer project.", "title": "Arduino 16-bit 500SPS Dual Channel DAQ", "url": "https://www.instructables.com/id/Arduino-16-bit-500SPS-Dual-Channel-DAQ/", "section": "technology", "steps": [{"step": 1, "steps_text": "These are the parts we'll need. I have provided the links for the cheapest ones I could find (which I bought and they work!).Parts (from ebay):Arduino UNO clone: LINKArduino UNO ProtoShield: LINK (note: if you buy one from another retailer, be sure it looks exactly like the one on the image!)AD7705 analog-to-digital converter board: LINKScrew terminals: LINKA few pieces of wire (I sacrificed one Dupont wire, its nice and thin)Equipment:MultimeterSoldering ironSolderPliers, a small screwdriver", "step_imgs": ["https://cdn.instructables.com/FTA/S0KA/IFR689S8/FTAS0KAIFR689S8.LARGE.jpg"], "step_title": "Step 1: Parts & Equipment"}, {"step": 2, "steps_text": "This ADC board is great because you can sample an analog signal with 16 bits at 500 samples per second! It also has a built-in gain control, filters, etc. But first we need to properly connect it.The ADC board comes with yellow piece of 4 pin headers which needs to be soldered to the ADC board as well as the ProtoShield.Take the ProtoShield and put it's top side up (the side with female pin headers). Place the yellow pin header as indicated on the first image. It is important to position it in the right spot - one row below the top row of ProtoShield pin holes, and such that the columns it is covering are without any markings.The pins on the yellow piece are of 2 different lengths with respect to the yellow plastic. Make sure that the shorter pins are on top.Put the ADC board on the ProtoShield - align holes on the ADC board with pins from the yellow pin header.Solder the pinsTurn the ProtoShield upside down and solder the ADC board to the ProtoShield", "step_imgs": ["https://cdn.instructables.com/F32/0WOS/IFR689TO/F320WOSIFR689TO.LARGE.jpg", "https://cdn.instructables.com/FU7/GA68/IFR689VJ/FU7GA68IFR689VJ.LARGE.jpg", "https://cdn.instructables.com/F4R/0Q08/IFR689W9/F4R0Q08IFR689W9.LARGE.jpg", "https://cdn.instructables.com/FIU/GQVZ/IFR689WA/FIUGQVZIFR689WA.LARGE.jpg", "https://cdn.instructables.com/F2N/N39N/IFR689WZ/F2NN39NIFR689WZ.LARGE.jpg"], "step_title": "Step 2: Soldering the ADC Board to the ProtoShield"}, {"step": 3, "steps_text": "To somehow connect your source of signal to the DAQ board, you need a few screw terminals.Use a marker to draw the path were we will run our signal lines from the board to the screw terminals. Draw the lines as they are shown on the first image. This will help us during soldering. Notice that there are also 2 lines connecting the VCC and GND from the ProtoShield to the ADC board!Turn the ProtoShield to its top side and place the screw terminals as it is shown on the second image. Be sure that the inputs of the terminal (big holes) are facing outward. The third image shows the bottom side of the ProtoShield with screw terminals in place.Solder the terminals.", "step_imgs": ["https://cdn.instructables.com/F0R/47DM/IFR689X2/F0R47DMIFR689X2.LARGE.jpg", "https://cdn.instructables.com/FJ3/6S23/IFR689XS/FJ36S23IFR689XS.LARGE.jpg", "https://cdn.instructables.com/FMI/WRC7/IFR689XT/FMIWRC7IFR689XT.LARGE.jpg", "https://cdn.instructables.com/F4A/Y9EF/IFR689YI/F4AY9EFIFR689YI.LARGE.jpg"], "step_title": "Step 3: Soldering Screw Terminals"}, {"step": 4, "steps_text": "Now the hard... ahem... \"fun\" part. We need to connect the pins of the ADC to the pins of the screw terminals. We can do this using some wires, but I have chosen to do this with solder. So take some solder (in form of a thin wire), solder one end to the ADC pin (hold the solder wire on the little ball of solder until it cools), then align the wire with the black marker line we drew. Cut the solder with the soldering iron and solder the free end to the screw terminal pin.You will notice that you'll have to make a 90 deg angle turn on the second pin. I recommend you first make a small ball of solder on every 90 degree turn point and solder it from one point to the other. Once you finish soldering the second pin, you should have it looking like mine (second image).Testing time! Now to see if we did a proper job soldering. Use your multimeter in the \u2018Continuity\u2019 mode (it should produce a sound when you touch the two probes together). Check if there is a connection between the AIN2+ pin and the left input of the screw terminal unit at the right. Now check if there is a connection between the AIN2- pin and the right input of the screw terminal unit at the right. Finally, make sure there is NO connection between those two pins. If there IS a connection, you must find where the two solders are touching and remove that piece of solder.If you did things right, I recommend you use your marker to write on the screw terminal which input is which (fourth image).", "step_imgs": ["https://cdn.instructables.com/FN3/7ZCJ/IFR689YK/FN37ZCJIFR689YK.LARGE.jpg", "https://cdn.instructables.com/F42/I333/IFR689ZB/F42I333IFR689ZB.LARGE.jpg", "https://cdn.instructables.com/F6D/VPBF/IFR68A00/F6DVPBFIFR68A00.LARGE.jpg", "https://cdn.instructables.com/FU6/ZNNW/IFR68A01/FU6ZNNWIFR68A01.LARGE.jpg"], "step_title": "Step 4: Soldering Signal Lines 1"}, {"step": 5, "steps_text": "Do the same thing for the AIN1 terminal. This one can be a bit tricky as it has more 90 degree turns.Take a look at the first image how I put little drops of solder on the 90 degree turn points. This will help you align the wires.When you are done, test the pins as you did in the previous step. NOTE: Do not be alarmed if the AIN1- and AIN2- are connected, it's fine. They are all connected to the GND.Finally, write the AIN1+ and AIN1- in the screw terminal and you are good to go!", "step_imgs": ["https://cdn.instructables.com/FZM/VZ57/IFR68A0V/FZMVZ57IFR68A0V.LARGE.jpg", "https://cdn.instructables.com/F26/H4XH/IFR68A0W/F26H4XHIFR68A0W.LARGE.jpg", "https://cdn.instructables.com/F1I/5NPH/IFR68A1N/F1I5NPHIFR68A1N.LARGE.jpg"], "step_title": "Step 5: Soldering Signal Lines 2"}, {"step": 6, "steps_text": "Before we set out soldering with real wires, we need to connect the ADC board to power lines. There are two: GND and VCC (i.e. +5V). The good thing about this ProtoShield is that it has them available quite close to our ADC power pins.See the first image and solder the power pins.Finally, test if they are properly connected.", "step_imgs": ["https://cdn.instructables.com/FXR/QTRN/IFR68A1O/FXRQTRNIFR68A1O.LARGE.jpg", "https://cdn.instructables.com/F5C/GOLS/IFR68A3T/F5CGOLSIFR68A3T.LARGE.jpg"], "step_title": "Step 6: Soldering GND and VCC"}, {"step": 7, "steps_text": "ADC needs to talk with Arduino somehow. I won't get into details how they actually talk (you can read about it on Wikipedia), I'll just show you what you need to solder.We'll need to solder 4 ADC pins to 4 ProtoShield pins:Pin 10 to CSPin 11 to DINPin 12 to DOUTPin 13 to SCKThere is a little legend on the ADC board to show you which ADC pin is which. When you turn the board on the other side it's a bit difficult to know. I have attached images to help you with soldering.Notice when I'm soldering CS and DIN: I have first soldered a wire to CS and a wire to Pin 11, and then soldered them to their respective pins. This is useful as it allows you to solder with one side free, instead of soldering between 2 pins.Finally, test that you have correctly soldered everything.", "step_imgs": ["https://cdn.instructables.com/F4V/P98O/IFR68A4K/F4VP98OIFR68A4K.LARGE.jpg", "https://cdn.instructables.com/FHY/VFK6/IFR68A4L/FHYVFK6IFR68A4L.LARGE.jpg", "https://cdn.instructables.com/FPZ/TTXR/IFR68A5B/FPZTTXRIFR68A5B.LARGE.jpg", "https://cdn.instructables.com/F7Y/OSQ3/IFR68A5E/F7YOSQ3IFR68A5E.LARGE.jpg", "https://cdn.instructables.com/FCC/U550/IFR68A67/FCCU550IFR68A67.LARGE.jpg", "https://cdn.instructables.com/F4Y/S4QW/IFR68A6W/F4YS4QWIFR68A6W.LARGE.jpg", "https://cdn.instructables.com/FMA/5NUY/IFR68A71/FMA5NUYIFR68A71.LARGE.jpg", "https://cdn.instructables.com/FWH/K01O/IFR68A8I/FWHK01OIFR68A8I.LARGE.jpg"], "step_title": "Step 7: Soldering ADC Communication Lines"}, {"step": 8, "steps_text": "If you did everything right, you should have your DAQ shield ready for a real test. Connect the shield with the Arduino.", "step_imgs": ["https://cdn.instructables.com/FOU/6SPP/IFR68A8N/FOU6SPPIFR68A8N.LARGE.jpg"], "step_title": "Step 8: Hardware Done!"}, {"step": 9, "steps_text": "To test the DAQ shield, I have decided to use a simple potentiometer.A potentiometer has 3 pins - connect the leftmost to +5V, the rightmost to GND and the middle to the AIN1+ on the DAQ shield.Connect the Arduino to your PC with an USB cable.OPTIONAL: If you still don't have the Arduino drivers installed and can't find them for your Arduino 340P clone (i.e. the one I recommended), see this LINK.Several things can happen when you connect the Arduino to your PC:a) absolutely nothingb) Arduino and/or DAQ shield release a puff of blue smokec) Arduino and/or DAQ shield catches fireIf nothing happens, you may be on the road to success. This would mean the drivers are properly installed and you have soldered everything right. There is an off chance something is not properly connected - but you should have caught that if you did the testing as you were supposed to.Now, regarding b) and c): depending on the severity of your situation, you should probably buy new parts and start from scratch. Or in extreme cases, contact your local fire department.", "step_imgs": ["https://cdn.instructables.com/FZN/FI3V/IFR68AA0/FZNFI3VIFR68AA0.LARGE.jpg", "https://cdn.instructables.com/FOH/ZOWZ/IFR68AA5/FOHZOWZIFR68AA5.LARGE.jpg"], "step_title": "Step 9: Preparing the Test"}, {"step": 10, "steps_text": "I will presume a basic knowledge of using the Arduino platform. If this is the first time you are working with Arduino, you will surely find this instructable very helpful.To use the DAQ shield with my software, you will need to install a few software packages.For using the Arduino:Arduino IDE - most likely you are running Windows, so download the Windows Installer and install itmodified AD770X libraryThanks to Kerry D. Wong, we have a functional library for using the AD7705 ADC board with Arduino. I have slightly modified this library to use 500 samples per second and you have it attached to this post.Download the AD770X.zip and unpack itCopy the unpacked folder to My Documents/Arduino/LibrariesDownload this file: LINKUnpack it and open the file: MeteorRadiometer-master\\Arduino\\MeteorRadiometerArduino\\MeteorRadiometerArduino.inoUpload this Arduino sketch to your Arduino device.Make note on which COM port your Arduino is connected on (e.g. COM4).You are just one step away from sampling the potentiometer signal!Extra:If you take a look at the Arduino sketch you uploaded, you will notice that when it starts sending the data to PC via serial, it also turns the digital pin 8 on. I used this to control a relay. Currently it has no purpose, but maybe you have some idea what to use it for. Pin 8 is turned off when the DAQ stops recording.", "step_imgs": ["https://cdn.instructables.com/FQY/J802/IFSJJ4TI/FQYJ802IFSJJ4TI.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 10: Installing Arduino Software and AD770X Library"}, {"step": 11, "steps_text": "To use the DAQ shield you will need to have Python installed (+ a few Python libraries).Here is the complete list:Python 2.7Python libraries:MatplotlibNumpyScipyPySerialInstalling Python + libraries:To easily install everything you need, download and install Anaconda Python 2.7. That's it, you're done.If you already have Python installed, but not the Anaconda version, I would recommend you google how to install any libraries you may be missing.Extra:I don't like Python's original IDLE. Some people prefer to code in Eclipse, but I find it too cumbersome. So I use Sublime. It's lightweight and has everything I need.", "step_imgs": ["https://cdn.instructables.com/FLR/SQ41/IFSJJ8WA/FLRSQ41IFSJJ8WA.LARGE.jpg"], "step_title": "Step 11: Installing Python and Additional Libraries"}, {"step": 12, "steps_text": "It's time for a final test.Here's what to do:Download the ZIP file in the attachment.Unpack it and open the readArduino.py file for editing.Locate this line of code:ser = serial.Serial('COM4', 115200) Remember the COM port of your Arduino? My COM port is COM4. Modify the previous line accordingly if yours is different.Run the script! (F5 is using Python IDLE of Ctrl+B if you are using Sublime)Start turning the potentiometer randomly.It will run for 10 seconds and at the end it will show you how the input signal changed on a graph!Bravo, you did it, it works!", "step_imgs": ["https://cdn.instructables.com/FEU/5OOB/IFSJJDXZ/FEU5OOBIFSJJDXZ.LARGE.jpg", "https://cdn.instructables.com/FMD/PHTN/IFR68ABO/FMDPHTNIFR68ABO.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 12: Start Sampling!"}, {"step": 13, "steps_text": "OK, let's say you got the DAQ working and you hooked it up to a signal source of your preference.It fun to see the signal you just captured, but what if you want to record for a longer period of time and leave the DAQ unattended?Recording:Take a look at the ZIP file from the previous step. There is a file called radiometerRecord.py. In that file there are several important lines of code to modify:# Record duration in hours \nrecord_duration = 8 #hrs \n\n# Duration of a single time block in seconds \ndata_block_time = 10.24 #s\nWith record_duration you define how many hours you want the DAQ to record. It will store the data to a CSV file, and every data point will be time stamped. With data_block_time you define how many samples will be in one CSV file. E.g. you want one file per minute then you define data_block_time to be 60.Run the script and start recording!Plotting the data:So you got yourself some CSV files that were recorded by the radiometerRecord.py script and you want to see what was actually recorded. This is where the radiometerPlot.py script comes in. It plots the data from the CSV files and stores the results as PNG images.It has several important lines of code that will have to be modified:# Where are the CSV files relative to the scriptcsv_directory = '2015082223 Pula' \n\n# Directory where to output the plots\nplot_dir = 'plots' So after the recording you transferred the CSV files to some folder (e.g. 'test1'). You must tell the plotting script where to look for those CSV files by using the csv_directory variable (e.g. csv_directory = 'test1').In what folder do you want the script to plot the results in? Use the plot_dir variable to tell it, although you can just leave the default value 'plots'.Run the script and you should have your data plotted!", "step_imgs": ["https://cdn.instructables.com/F4F/8FJ8/IFSJJR2T/F4F8FJ8IFSJJR2T.LARGE.jpg"], "step_title": "Step 13: Recording and Plotting"}, {"step": 14, "steps_text": "Maybe you won't need such big sampling rate or your signal is very weak and you need to amplify it. In those cases, you will have to modify the  AD770X library and re-upload that Arduino sketch.Open the AD770x.cpp in My Documents/Arduino/Libraries/AD770X. There is a piece of code at the bottom of the file:void AD770X::init(byte channel) {<br>    init(channel, CLK_DIV_1, BIPOLAR, GAIN_1, UPDATE_RATE_500);\n}To modify the number of samples per second, you have to change the UPDATE_RATE_500 constant. Here's what options are available:UPDATE_RATE_20UPDATE_RATE_25UPDATE_RATE_50UPDATE_RATE_60UPDATE_RATE_100UPDATE_RATE_200UPDATE_RATE_250UPDATE_RATE_500If you need to modify the gain, here are the options:GAIN_1GAIN_2GAIN_4GAIN_8GAIN_16GAIN_32GAIN_64GAIN_128When you are done modifying, save the  AD770x.cpp file and re-upload that Arduino sketch.IMPORTANT:The DAQ is currently only using the AIN1 input. If you want to use the AIN2, you will have to modify both the Arduino sketch and the Python scripts!", "step_imgs": [], "step_title": "Step 14: Modifying Sampling Rate and Gain"}, {"step": 15, "steps_text": "That's it, thank you for reading my instructable! I have been following this site for more than 9 years now (I remember the good ol' Weekend Builder newsletter) and have finally decided to make one instructable.There are perhaps some details I have unintentionally left out, so feel free to ask questions in the comments!", "step_imgs": [], "step_title": "Step 15: Final Thoughts"}], "channel": "Arduino"}, {"category": "technology", "description": "I bought my first iPad 2 years ago. A year later I bought an iPad2 and a little later an iPod touch as my \u201ciPad to go\u201d (it\u2019s just more pocketable).\nHaving downloaded about 70 apps over time (free and paid apps), I found that some apps are doing exactly what I want, some overfulfill my needs and some just didn\u2019t work as I expected.\nBut, after 2 years of app consumption, I finally got the idea that I wanted to have apps exactly how I wanted them. So I decided that I want to program an app.\nSo I challenged my self \u2013 as a personal DIY-Project \u2013 to learn iPhone programming.\nThis instructable will show off my finished app \u201cGas By Numbers\u201d (a gas calculator), it\u2019s functions, how to use it, and how I became an \u201capp-developer\u201d from scratch.\nMy gas calculator follows the steps I undertake when I fill up my car. First I note down the mileage, then I start refilling my car and already note the gas price while refilling. Finally, I enter the amount of gas I refilled right after hanging up the nozzle of the pump. While I go in to pay my bill, I already know my gas mileage.\nThe first bullet points will show how to use the app itself (always headed off as App-Step X). Below I will comment on some programming features needed or additional thoughts that went into programming the specific UIView (always headed off with Programming).\nI have quoted the \u201capp-developer\u201d because this is my first app and there\u2019s so much more I can learn from here.To complement this instructable, I especially tweaked my app so I can offer a free download on iTunes with \"free Gas By Numbers\".\nIn the free version I have stripped off the data collecting part of my gas calculator, and the calculation of the gas consumption and cost of the daily commute. So the free app actually resembles the program how I initially wanted it to be just for my own use.\nLink to the free app:http://itunes.apple.com/us/app/free-gas-by-numbers-gas-mileage/id550854967?mt=8\nLink to the paid app:http://itunes.apple.com/us/app/gas-by-numbers/id531541048?mt=8\nAll the other stuff within the paid version came later to mind as I was thinking about distributing my app via iTunes (think about localizing an app for different countries, adding functions that may be interesting for potential users, etc.).\nThe last step will tell you what you need to start programming for iPhone and some (hopefully useful) hints and tips to start learning programming.", "title": "My First Own IOS App - Gas by Numbers - a Gas Mileage Calculator", "url": "https://www.instructables.com/id/My-first-own-iOS-app-Gas-By-Numbers-a-gas-mile/", "section": "technology", "steps": [{"step": 1, "steps_text": "App-Step 1:\n\t\tIn the first view, tap the text box to pull up the on screen keyboard and enter the number of miles driven since you last refilled your gas tank.\n\t\tAfter filling in your driven miles, hit the next button to get to the next screen.Programming:\n\t\tAll visible windows a user will see are called UIViews. You can put all your code into the UIViews class.\n\t\tFirst I wanted to add all user input fields on the first UIView (maybe even the results of the gas mileage calculation). But I soon found out that the space on a UIView is very restricted and that the User-Interface (UI) will be much too crowded as to be a pleasure to use for a user.\n\t\tThe problem I encountered first was, that I didn't know how to hand over the inserted mileage to the next UIView. So I needed some temporary storage for that data. The rescue to this problem if you want to store small chunks of data is to use the so called NSUserDefaults in Xcode.\n\t\tTo ensure that the user entered a valid number in the distance text box, I had to check the number after it was inserted. All keyboard input is represented as a NSString in Xcode. So the program doesn't even know it's a number. To ensure the user didn't enter a number with two colons, for example, I casted the string into the so called NSNumber format. This way, you can error check the input.\n\t\tTo ensure the user cannot enter letters instead of numbers, you can specify to only show a number pad within the code.\n\t\tNSNumber will also take the locale settings into account, making sure a european user has a colon as decimal separator while the US separator is a point.\n\t\tIf the error check results in an error, a so called UIAlertView is programmed. This is a nifty little line of code, where you specify the header of a pop-up message, the message itself and some OK, Cancel or \"Take action\" buttons.", "step_imgs": ["https://cdn.instructables.com/FTI/320Z/H4ZN4XN8/FTI320ZH4ZN4XN8.LARGE.jpg"], "step_title": "Step 1: Entering the Driven Distance"}, {"step": 2, "steps_text": "App-Step 2:\n\t\tIn the second view, tap the text box right beside the label \"Gas amount\". Enter the amount of gas you have refilled at the gas station.\n\t\tEntering the gas price works the same way, although this step is optional.\n\t\tIf no gas price was entered, a pop-up will ask you if you really want to skip this step or if you want to go back and enter the gas price.Programming:\n\t\tThe visible part of the User-Interface can be set up with a part of XCode called Interface builder. It's like a graphics editor where you layout the different user interface elements. It's a great way to get your first app started without much fuzz. The worst part is when you actually have to link the elements to your code.\n\t\tImages and Labels: the words \"Gas amount\" and \"Gas price\" are UILabels. To just display that text, place a label on the UIView, edit the text and you're done. Should you want to dynamically change the text later, you still have to define properties in the UIView's header file and link the labels to those properties within your code.\n\t\tThe little gray help texts (gal., $/gal.) are actually help descriptions you can set up in interface builder. Once you want to create different texts for different countries (so called localization of your app), you need create properties for the text boxes to display different strings, depending on the phone's country settings. You can also just make localized versions of your visible user interface, but I found it easier to just use the properties and have to create different strings rather than having to enter different text into all those text box help descriptions.\n\t\tThe text boxes need to be linked to the header file of the UIView anyway, because tapping a text box will perform the action of pulling up the on screen keyboard.\n\t\tTapping the Next button writes the values from the text boxes to the NSUserdefaults so that all input values are then available to calculate your MPG within the next UIView. The tapping action will also call the next UIView to appear.", "step_imgs": ["https://cdn.instructables.com/FMW/35SE/H4ZN4XN9/FMW35SEH4ZN4XN9.LARGE.jpg"], "step_title": "Step 2: Entering the Amount of Gas Refilled and the Gas Price"}, {"step": 3, "steps_text": "App-Step 3:\n\t\tReview the data you entered in the Basic data table. Should you find an error within the values you entered, you can tap any of them to bring up a pop-up to change any value.\n\t\tFuel efficiency is the value for miles per gallon, calculated from your input.\n\t\tConsumption / 100 mi. shows how many gallons of gas you need to travel 100 miles and what you have to pay for those 100 miles.\n\t\tConsumption / Commute shows how many gallons of gas you need for your daily commute. This feature is not available in the free app. In the image, a value of 120 is shown, which is my daily trip to and home from work.\n\t\tIn the free version of my app, saving your data and reviewing older data summaries is not available.Programming:\n\t\tAll consumption data is being calculated when the UIView gets loaded. Sometimes things have to happen when the view is laying out subviews, or once it's appearing, etc. So there are different options. And sometimes it took me all evening to find out that a feature didn't work properly because I tried performing an action/function/method in the wrong section of code :-)\n\t\tThe picture shows a so called UITableView. You can have just one big list of items, or program it the way I have to show different sections. The first time I did a table view in XCode, it was quite confusing. It sometimes still is, but it's getting easier with every new table view programmed.\n\t\tA real big challenge was to hide the section of the table showing your daily commute.\n\t\tThe save button invokes a pop-up asking if you want to save the data you just entered with the current date or an older date. If you select \"Other date\" within the pop up, the pop-up's button will call a new so called modal UIView for entering a different date than the current date.\n\t\tOnce the save command within the app's code gets\u00a0called, all data that was written to the NSUserDefaults is casted as NSNumbers and saved within a file that gets set up the first time data is being saved. This file can later be exported as tab delimited text file for further processing with Excel or Pages.", "step_imgs": ["https://cdn.instructables.com/FM9/TMRZ/H4ZN4XNA/FM9TMRZH4ZN4XNA.LARGE.jpg"], "step_title": "Step 3: Reviewing Your Gas Mileage"}, {"step": 4, "steps_text": "App-Step:\n\t\tThe full version allows to save your gas mileage data for later review directly on your iPhone or iPod.\n\t\tIn a UITableView, I try to make all possible data available which can be calculated through the basic input values, including the date.\n\t\tIf a summary gets selected, a list of all previously data is being displayed with the option to group the data monthly, to show totals where suitable (e.g. total gas cost per month), total average or monthly averages. To select those options, every summary has three buttons at the bottom of the summary UIViews. The first one will group all data by month. The second button will sort all data ascending or descending, depending on whether smaller or bigger values are good. The \"good\" values are supposed to be at the top of the lists. The third button will show the average values (if data is grouped by month, you get monthly averages, if it's not grouped, you get the average out of all values).\n\t\tIn the settings UIView, Units for\u00a0US or Metric units are available. The daily commute value can be set and you can also set the preferences for displaying your data in summaries (e.g. whether or not you want to see your data grouped monthly)Programming:\n\t\tUnits are hard coded within my app. The app checks your local settings to see if your iDevice is set to metric or US units, but you can still set the other from this menu.\n\t\tCurrency symbols are taken from the iDevice settings. This way, in combination with the units, you always see the appropriate units for where you live. In the US, you have $/gallon, I have \u20ac/km. This is really handy, so even if you don't plan on localizing your app for different countries, set up units and currency with NSLocalized versions.\n\t\tIcons! Use easy to understand icons. Even if you have to put more effort into creating your app, take the time to draw your icons (don't just take them from the internet due to copyright issues). Translating your app gets much easier if you don't have to translate every button inscription. Whenever possible, try finding a good icon instead of using text.", "step_imgs": ["https://cdn.instructables.com/FM2/KVJ9/H4ZN4XNE/FM2KVJ9H4ZN4XNE.LARGE.jpg", "https://cdn.instructables.com/FM6/P7D2/H4ZN4XNJ/FM6P7D2H4ZN4XNJ.LARGE.jpg", "https://cdn.instructables.com/F5K/U3QF/H4ZN4XNX/F5KU3QFH4ZN4XNX.LARGE.jpg", "https://cdn.instructables.com/F4W/M44R/H4ZN4XNK/F4WM44RH4ZN4XNK.LARGE.jpg"], "step_title": "Step 4: Further Features of the Full Version"}, {"step": 5, "steps_text": "If you want to start programming for iOS you need:\nBare bones:\n(This allows to learn programming and simulating your app on your Mac)\n\t\tA Mac PC\n\t\tXCode (available for free as a Mac app)\n\t\tFree Apple developer account\nExtended:\n(This allows to put your app on your iDevice for testing and for distribution via iTunes)\n\n\t\tPaid Apple developer account\nWith jailbroken devices, there are ways to get your apps onto your iDevice with just the free developer account (just as a hint). So you may just give it a try if you're interested in making an app for your own iDevice.\nLearning to program takes quite some time. I started programming last October. I learned the basics until last January and started programming my app since then. I released my app in June. So it took me about 6-8 months to get where I'm today.\nIf you like to learn using a book, first get a book you can work with (depends on your preferences) and then try to get the version of XCode that was used for the book. Would I have known this front up, I could have shortened my learning time by around 2 months. Being a husband, father and full time employee, the time to learn something new is restricted. I need very calm surroundings, so my learning took place between about 10pm and 1am (when every one else was already asleep), whenever I felt I was up to the task (about 2-5 times per week).\nWhat was really frustrating first was, that most books I came across were not written for the version of XCode I ran on my MacBook. So specific example code from the books didn't work with my machine. Also, at the time I started learning, XCode introduced ARC (Automatic reference counting), which takes most of the \"keeping track of the objects you create\" away from you. So I learned a lot of stuff that's good to know, but stuff that wasn't really necessary to get started.\nThe best thing in my opinion is, to just get started and then learn something new every day as you go along.\u00a0\nI hope I could give some insight into iPhone programming and that I could encourage you to start learning something new if you stumbled over this instructable.", "step_imgs": [], "step_title": "Step 5: Final Words"}], "channel": "Apple"}, {"category": "technology", "description": "I started out with the goal of using a semi-automatic nerf gun to create a sentry gun. The idea was that if someone walks in front of the gun and is within a certain distance they would be pelted by nerf bullets. \u00a0This Idea came out of a game of Humans Vs. Zombies, I thought that it would be a lot easier if i had one of my guns programmed to shoot if someone was too close to a certain building. Thus I have started working on building a Nerf Sentry Gun. Round 1: Rotating Movement and LED On/OFF I started out by deciding to create the sweeping motion of the gun and then use a light turning on and off to mimic when the gun would be on/off (firing and not firing). \u00a0I used a Vex Ultrasonic Sensor to determine distance from gun to nearest object and I used a servo motor to control the motion of the gun.\u00a0 Round 2: Adding in Gun and having to Change Motion Controller I have Started working on adding in the gun to the circuit and product, however I have found that the Servo Motor is too weak to efficiently move the Gun back and forth. Thus I have had to change my motor from a Servo to a 12V Geared Dc Motor ( a Windshield Wiper Motor). Explanations on how to do so will be added when final product is working properly.\u00a0", "title": "Nerf Sentry Gun", "url": "https://www.instructables.com/id/Nerf-Sentry-Gun/", "section": "technology", "steps": [{"step": 1, "steps_text": "Here is what you will need in order to make the First step of creating an Arduino Controlled Sentry Gun 1 Vex Ultrasonic Sensor 1 Servo Motor 1 LED 1 Arduino MC with Breadboard 1 470 Ohm Resistor1 10-15 Jumper Wires", "step_imgs": ["https://cdn.instructables.com/FDO/H5LP/HOUG8NLX/FDOH5LPHOUG8NLX.LARGE.jpg", "https://cdn.instructables.com/FSV/S335/HOVUB9D8/FSVS335HOVUB9D8.LARGE.jpg", "https://cdn.instructables.com/FOS/YUFE/HOUFXNXP/FOSYUFEHOUFXNXP.LARGE.jpg", "https://cdn.instructables.com/F91/PQTZ/HOUG8NLW/F91PQTZHOUG8NLW.LARGE.jpg"], "step_title": "Step 1: What You Will Need"}, {"step": 2, "steps_text": " To Start off you need to connect arduino to breadboard, to do so connect the 5V pin on the arduino to the red rail on the breadboard and the ground pin on arduino to blue rail on breadboard. Next connect your Ultrasonic Sensor, Servo Motor and LED to the Arduino The Servo motor has a 3 pin connector that connects to the breadboard. the white wire pin connects to any of the PWM digital pins on the arduino ( I used pin 9 ). The red wire pin connects to 5V the red rail on bread board and the black wire connects to ground. The Vex ultrasonic Sensor has two 3 pin connections an INPUT signal and an OUTPUT signal. Both of these connections wire up identically to the servo motor, except the white wire pin can connect to any unused digital pins. Just remember which pin is the Input signal and which one is the OUTPUT signal. \u00a0I used pin 7 as OUTPUT and Pin 12 as INPUT. The LED connects to Ground on one side and any digital pin on the other. Use a 470Ohm resistor to connect led to the digital pin. Circuit Diagram is Attached for your convenience", "step_imgs": ["https://cdn.instructables.com/F9W/I02Y/HOUG6C8P/F9WI02YHOUG6C8P.LARGE.jpg"], "step_title": "Step 2: Circuitry"}, {"step": 3, "steps_text": "Now all you need to do is write the code to make all of these different components work together. First you begin with the Servo Sweep code from the Arduino Playground, which allows the servo to continually sweep in the way\u00a0 then you create a subroutine that finds the time it takes for an ultrasonic signal to be sent out and return to the input side of the sensor. Then it sets this value to a variable here is the example code\u00a0 \u00a0of how to do it digitalWrite(Trig_pin, LOW);\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(2); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(5); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW); \u00a0\u00a0\u00a0\u00a0\u00a0 duration = pulseIn(Echo_pin,HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.println(duration, DEC);\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(50); Then within the for loops of the sweep code create a while loop. that says when then\u00a0duration\u00a0value is below a certain number the servo pauses, LED Turns on, and you check the sensor value again.\u00a0 Completely commented Code of my project is attached /* Sentry Gun An Ultrasonic Sensor is continually scanning to find the distance to the nearest object based on this value the Servo motor stops(gun stops sweeping) and LED turns on, then checks sensor value again Circuit: Servo Motor is connected to Digital Pin 9 and Power Ground LED is connected to digital pin 13 Input of Ultrasonic sensor is connected to pin 12 Output is connected to digital pin 7; Created November 2013 by Krishna Peri modified December 2013 by KRishna Peri */ #include <Servo.h> #include <SoftwareSerial.h> //const int Trig_pin =\u00a0 7;\u00a0\u00a0 // Triggers Pulsoe for\u00a0 Ultrasonic Sensor const int Echo_pin= 12; // Recevies Echo for\u00a0 Ultrasonic Sensor int ledpin = 13; // led pin command pin //long duration; // Time it takes for pulse to bounce back to RIGHT Ultrasonic Sensor unsigned int duration = 1; // distance value for ultrasonic Servo motor;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Servo motor that controls int pos = 0;\u00a0\u00a0\u00a0 // variable to store the servo position int Dcmotor = 10; // does nothing right now void setup() { \u00a0 Serial.begin(9600);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set up Serial library at 9600 bps \u00a0 motor.attach(9);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Servo motor is attached to pin 9 \u00a0 // initialize the pulse pin as output: \u00a0 pinMode(Trig_pin, OUTPUT);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 // initialize the echo_pin pin as an input: \u00a0 pinMode(Echo_pin, INPUT); \u00a0 pinMode(ledpin,OUTPUT); \u00a0 pinMode(Dcmotor,OUTPUT); } void loop() \u00a0 {\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 for(pos = 0; pos < 180; pos += 2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // runs servo in steps of 5 from 0 to 180\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 { \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 motor.write(pos);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(15);\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor (); while (duration >10 && duration<400) {\u00a0 // if sensor detects something to close \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(30); //pauses servo \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(ledpin,HIGH);\u00a0 // turns on led \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor();\u00a0\u00a0 // checks if object is still to close \u00a0\u00a0\u00a0 \u00a0 } \u00a0 digitalWrite(ledpin,LOW);\u00a0 // turns off led \u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 for(pos = 180; pos>=1; pos-=2)\u00a0\u00a0 // same as previous for loop except is running in opposite direction\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 motor.write(pos);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(15); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor (); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while (duration >10 && duration<400) { \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(ledpin,HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(30); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor(); \u00a0\u00a0\u00a0 \u00a0\u00a0 } \u00a0\u00a0 digitalWrite(ledpin,LOW); \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0\u00a0 \u00a0 void Sensor() {\u00a0\u00a0\u00a0 // checks distance from sensor to nearest object straight ahead \u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW);\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(2); // delays \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, HIGH);\u00a0 //starts signal \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(5); // delay \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW); //stops signal \u00a0\u00a0\u00a0\u00a0\u00a0 duration = pulseIn(Echo_pin,HIGH);\u00a0 // checks what the value is \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.println(duration, DEC);\u00a0\u00a0 //prints out value \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(50);\u00a0 // delays \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }", "step_imgs": [], "step_title": "Step 3: The Code!!"}, {"step": 4, "steps_text": "The Final Product should Function as Shown in the Video Below!!", "step_imgs": ["/assets/img/pixel.png"], "step_title": "Step 4: Final Product"}], "channel": "Arduino"}, {"category": "technology", "description": "I started out with the goal of using a semi-automatic nerf gun to create a sentry gun. The idea was that if someone walks in front of the gun and is within a certain distance they would be pelted by nerf bullets. \u00a0This Idea came out of a game of Humans Vs. Zombies, I thought that it would be a lot easier if i had one of my guns programmed to shoot if someone was too close to a certain building. Thus I have started working on building a Nerf Sentry Gun. Round 1: Rotating Movement and LED On/OFF I started out by deciding to create the sweeping motion of the gun and then use a light turning on and off to mimic when the gun would be on/off (firing and not firing). \u00a0I used a Vex Ultrasonic Sensor to determine distance from gun to nearest object and I used a servo motor to control the motion of the gun.\u00a0 Round 2: Adding in Gun and having to Change Motion Controller I have Started working on adding in the gun to the circuit and product, however I have found that the Servo Motor is too weak to efficiently move the Gun back and forth. Thus I have had to change my motor from a Servo to a 12V Geared Dc Motor ( a Windshield Wiper Motor). Explanations on how to do so will be added when final product is working properly.\u00a0", "title": "Nerf Sentry Gun", "url": "https://www.instructables.com/id/Nerf-Sentry-Gun/", "section": "technology", "steps": [{"step": 1, "steps_text": "Here is what you will need in order to make the First step of creating an Arduino Controlled Sentry Gun 1 Vex Ultrasonic Sensor 1 Servo Motor 1 LED 1 Arduino MC with Breadboard 1 470 Ohm Resistor1 10-15 Jumper Wires", "step_imgs": ["https://cdn.instructables.com/FDO/H5LP/HOUG8NLX/FDOH5LPHOUG8NLX.LARGE.jpg", "https://cdn.instructables.com/FSV/S335/HOVUB9D8/FSVS335HOVUB9D8.LARGE.jpg", "https://cdn.instructables.com/FOS/YUFE/HOUFXNXP/FOSYUFEHOUFXNXP.LARGE.jpg", "https://cdn.instructables.com/F91/PQTZ/HOUG8NLW/F91PQTZHOUG8NLW.LARGE.jpg"], "step_title": "Step 1: What You Will Need"}, {"step": 2, "steps_text": " To Start off you need to connect arduino to breadboard, to do so connect the 5V pin on the arduino to the red rail on the breadboard and the ground pin on arduino to blue rail on breadboard. Next connect your Ultrasonic Sensor, Servo Motor and LED to the Arduino The Servo motor has a 3 pin connector that connects to the breadboard. the white wire pin connects to any of the PWM digital pins on the arduino ( I used pin 9 ). The red wire pin connects to 5V the red rail on bread board and the black wire connects to ground. The Vex ultrasonic Sensor has two 3 pin connections an INPUT signal and an OUTPUT signal. Both of these connections wire up identically to the servo motor, except the white wire pin can connect to any unused digital pins. Just remember which pin is the Input signal and which one is the OUTPUT signal. \u00a0I used pin 7 as OUTPUT and Pin 12 as INPUT. The LED connects to Ground on one side and any digital pin on the other. Use a 470Ohm resistor to connect led to the digital pin. Circuit Diagram is Attached for your convenience", "step_imgs": ["https://cdn.instructables.com/F9W/I02Y/HOUG6C8P/F9WI02YHOUG6C8P.LARGE.jpg"], "step_title": "Step 2: Circuitry"}, {"step": 3, "steps_text": "Now all you need to do is write the code to make all of these different components work together. First you begin with the Servo Sweep code from the Arduino Playground, which allows the servo to continually sweep in the way\u00a0 then you create a subroutine that finds the time it takes for an ultrasonic signal to be sent out and return to the input side of the sensor. Then it sets this value to a variable here is the example code\u00a0 \u00a0of how to do it digitalWrite(Trig_pin, LOW);\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(2); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(5); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW); \u00a0\u00a0\u00a0\u00a0\u00a0 duration = pulseIn(Echo_pin,HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.println(duration, DEC);\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(50); Then within the for loops of the sweep code create a while loop. that says when then\u00a0duration\u00a0value is below a certain number the servo pauses, LED Turns on, and you check the sensor value again.\u00a0 Completely commented Code of my project is attached /* Sentry Gun An Ultrasonic Sensor is continually scanning to find the distance to the nearest object based on this value the Servo motor stops(gun stops sweeping) and LED turns on, then checks sensor value again Circuit: Servo Motor is connected to Digital Pin 9 and Power Ground LED is connected to digital pin 13 Input of Ultrasonic sensor is connected to pin 12 Output is connected to digital pin 7; Created November 2013 by Krishna Peri modified December 2013 by KRishna Peri */ #include <Servo.h> #include <SoftwareSerial.h> //const int Trig_pin =\u00a0 7;\u00a0\u00a0 // Triggers Pulsoe for\u00a0 Ultrasonic Sensor const int Echo_pin= 12; // Recevies Echo for\u00a0 Ultrasonic Sensor int ledpin = 13; // led pin command pin //long duration; // Time it takes for pulse to bounce back to RIGHT Ultrasonic Sensor unsigned int duration = 1; // distance value for ultrasonic Servo motor;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Servo motor that controls int pos = 0;\u00a0\u00a0\u00a0 // variable to store the servo position int Dcmotor = 10; // does nothing right now void setup() { \u00a0 Serial.begin(9600);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set up Serial library at 9600 bps \u00a0 motor.attach(9);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Servo motor is attached to pin 9 \u00a0 // initialize the pulse pin as output: \u00a0 pinMode(Trig_pin, OUTPUT);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 // initialize the echo_pin pin as an input: \u00a0 pinMode(Echo_pin, INPUT); \u00a0 pinMode(ledpin,OUTPUT); \u00a0 pinMode(Dcmotor,OUTPUT); } void loop() \u00a0 {\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 for(pos = 0; pos < 180; pos += 2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // runs servo in steps of 5 from 0 to 180\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 { \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 motor.write(pos);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(15);\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor (); while (duration >10 && duration<400) {\u00a0 // if sensor detects something to close \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(30); //pauses servo \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(ledpin,HIGH);\u00a0 // turns on led \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor();\u00a0\u00a0 // checks if object is still to close \u00a0\u00a0\u00a0 \u00a0 } \u00a0 digitalWrite(ledpin,LOW);\u00a0 // turns off led \u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 for(pos = 180; pos>=1; pos-=2)\u00a0\u00a0 // same as previous for loop except is running in opposite direction\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 motor.write(pos);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(15); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor (); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while (duration >10 && duration<400) { \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(ledpin,HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(30); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor(); \u00a0\u00a0\u00a0 \u00a0\u00a0 } \u00a0\u00a0 digitalWrite(ledpin,LOW); \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0\u00a0 \u00a0 void Sensor() {\u00a0\u00a0\u00a0 // checks distance from sensor to nearest object straight ahead \u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW);\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(2); // delays \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, HIGH);\u00a0 //starts signal \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(5); // delay \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW); //stops signal \u00a0\u00a0\u00a0\u00a0\u00a0 duration = pulseIn(Echo_pin,HIGH);\u00a0 // checks what the value is \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.println(duration, DEC);\u00a0\u00a0 //prints out value \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(50);\u00a0 // delays \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }", "step_imgs": [], "step_title": "Step 3: The Code!!"}, {"step": 4, "steps_text": "The Final Product should Function as Shown in the Video Below!!", "step_imgs": ["/assets/img/pixel.png"], "step_title": "Step 4: Final Product"}], "channel": "Arduino"}, {"category": "technology", "description": "Well, in this instructable, I will teach you how to find the volume of a sphere. But first, the basics.Auch in diesem instructable, ich so finden Sie die Lautst\ufffdrke der eine Kugel lernen Sie. Aber Erstens, die Grundlagen.Eh bien, dans cette instructable, je vous enseigne comment trouver le volume d'une sph\ufffdre. Mais en premier, les notions de base.", "title": "Volume of a Sphere", "url": "https://www.instructables.com/id/Volume-of-a-Sphere/", "section": "technology", "steps": [{"step": 1, "steps_text": "A sphere (from Greek sphaira, \"globe, ball,\") is a symmetrical geometrical object. In non-mathematical usage, the term is used to refer either to a round ball or to its two-dimensional surface. In mathematics, a sphere is the locus of all points in three-dimensional space (R3) which are at distance r from a fixed point of that space, where r is a positive real number called the radius of the sphere. Thus, in three dimensions, a mathematical sphere is considered to be a two-dimensional spherical surface embedded in three-dimensional space, rather than the volume contained within it (which mathematicians would instead describe as a ball). The fixed point is called the center, and is not part of the sphere itself. The special case of r = 1 is called a unit sphere.Well, just to be simple, it is just a figure with no edged or corners, and the distance from the midpoint of the sphere to any place on the surface of the sphere is the exact same. Yes, this might seem like useless information at first, but you will need this knowledge later on.", "step_imgs": ["https://cdn.instructables.com/FF1/TKIL/FQJZHQK6/FF1TKILFQJZHQK6.LARGE.jpg"], "step_title": "Step 1: What the Gitmo Is a Sphere, Anyway?"}, {"step": 2, "steps_text": "V is the volume of the sphere (or what you would usually want to get). Pi stands for the circumference of a unit circle. The radius is the distance of the midpoint to any point on the surface of the sphere, which you need to cube to get your equation. In the next equation, i will tell you how to do this backwards.", "step_imgs": ["https://cdn.instructables.com/FW3/3E5X/FQJZHQKJ/FW33E5XFQJZHQKJ.LARGE.jpg"], "step_title": "Step 2: Finally...the Formula!"}, {"step": 3, "steps_text": "Another way to do this is if you have the volume, but you need to find out the radius. You can just divide by 3/4 and divide by pi. Cool, huh?", "step_imgs": ["https://cdn.instructables.com/FW3/3E5X/FQJZHQKJ/FW33E5XFQJZHQKJ.LARGE.jpg", "https://cdn.instructables.com/FJK/EC1Z/FQJZHQLN/FJKEC1ZFQJZHQLN.LARGE.jpg", "https://cdn.instructables.com/F8D/N5N4/FQJZHQLS/F8DN5N4FQJZHQLS.LARGE.jpg", "https://cdn.instructables.com/FZ1/475Q/FQJZHQLR/FZ1475QFQJZHQLR.LARGE.jpg"], "step_title": "Step 3: The Equation...Backward?"}, {"step": 4, "steps_text": "Problem 1: If the radius of a sphere is 2 cm, what is the volume?Problem 2: When the volume of a circle sphere is 32/3 pi?Problem 3: If the radius of a given sphere is 5, what is the half the volume?Answers: 1. 32/3 pi. For this problem, you need to include the cm3, because your answer would be wrong without it. Remember, radius cubed is the number and the sign after it(if there is one).2. 2.3. 250/3 pi.", "step_imgs": ["https://cdn.instructables.com/FZH/JG4Q/FQJZHQL6/FZHJG4QFQJZHQL6.LARGE.jpg"], "step_title": "Step 4: Now..Time for Some Problems!"}, {"step": 5, "steps_text": "1. Fill up a measuring cylinder or some other measuring instrument with water. The water should be sufficient to completely sink the sphere, but not so much that it will overflow when you submerge the sphere. Take the reading of the initial volume of water.2. Lower your sphere slowly into the water. If your sphere is less dense than water, tie it with a thin thread to a small heavy object such as a lump of plasticine or a standard weight.3. Take the new reading of the volume. This is the volume of the water + volume of sphere (+ volume of heavy object used to sink sphere).4. If you tied your sphere to a heavy object, untie it, and lower just the object back into the water. Take the new reading of the volume of water + volume of heavy object.5. Subtract either (volume of water + object + heavy weight) - (volume of water + heavy weight) OR (volume of water + object) - (volume of water). This answer is the volume of your sphere (or any object, really).P.S. Make sure you know the volume of the cylinder beforehand; else, you might find yourself stranded! To find the volume of a cylinder, go here. Be sure to use a precise measuring cylinder, or you might get the calculations wrong!", "step_imgs": ["https://cdn.instructables.com/FBE/YDN5/FQSWZV46/FBEYDN5FQSWZV46.LARGE.jpg"], "step_title": "Step 5: Well, What Else?"}, {"step": 6, "steps_text": "Water displacement can also be used this way.1. Fill a graduated cylinder to the top, making sure there is no water pushing up onto the water tension. Make the calculation of the total volume, and make sure you have another water cylinder. You can also have a pitcher with a spout sticking out of a side, and having another tray or pitcher ready to hold the extruded fluid.2. Place the object gently into the pitcher, and watch the water rise. it will rise above the peak, and then the surface tension will break when the water pours out. then, after you are sure that the water is done flowing, separate the two, and find the volume of water in the cylinder or pitcher which the water was displaced into.3. Voila! You have your volume.", "step_imgs": ["https://cdn.instructables.com/FIA/B8TD/FQSWZUWU/FIAB8TDFQSWZUWU.LARGE.jpg"], "step_title": "Step 6: Another Option?"}, {"step": 7, "steps_text": "My sources: http://www.dkimages.com/http://ww.fordhampprep.org/http://www.answers.yahoo.com/Join the community at Yahoo Answers! I got a lot of my info there, and it has never let me down.Thank you, all of my viewers! Hope I didn't let you down!", "step_imgs": ["https://cdn.instructables.com/FYG/M7A4/FQSWZV3Q/FYGM7A4FQSWZV3Q.LARGE.jpg"], "step_title": "Step 7: Well...More Generally Says It."}], "channel": "Science"}, {"category": "technology", "description": "Sensly is a portable pollution sensor capable of detecting the pollution levels in the air using its onboard gas sensors to collect information about the various gases present. This information can be fed directly to your smartphone for real-time push notification updates. Sensly uses industrial sensors that assure an accurate reading of the office, home, or work environment. Being aware of this data helps you to take action and bring the pollution levels down around you.Our team at Altitude Tech LTD are big fans of the Raspberry Pi mini computer. We\u2019re really keen to help the Raspberry Pi community develop their own Sensly device and start working on experiments whilst learning about different types of gases. We\u2019ve developed the Sensly Hat for the Raspberry Pi. This is the section for all you graph lovers out there. To buy or find out more https://store.altitude.tech/To set up your Sensly head over to our first instructables and follow the instructions up till step 6. Once calibrated run the update.sh script to take Sensly out of calibration mode.$ cd /path/to/Sensly_Install$ sudo ./update.sh", "title": "Plotly Graph for Sensly the Raspberry Pi Hat", "url": "https://www.instructables.com/id/Setting-Up-the-Sensly-HAT/", "section": "technology", "steps": [{"step": 1, "steps_text": "Next we need to create a plotly account. Head over to  plot.ly to do this.Once you\u2019re done you need to head over to the settings to get your username, API key and streaming tokens. You\u2019ll need 11 streaming tokens.", "step_imgs": ["https://cdn.instructables.com/FAC/KQ6Z/IZ6BM35R/FACKQ6ZIZ6BM35R.LARGE.jpg", "https://cdn.instructables.com/FEM/MZYW/IZ6BM35T/FEMMZYWIZ6BM35T.LARGE.jpg", "https://cdn.instructables.com/FPI/DP0D/IZ6BM360/FPIDP0DIZ6BM360.LARGE.jpg", "https://cdn.instructables.com/F0X/CM5W/IZ6BM365/F0XCM5WIZ6BM365.LARGE.jpg"], "step_title": "Step 1: Creating a Plotly Account and Getting Your Credentials "}, {"step": 2, "steps_text": "To set up Sensly to log directly to plotly we need to first of all download the required files. These can be found at  https://github.com/Altitude-Tech/Sensly_Plotly,  to download these files on your pi, open the terminal and type the command$ git clone  https://github.com/Altitude-Tech/Sensly_PlotlyOnce you get your API Keys and Streaming Tokens we need to put these into your config.json file which is found in the Sensly Plotly file you downloaded at the start of this instructable.$ sudo nano /Path/To/Sensly_Plotly/config.jsonAdd your username, API_Key and streaming tokens to the file", "step_imgs": ["https://cdn.instructables.com/FYZ/43BM/IZ6BM36G/FYZ43BMIZ6BM36G.LARGE.jpg"], "step_title": "Step 2: Update the Config.json File"}, {"step": 3, "steps_text": "Next, we need to ensure that you have put the R0 values you obtained during calibration into the Sensly_Plotly.py script you put them in the area shown in the first picture. Make sure you are connected to the internet then press f5 to run the script, if successful your pi should open a web browser and start logging Sensly data to the web. The graph on the left hand side is the gases being detected and the graph on the right hand side is the particulate matter being detected.", "step_imgs": ["https://cdn.instructables.com/F51/TBS3/IZ6BM36N/F51TBS3IZ6BM36N.LARGE.jpg", "https://cdn.instructables.com/FA3/6GTD/IZ6BRN10/FA36GTDIZ6BRN10.LARGE.jpg"], "step_title": "Step 3: Run the Sensly_Plotly Script "}, {"step": 4, "steps_text": "Finally if you would like this script to run at boot then we run the crontab command.$ crontab -e Add this to the bottom of the file.$ @reboot python /path/to/Sensly_Plotly.py ", "step_imgs": ["https://cdn.instructables.com/FUF/R0A2/IXGFWWGQ/FUFR0A2IXGFWWGQ.LARGE.jpg"], "step_title": "Step 4: Finishing Up "}], "channel": "Raspberry Pi"}, {"category": "play", "description": "Make Pennies Float & Also How to Bend Pennies!", "title": "Floating Pennies???", "url": "https://www.instructables.com/id/Floating-Pennies/", "section": "play", "steps": [], "channel": "Magic Tricks"}, {"category": "technology", "description": "This is in continuation to my speedometer graph. I thought Why not make something that will look like a freak show? How would it look if we can represent some data in a way that will look like they are watching some temperature chart of a nuclear reactor. So I did some preliminary research and came up with this thermometer. Kindly comment for any changes required. These form of graphs can be used for representation of real life data such as some data that is arriving from arduino or any other hardware etc. This can be a good addition to any portable workstation.", "title": "Thermometer Graph in Excel", "url": "https://www.instructables.com/id/Thermometer-Graph-in-Excel/", "section": "technology", "steps": [{"step": 1, "steps_text": "This can be done in any of the flavors of excel later than 2003. First open an excel workbook And create few columns for names. Here I am using Value1\u00a0 through Value4 for ease of representation. Now put real values to represent the variables. Putting values between 0 to 100 for ease of understanding. One can use any value they like, or take real time values from any data source.", "step_imgs": ["https://cdn.instructables.com/F1X/HM0H/HTHKFPSG/F1XHM0HHTHKFPSG.LARGE.jpg", "https://cdn.instructables.com/FQ0/PRYN/HTHKFVQS/FQ0PRYNHTHKFVQS.LARGE.jpg"], "step_title": "Step 1: Use Any Excel"}, {"step": 2, "steps_text": "Now select the value that to be turned into graph. Insert a bar chart representing the values. Color the bars as you like. I have used red to give some hyper activity feal.", "step_imgs": ["https://cdn.instructables.com/FV9/0HKJ/HTHKEDG8/FV90HKJHTHKEDG8.LARGE.jpg", "https://cdn.instructables.com/FFU/VJ2P/HTHKEDG9/FFUVJ2PHTHKEDG9.LARGE.jpg", "https://cdn.instructables.com/F1E/R4CJ/HTHKEDGD/F1ER4CJHTHKEDGD.LARGE.jpg"], "step_title": "Step 2: Graph Appears"}, {"step": 3, "steps_text": "Stabilize the vertical column so that the change in values does not affect the graph. Setting the minimum and maximum value freezes the graph. Or else the max and min value of the graph is used, which hampers the graph to a considerable limit. Skip this step if you want to see what I mean", "step_imgs": ["https://cdn.instructables.com/F8R/7Y6A/HTHKFPSH/F8R7Y6AHTHKFPSH.LARGE.jpg", "https://cdn.instructables.com/FP2/4JMM/HTHKFPSI/FP24JMMHTHKFPSI.LARGE.jpg"], "step_title": "Step 3: Stabilizing the Graph"}, {"step": 4, "steps_text": "Delete the lines that are not required. Legends and all. You can keep what ever is required as per your requirement.", "step_imgs": ["https://cdn.instructables.com/FBP/9GTA/HTHKFPSJ/FBP9GTAHTHKFPSJ.LARGE.jpg"], "step_title": "Step 4: Removing All That Are Not Required"}, {"step": 5, "steps_text": "Now import the mask. Mask is just a simple png file that is used to block the graph and give it a look that is required. I made the mask in powerpoint using the union and subtraction tool. The mask is also provided within the excel file.", "step_imgs": ["https://cdn.instructables.com/F32/GJIR/HTHKEDGE/F32GJIRHTHKEDGE.LARGE.jpg", "https://cdn.instructables.com/F0W/PRTJ/HTHKFPSK/F0WPRTJHTHKFPSK.LARGE.jpg", "https://cdn.instructables.com/F8C/G5I9/HTHKEDGJ/F8CG5I9HTHKEDGJ.LARGE.jpg"], "step_title": "Step 5: Masking"}, {"step": 6, "steps_text": "So we are done. Pose note: Many other masking can be used as required. The default mask is provided within the excel. The excel file has been changed a little to make it more dynamic. I have added the random command to show how it works. To use this just open the excel and use the (F9) button to see it work. Happy graphing.", "step_imgs": ["https://cdn.instructables.com/F6I/1WJL/HTHKEDGH/F6I1WJLHTHKEDGH.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 6: Finally"}], "channel": "Computers"}, {"category": "technology", "description": "The following information is a single lesson in a larger Tinkercad project. Check out this and more projects on Tinkercad.Return to Previous Lesson: Ruler - Measuring LengthsLesson Overview:Now we're going to make a cup!", "title": "Measuring Cup - Measuring Volumes", "url": "https://www.instructables.com/id/Measuring-Cup-Measuring-Volumes/", "section": "technology", "steps": [{"step": 1, "steps_text": "In this lesson, we're going to learn how to make a tool for measuring volume! Volume is how much space an object takes up. An object that has length and width and height is taking up volume\u2026like the objects in Tinkercad!  However, volume measures are often for materials that don't have a uniform shape like liquids, powders, grains, and pebbles.InstructionsContinue to the next step.", "step_imgs": [], "step_title": "Step 1: Introduction"}, {"step": 2, "steps_text": "We are going to start using a cylindrical volume of 20ml as an example. In Steps 7 and 8, you have the tools to create the volume of your choice.Work with your class to create a set of volumes!InstructionsDrag out a cylinder to the Workplane.Size it as per your desired calculations, and make it a hole. My 20ml volume will be a cylinder that is 30mm in diameter and 30mm tall along the Z axis.Continue to the next step.", "step_imgs": ["https://cdn.instructables.com/F81/YSEM/IRHV3QPO/F81YSEMIRHV3QPO.LARGE.jpg"], "step_title": "Step 2: Creating the Volume for Your Measuring Cup"}, {"step": 3, "steps_text": "We're going to print the cup facing down to make 3D printing the handle easier.In this step, we are creating the cup around our volume.InstructionsDuplicate your shape and make it solid again.Grow the object by 6mm along the X and Y axes and 3mm along the Z axis.Center the two cylinders along their X and Y axes but to their lower Z axis limits.Continue to the next step.", "step_imgs": ["https://cdn.instructables.com/FJ8/35Y7/IRHV3QPF/FJ835Y7IRHV3QPF.LARGE.jpg"], "step_title": "Step 3: Creating the Vessel"}, {"step": 4, "steps_text": "Now we'll create a simple handle that has enough room for some text describing the volume.InstructionsDrag out a Round Roof and align it so that it extends out from the center off the cylinders.Grow the round roof until it extends roughly 4cm from the side of the cylinder. Because every volume is different, the length of this object will be different for everyone.Shrink the round rood to 5mm tall along the Z axis.Drag out a Hemisphere, shrink it to 5mm tall along the Z axis, and align it to the end of the round roof so that it creates a smooth tangent.Continue to the next step.", "step_imgs": ["https://cdn.instructables.com/F0N/LAS3/IRHV3QON/F0NLAS3IRHV3QON.LARGE.jpg"], "step_title": "Step 4: Create the Handle"}, {"step": 5, "steps_text": "A measuring instrument is no good if it's not labeled! So we're going to do that, now.Tinkercad has number and letter shapes, but it only has upper case letters. Why is this important? Because ML doesn't mean Milliliters, it means MEGALITERS! We don't have the time to make a measuring cup that big!So to make a label with lowercase letters, we're going to use the Text Shape Generator in the Shapes menu.InstructionsDrag out the Text Shape Generator under the Tinkercad collection.Choose the font \"Arimo\" and type out the volume you have chosen.Mirror the text so it can be read from the bottom.Continue to the next step.", "step_imgs": ["https://cdn.instructables.com/FVI/8WYZ/IRHV3QNU/FVI8WYZIRHV3QNU.LARGE.jpg"], "step_title": "Step 5: Create the Label"}, {"step": 6, "steps_text": "Now we just need to put the label on our handle!InstructionsProportionally scale the text until it is 10mm tall along the Y axis and then shrink the text along the Z axis until it is 1mm tall.Align the text to the handle's center along the Y axis and nudge the text in to position along the X axis.Select all the objects and group them.Continue to the next step.", "step_imgs": ["https://cdn.instructables.com/F7E/M1JE/IRHV3QNT/F7EM1JEIRHV3QNT.LARGE.jpg"], "step_title": "Step 6: Positioning the Label"}, {"step": 7, "steps_text": "The metric system was designed around a volume of water in a 1cm cube. This volume was named the Milliliter (ml).The volume of a cube is the area (length times width) of a sides multiplied by its height, or x^3.However, in this lesson, we want to find the dimensions of a cube from a known volume. Instead of cubing a side, we can take a cube root of a volume. For example, a liter is a cube with 10cm sides :10=\u221b(1000)Both Apple OSX and Microsoft Windows come with calculators with the cube root function.InstructionsContinue to the next step.", "step_imgs": ["https://cdn.instructables.com/FVB/2NHH/IRHV3QNS/FVB2NHHIRHV3QNS.LARGE.jpg"], "step_title": "Step 7: Calculating the Volume of a Cube"}, {"step": 8, "steps_text": "Like with a cube, we calculate the volume of a cylinder by multiplying the area of a side by its height. Finding the volume of a cylinder is challenging because its sides are circles. Fortunately, thousands of years ago, we found a number that helps us, and that number is 'pi' or '\u03c0'.Pi is the ratio between the diameter of a circle and its circumference. The formula for the area of a circle is:Area=pi*d^2/4If we make the height and the diameter the same, this is easy to solve, we simply raise the square to a cube:Volume=pi*d^3/4But what if we know the volume and want to figure out the diameter and height? We solve for diameter:d=\u221b((4*Volume)/pi)So if you want a cylindrical volume of 1L (or 1000cm3), your diameter and height should be:~10.9cm=\u221b((4*1000)/pi)InstructionsContinue to the next step.", "step_imgs": ["https://cdn.instructables.com/FY7/E54U/IRHV3QNR/FY7E54UIRHV3QNR.LARGE.jpg"], "step_title": "Step 8: Calculating the Volume of a Cylinder"}, {"step": 9, "steps_text": "Congratulations, you've completed Lesson 2 of Making Your Own Measurement Tools! Well done! Now let's try printing your measuring cup.No matter how you orient this object, there will be overhangs. Therefore, during the building process, we built it in the orientation that has the least overhangs.If you make a larger volume, it may make sense to flip the object over if you think the handle would require less support material than supporting the bottom of the cup.InstructionsFrom the Design menu, click \"Download for 3D Printing.\"Click the button labeled \"STL.\"When your browser has completed downloading, load the file into your 3D printer software.This object has some overhangs, so make sure to enable \"Support Structure\" in your 3D printer software.Print!In the next lesson you will learn to make a protractor!Next Lesson:Protractor - Measuring Angles", "step_imgs": [], "step_title": "Step 9: Printing"}], "channel": "3D Printing"}, {"category": "technology", "description": "We are a student team from different disciplines of the RWTH Aachen University and have created this project in the context of the 2017 iGEM  competition.After all the work that went into our pump, we would like to share our results with you!We built this peristaltic pump as generally applicable liquid  handling solution for any project which requires transportation of  liquids. Our pump is capable of precise dosing and pumping, providing a  wide range of dosing volumes and flow rates to maximize possible  applications. Through 125 dosing experiments we were able to demonstrate  and quantify the accuracy of our pump. For a tubing with 0,8 mm inner  diameter and any flowrate or dosing volume within the specifications we  could show an accuracy better than 2% deviation from the set value.  Given the results of the measurements, the accuracy can be improved even  further if the speed of the calibration is adjusted to the required  flow rate.The pump can be controlled without programming knowledge via the  built-in LCD display and a rotary knob. In addition, the pump can be  remotely controlled via USB by serial commands. This simple way of  communication is compatible with common software and programming  languages (MATLAB, LabVIEW, Java, Python, C#, etc.).  The pump is simple and inexpensive to manufacture, with all the parts  totaling less than $100 compared to $1300 for the cheapest comparable  commercial solution we could find. Besides a 3D printer, only common  tools are needed. Our project is open source in terms of hardware and  software. We provide the CAD files for the 3D printed parts, a complete  list of all required commercial components and their sources, and the  source code used in our pump. ", "title": "Precise Peristaltic Pump", "url": "https://www.instructables.com/id/Open-Source-Peristaltic-Pump/", "section": "technology", "steps": [{"step": 1, "steps_text": "Check the specifications and the discussion of accuracy attached below. Does the pump meet your requirements?", "step_imgs": ["https://cdn.instructables.com/FHT/IX3J/J9EHLRMH/FHTIX3JJ9EHLRMH.LARGE.jpg", "https://cdn.instructables.com/FL7/PP1L/J9EHLRNB/FL7PP1LJ9EHLRNB.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 1: Check Specifications"}, {"step": 2, "steps_text": "1x Arduino Uno R3/ compatible board1x Stepper motor (WxHxD): 42x42x41 mm, Shaft (\u00d8xL): 5x22 mm1x Power supply 12 V/ 3 A, connector: 5.5 /   2.1 mm1x Step motor driver A49881x LCD module 16x2, (WxHxD): 80x36x13   mm3x Needle bearing HK 0408 (I\u00d8 x O\u00d8 x L) 4   mm x 8 mm x 8mm1x Encoder 5 V, 0.01 A, 20 switch postions,   360 \u00b01x Pump tubing, 1.6mm wall thickness, 0.2m4x Foot self-adhesive (L x W x H) 12.6 x   12.6 x 5.7 mm3x Straight pin (\u00d8 x L) 4 mm x 14 mm1x Control knob (\u00d8 x H) 16.8 mm x 14.5 mm1x Potentiometer/ Trimmer 10k1x 220 Ohm Resistor1x Capacitor 47\u00b5F, 25V       Wiring:1x PCB (L x W) 80 mm x 52 mm, Contact   spacing 2.54 mm (CS)2x Pin strip, straight, CS 2.54, nominal   current 3A, 36 pins1x Socket strip, straight, CS 2.54, nominal   currrent 3A, 40 pins1x Cables, different colors (e.g. \u00d8 2.5 mm,   cross section 0,5 mm\u00b2 )Heat shrink (suitable for cables, e.g. \u00d8   3 mm)        Screws:4x M3, L = 25 mm (length without head), ISO   4762 (hex head)7x M3, L = 16 mm, ISO 4762 (hex head)16x M3, L = 8 mm, ISO 4762 (hex head)4x Small tapping screw (for LCD, \u00d8 2-2.5mm,   L = 3-6 mm)1x M3, L=10mm grub screw, DIN 9161x M3, nut, ISO 4032       3D printed parts: (Thingiverse)1x Case_main2 x Case_side (3D print not necessary   => milling/cutting/sawing)1x Pump_case_bottom1x Pump_case_top_120\u00b01x Bearing_mount_bottom1x Bearing_mount_top", "step_imgs": ["https://cdn.instructables.com/FL7/473J/J9EHLSA3/FL7473JJ9EHLSA3.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 2: Gather Components"}, {"step": 3, "steps_text": "The 3D printed parts have to be cleaned after printingto remove any residues from the printing process. The tools we recommend for postprocessing are a small file and a thread cutter for M3 threads. After the printing process most of the holes have to be widened by using a suitable drill. For the holes that contain M3 screws, a thread has to be cut with the above mentioned thread cutter.", "step_imgs": ["https://cdn.instructables.com/FDJ/GPPO/J9EHLRTI/FDJGPPOJ9EHLRTI.LARGE.jpg"], "step_title": "Step 3: Post Processing of 3D Prints"}, {"step": 4, "steps_text": "The core of the circuit consists of the Arduino and a perfboard. On the perfboard is the stepper motor driver, the trimmer for the LCD, the 47\u00b5F capacitor and connections for the power supply of the various components. In order to turn off the Arduino by the power switch, the power supply of the Arduino was interrupted and led to the Perfboard. For this purpose, the diode which is located on the Arduino directly behind the power jack was unsoldered and brought to the perfboard instead.", "step_imgs": ["https://cdn.instructables.com/FGU/ZUHO/JIOUA15E/FGUZUHOJIOUA15E.LARGE.jpg", "https://cdn.instructables.com/F5L/ZX40/J9EHLSAX/F5LZX40J9EHLSAX.LARGE.jpg", "https://cdn.instructables.com/FZU/VJ5U/JIOUA1H0/FZUVJ5UJIOUA1H0.LARGE.jpg", "https://cdn.instructables.com/FPM/MXCC/JIOUA1H3/FPMMXCCJIOUA1H3.LARGE.jpg", "https://cdn.instructables.com/F36/WK7D/JIOUA1NM/F36WK7DJIOUA1NM.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 4: Cables & Wiring"}, {"step": 5, "steps_text": "There are three settings that need to be made directly on the circuit. First the current limit for the step motor driver must be set, by adjusting the little screw on the A4988. For example, if the voltage V_ref between screw and GND in the on state is 1V, the current limit is twice the value: I_max = 2A (this is the value we used). The higher the current, the higher the torque of the motor, allowing higher speeds and flow rates. However, also the power consumption and the heat development increases.       Furthermore, the mode of the stepper motor can be set via the three pins which are located on the top left of the stepper motor driver (MS1, MS2, MS3). When MS2 is at + 5V, as shown in the wiring diagram, the motor is operated in quarter step mode, which we used. This means that exactly one step (1.8 \u00b0) is performed for four pulses that the stepper motor driver receives at the STEP pin. As last value to set, the trimmer on the perfboard can be used to adjust the contrast of the LCD.", "step_imgs": ["https://cdn.instructables.com/F0C/N35E/J9EHLST8/F0CN35EJ9EHLST8.LARGE.jpg", "https://cdn.instructables.com/F78/98YX/JAMTTODU/F7898YXJAMTTODU.LARGE.jpg", "https://cdn.instructables.com/FPP/TPWM/J9EHLSTC/FPPTPWMJ9EHLSTC.LARGE.jpg"], "step_title": "Step 5: Hardware Settings"}, {"step": 6, "steps_text": "Before assembly it is recommended to test the components and the circuit on a breadboard. On this way, it is easier to find and fix possible mistakes.You can already upload our software to the Arduino, to try all functions beforehand. We published the source code on GitHub:https://github.com/iGEM-Aachen/Open-Source-Peristaltic-Pump", "step_imgs": ["https://cdn.instructables.com/F3B/4VO6/J9EHLT7J/F3B4VO6J9EHLT7J.LARGE.jpg"], "step_title": "Step 6: Test Circuit and Components"}, {"step": 7, "steps_text": "The video shows the assembly of the components in the intended sequence without the wiring. All connectors should first be attached to the components. The wiring is best done at the point where all the components are inserted, but the side walls have not yet been fixed. The hard to reach screws can be easily reached with a hex-wrench.1. Insert the power switch and the encoder into their designated hole and fix them to the case. Attach the control knob to the encoder \u2013 be careful \u2013 once you attached the knob, it might destroy the encoder if you try to remove it again.2. Attach the LCD display with small tapping screws, make sure to solder the resistor and wiring to the display before assembly.3. Fix the Arduino Uno board to the case using 8 mm M3 screws.4. Insert the step motor and attach it to the case together with the 3D printed part (Pump_case_bottom) using four 10 mm M3 screws.5. Attach the perfboard to the case \u2013 make sure you soldered all components to the perfboard as shown in the wiring diagram.6. Wire the electronic parts inside the case.7. Close the case by adding the side panels using 10x 8 mm M3 screws.8. Assemble the bearing mount as shown in the video and attach it to the motor\u2019s shaft using a 3 mm grub screw9. Finally, attach the counter support for holding the tube (Pump_case_top_120\u00b0) with two 25 mm M3 screws and insert the tubing. Insert two 25 mm M3 screws to keep the tubing in place during the pump process", "step_imgs": [], "step_title": "Step 7: Assembly"}, {"step": 8, "steps_text": "", "step_imgs": [], "step_title": "Step 8: Insert Tubing"}, {"step": 9, "steps_text": "The user interface provides a comprehensive control of the peristaltic pump. It consists of a LCD display, a control knob and a power switch. The control knob can be turned or pushed. Turning the knob allows to select from different menu items, the menu item on the upper line is currently selected. Pushing the knob will activate the selected menu item, indicated by a blinking rectangle. The blinking rectangle implies that the menu item is activated. Once the menu item is activated, it starts depending on the selected item either an action or allows the change of the corresponding value by turning the knob. For all menu items connected to a numerical value the knob can be held to reset the value to zero or double pushed to increase the value by one-tenth of its maximal value. To set the selected value and deactivate a menu item the knob needs to be pushed a second time.The power switch will immediately shut down the pump and all its components (Arduino, step motor, step motor driver, LCD), except when the pump is connected via USB. The Arduino and the LCD can be powered by USB, so that the power switch will not affect them.The pumps menu has 10 items, which are listed and described below:0|StartStart pumping, the operation mode is depending on the mode selected at \u201c6) Mode\u201d1|VolumeSet the dosing volume, is only considered if \u201cDose\u201d is selected at \u201c6) Mode\u201d2|V.Unit:Set the volume unit, options are:\u201cmL\u201d: mL\u201cuL\u201d:  \u00b5L\u201crot\u201d: rotations (of the pump)3|SpeedSet the flow rate, is only considered if \u201cDose\u201d or \u201cPump\u201d is selected at \u201c6) Mode\u201d4|S.Unit:Set the volume unit, options are:\u201cmL/min\u201d: mL/min\u201cuL/min\u201d:  \u00b5L/min\u201crpm\u201d: rotations/min5|Direction:Choose pumping direction: \u201cCW\u201d for clockwise rotation, \u201cCCW\u201d for counterclockwise6|Mode:Set operation mode:\u201cDose\u201d: dose the selected volume (1|Volume) at the selected flow rate (3|Speed) when started\u201cPump\u201d: pump continuously at the selected flow rate (3|Speed) when started\u201cCal.\u201d: Calibration, pump will perform 30 rotations in 30 seconds when started7|Cal.Set calibration volume in mL. For calibration, the pump is run once in calibration mode and the resulting calibration volume which was pumped is measured. 8|Save Sett.Save all settings to Arduinos EEPROM, values are retained during power off and reloaded, when the power is turned on again9|USB CtrlActivate USB Control: Pump reacts to serial commands sent via USB", "step_imgs": ["https://cdn.instructables.com/FWF/QY5O/J9EHLWK1/FWFQY5OJ9EHLWK1.LARGE.jpg"], "step_title": "Step 9: Get Familiar With the User Interface (manual Control)"}, {"step": 10, "steps_text": "Performing a proper calibration before using the pump is crucial for precise dosing and pumping. The calibration will tell the pump how much liquid is moved per rotation, so the pump can calculate how many rotations and which speed is needed to meet the set values. To start the calibration, select the Mode \u201cCal.\u201d and start pumping or send the calibration command via USB. The standard calibration cycle will perform 30 rotations in 30 seconds. The volume of liquid pumped during this cycle (calibration volume) should be measured precisely. Ensure, that the measurement is not affected by drops sticking to the tubing, the weight of the tubing itself or any other interferences. We recommend using a microgram scale for calibration, as you can easily calculate the volume, if density and weight of the pumped amount of liquid is known. Once you measured the calibration volume you can adjust the pump by setting the value of menu item \u201c7|Cal.\u201d or attaching it to your serial commands.Please note that any change after calibration to the tubing mount or the pressure difference will affect the precision of the pump. Try to perform the calibration always at the same conditions, at which the pump will be used later. If you remove the tubing and install it again in the pump, the calibration value will change up to 10%, since to small differences in positioning and force applied to the screws. Pulling on the tubing will also change the positioning and therefore the calibration value. If the calibration is performed without pressure difference and the pump is later used to pump liquids at another pressure it will affect precision. Remember even a level difference of one meter can create a pressure difference of 0.1 bar, which will have a slight influence on the calibration value, even if the pump can reach a pressure of at least 1.5 bar using the 0.8 mm tubing.", "step_imgs": [], "step_title": "Step 10: Calibration and Try Dosing"}, {"step": 11, "steps_text": "The serial interface is based on the Arduino\u2019s serial communication interface via USB (Baud 9600, 8 data bits, no parity, one stop bit). Any software or programming language capable of writing data to a serial port can be used to communicate with the pump (MATLAB, LabVIEW, Java, python, C#, etc.). All functions of the pump are accessible by sending the corresponding command to the pump, at the end of each command a new line character '\\n' (ASCII 10) is required.Dose:                     d(volume in \u00b5L),(speed in \u00b5L/min),(calibration volume in \u00b5L)'\\n'e.g.:    d1000,2000,1462'\\n'    (dosing 1mL at 2mL/min, calibration volume = 1.462mL)Pump:                    p(speed in \u00b5L/min),(calibration volume in \u00b5L)'\\n'e.g.:    p2000,1462'\\n'     (pump at 2mL/min, calibration volume = 1.462mL)Calibrate:              c'\\n'Stop:                      x'\\n'The Arduino environment (Arduino IDE) has a built-in serial monitor, which can read and write serial data, therefore serial commands can be tested without any written code.", "step_imgs": [], "step_title": "Step 11: Serial Interface \u2013 Remote Control Via USB"}, {"step": 12, "steps_text": "If you have built our pump, please share your experiences and improvements in software and hardware on:Thingiverse (3D printed parts)GitHub (software)Instructables (instructions, wiring, general)", "step_imgs": ["https://cdn.instructables.com/FO8/ARGA/J9EHLZJS/FO8ARGAJ9EHLZJS.LARGE.jpg"], "step_title": "Step 12: Share Your Experiences and Improve the Pump"}, {"step": 13, "steps_text": "The iGEM (international Genetically Engineered Machine) Foundation is an independent, non-profit organization dedicated to education and  competition, the advancement of synthetic biology, and the development  of an open community and collaboration.iGEM runs three main programs: the iGEM Competition - an international  competition for students interested in the field of synthetic biology;  the Labs Program - a program for academic labs to use the same resources  as the competition teams; and the Registry of Standard Biological Parts  - a growing collection of genetic parts used for building biological  devices and systems.http://igem.org/Main_Page", "step_imgs": [], "step_title": "Step 13: Curious About IGEM?"}], "channel": "Tools"}, {"category": "technology", "description": "   First a few words about this project the motivation, the technologies involved and the end product that we're going to build.   So the big aim here is obviously to predict the rain in the future (we'll try 6 hours). The prediction will be a yes or no (boolean in programming terms). I've searched from tutorials on this matter and i haven't found one that is complete in every way. So mine will take this to a whole new approach and get into every aspect of it. For that we're going to:- build the weather station our selves. The station should be completely off grid with a solar panel, and a extremely low power mode (a few dozens microamps hour)- program the station so it gather data and transmits it every ten minutes to a base station- collect the data on the base station and store it (in a database)- using neural networks (Keras library) and other python libraries like pandas filter, clean and preprocess the data, then feed it to a neural network to train a \"model\" for predicting that it shall or not rain- finally predict whether or not it will rain on the next 6 hours  and notify users via emailI've personally used this weather station to collect data (you can download the data in the next steps if you wish). With only about 600 days of weather data the system can make a prediction if it will rain or not  in the next 6 hours with an accuracy of around 80% depending on the parameters which is not that bad.This tutorial we'll take you through all the necessary steps to predict rainfall from scratch. We'll make an end product that does a practical job, without using external weather or machine learning API-s. We'll learn along the way how to build a practical weather station (low power and off the grid) that really collects data over long periods of time without maintenance. After that you'll learn how to program it using Arduino IDE. How to collect data into a database on a base station (server). And how to process the data (Pandas) and apply neural networks (Keras) and then predict the rainfall.", "title": "DYI Rain Prediction Using Arduino, Python and Keras", "url": "https://www.instructables.com/id/DYI-Rain-Prediction-Using-Arduino-Python-and-Keras/", "section": "technology", "steps": [{"step": 1, "steps_text": "Parts:1. Small plastic box with detachable lids (mine has screws). The box size should be big enough to fit the small components and batteries. My box has 11 x 7 x 5 cm2. three AAA battery holder3. three AAA rechargeable batteries4. 6V small solar panel5. Arduino pro mini 328p6. a diode, 1N4004 (to prevent reverse current from the batteries to the panel)7. a small NPN transistor and 1k resistor (for switching power to the components on and off)8. a rain sensor9. HC-12 serial communication module10. HC-12 USB serial module (for the base station) 11. BME280 bosch sensor module (for humidity, temperature, pressure)12. BH1750 light sensing module13. PCB, wires, solder, KF301-2P plug in screw connector, male&female pcb connectors, glue14. 3.3V regulator15. a base station: a PC, or a development board running all the time. It's role it's gathering data, training the rain prediction model and making predictionsTools:1. USB to serial FTDI adapter FT232RL to program the Arduino pro mini 2. Arduino IDE3. Drill 4. Fine blade saw 5. Screwdrivers 6. Soldering iron 7. Wire cutter Skills: 1. Soldering, check this tutorial 2. Basic arduino programming3. Linux service configuration, package installation4. Some programming skills", "step_imgs": ["https://cdn.instructables.com/FKE/DHJ3/JQCO812V/FKEDHJ3JQCO812V.LARGE.jpg", "https://cdn.instructables.com/FWR/BE9G/JQCO812U/FWRBE9GJQCO812U.LARGE.jpg", "https://cdn.instructables.com/FRB/X7OK/JQCO812Q/FRBX7OKJQCO812Q.LARGE.jpg"], "step_title": "Step 1: Parts and Tools for Building the Station"}, {"step": 2, "steps_text": "The weather station is composed from the following sets of components:1. the box with the solar panel glued to it2. the PCB with the electronics inside3. the battery holder also inside4. the BME280 and light and rain sensors on the outside1. The box needs 4 holes, one for the solar panel wires, other three for the sensors that will be placed on the outside. First drill the wholes, they should be large enough for the male-female wires to stick out and go to the sensors. After the wholes are drilled, glue the panel to one side of the box and get it's wires through a hole inside2. The PCB will hold the arduino, HC-12, 3.3V regulator, diode, transistor, resistor and two KF301-2P- first solder the two female PCB connectors on the PCB for the arduino, solder the male pcb connectors to the arduino and place the arduino on the PCB- the arduino led should be removed or at least one of it's pin. this is very important because the led will draw a large amount of power. Be careful not to damage other components- solder the transistor, resistor, and 3.3V regulator- solder the two KF301-2P. One will be for the solar panel, the other for the battery holder- solder three female PCB connectors: for the light sensor, BME280 and rain sensor- solder small wires to connect all the PCB components (check the pictures and the fritzing schamatic)3. place 3 charged AAA NiMH batteries inside the holder and place it inside the box, connecting the wires into the KF301-2P connector4. connect the BME280 and light sensors from outside the box to their corresponding male connectorsFor the rain sensor, solder three wires (Gnd, Vcc, signal) to it, and to the other side solder male pins that will go inside the box to its corresponding male connectorsThe final thing it would be to place the station to it's final position. I've chose a position that is sheltered from the rain and snow. I've chosen longer wires for the rain sensor and placed it separately in the rain on a steady support. For the main box i've chosen a special kind of tape with adhesive (check the pictures) but anything that holds the box will do.", "step_imgs": ["https://cdn.instructables.com/F8S/FHCP/JQGYGPK8/F8SFHCPJQGYGPK8.LARGE.jpg", "https://cdn.instructables.com/FJK/OE6K/JQCO8130/FJKOE6KJQCO8130.LARGE.jpg", "https://cdn.instructables.com/FSD/P019/JQCO812T/FSDP019JQCO812T.LARGE.jpg", "https://cdn.instructables.com/F0Q/U6WL/JQCO812R/F0QU6WLJQCO812R.LARGE.jpg", "https://cdn.instructables.com/F63/ZMT9/JQCO812S/F63ZMT9JQCO812S.LARGE.jpg", "https://cdn.instructables.com/FTQ/6Q4F/JQCO812X/FTQ6Q4FJQCO812X.LARGE.jpg", "https://cdn.instructables.com/FAS/UNJ7/JQCO812Z/FASUNJ7JQCO812Z.LARGE.jpg", "https://cdn.instructables.com/F1I/F2HP/JQCO812W/F1IF2HPJQCO812W.LARGE.jpg", "https://cdn.instructables.com/FBL/N1H1/JQCO8133/FBLN1H1JQCO8133.LARGE.jpg", "https://cdn.instructables.com/FD9/BXGL/JQCO812Y/FD9BXGLJQCO812Y.LARGE.jpg", "https://cdn.instructables.com/FOZ/WQVX/JQCO8132/FOZWQVXJQCO8132.LARGE.jpg", "https://cdn.instructables.com/F7W/RPTG/JQGYGQ09/F7WRPTGJQGYGQ09.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 2: Building the Weather Station"}, {"step": 3, "steps_text": "In this step you'll learn what external libraries are needed, we're overview the code and how it works and of course you'll get to download it or copy-paste it into Arduino IDE and upload it to the weather station.The role of the weather station is to transmit to a base station every 10 minutes data about it's sensors.First let's describe what the weather station program does:1. read sensors data (humidity, temperature, pressure, rain, light, voltage)2. transmits the encoded data through a second software serial line. The encoded data looks like this: H1:78|T1:12|PS1:1022|L1:500|R1:0|V1:4010| The statement from above will mean that: humidity from station \"1\" is 78 percent, temperature from station 1 is 12 degrees, pressure is 1022 bars, light level 500 lux, rain 0, and voltage 4010 millivolts3. power off the auxiliary components: sensors and communication device4. puts the arduino in sleep mode for 10 minutes (this will make it consume less 50 microamps)5. turn on the components and repeat steps 1 - 4One little extra tweak here, if the voltage level is above 4.2 V the arduino will use the normal sleep function \"delay(milliseconds)\". This will greatly increase the power consumption and decreasing the voltage rapidly. This effectively prevents the solar panel from overcharging the batteries.You can get the code from my Github repository here: https://github.com/danionescu0/home-automation/tre...Or copy-pasting it from below, either way just remove the line with \"transmitSenzorData(\"V\", sensors.voltage);\"#include \"LowPower.h\"<br>#include \"SoftwareSerial.h\"\n#include \"Wire.h\"\n#include \"Adafruit_Sensor.h\"\n#include \"Adafruit_BME280.h\"\n#include \"BH1750.h\"\n\nSoftwareSerial serialComm(4, 5); // RX, TX\nAdafruit_BME280 bme; \nBH1750 lightMeter;\nconst byte rainPin = A0;\n\nbyte sensorsCode = 1;\n/**\n * voltage level that will pun the microcontroller in deep sleep instead of regular sleep\n */\nint voltageDeepSleepThreshold = 4200; \nconst byte peripherialsPowerPin = 6;\nchar buffer[] = {' ',' ',' ',' ',' ',' ',' '};\n\nstruct sensorData\n  {\n      byte humidity;    \n      int temperature;\n      byte rain;\n      int  pressure;\n      long voltage;\n      int light;\n  };\n\nsensorData sensors;\n\nvoid setup() \n{  \n    Serial.begin(9600);\n    serialComm.begin(9600);\n    pinMode(peripherialsPowerPin, OUTPUT);\n    digitalWrite(peripherialsPowerPin, HIGH);\n    delay(500);\n    if (!bme.begin()) {\n        Serial.println(\"Could not find a valid BME280 sensor, check wiring!\");\n        while (1) {\n           customSleep(100);\n        }\n    }\n    Serial.println(\"Initialization finished succesfully\");\n    delay(50);\n    digitalWrite(peripherialsPowerPin, HIGH);\n}\n\nvoid loop() \n{    \n    updateSenzors();\n    transmitData();    \n    customSleep(75);       \n}\n\nvoid updateSenzors() \n{\n    bme.begin();\n    lightMeter.begin();\n    delay(300);\n    sensors.temperature = bme.readTemperature();\n    sensors.pressure = bme.readPressure() / 100.0F;\n    sensors.humidity = bme.readHumidity();\n    sensors.light = lightMeter.readLightLevel();\n    sensors.voltage = readVcc();\n    sensors.rain = readRain();\n}\n\nvoid transmitData()\n{\n    emptyIncommingSerialBuffer();\n    Serial.print(\"Temp:\");Serial.println(sensors.temperature);\n    Serial.print(\"Humid:\");Serial.println(sensors.humidity);\n    Serial.print(\"Pressure:\");Serial.println(sensors.pressure);\n    Serial.print(\"Light:\");Serial.println(sensors.light);\n    Serial.print(\"Voltage:\");Serial.println(sensors.voltage);\n    Serial.print(\"Rain:\");Serial.println(sensors.rain);\n    transmitSenzorData(\"T\", sensors.temperature);\n    transmitSenzorData(\"H\", sensors.humidity);\n    transmitSenzorData(\"PS\", sensors.pressure);\n    transmitSenzorData(\"L\", sensors.light);\n    transmitSenzorData(\"V\", sensors.voltage);\n    transmitSenzorData(\"R\", sensors.rain);\n}\n\nvoid emptyIncommingSerialBuffer()\n{\n    while (serialComm.available() > 0) {\n        serialComm.read();\n        delay(5);\n   }\n}\n\nvoid transmitSenzorData(String type, int value)\n{\n    serialComm.print(type);\n    serialComm.print(sensorsCode);\n    serialComm.print(\":\");\n    serialComm.print(value);\n    serialComm.print(\"|\");\n    delay(50);\n}\n\nvoid customSleep(long eightSecondCycles)\n{\n    if (sensors.voltage > voltageDeepSleepThreshold) {\n        delay(eightSecondCycles * 8000);\n        return;\n    }\n    digitalWrite(peripherialsPowerPin, LOW);\n    for (int i = 0; i < eightSecondCycles; i++) {\n        LowPower.powerDown(SLEEP_8S, ADC_OFF, BOD_OFF);  \n    }\n    digitalWrite(peripherialsPowerPin, HIGH);\n    delay(500);\n}\n\nbyte readRain()\n{\n    byte level = analogRead(rainPin);\n\n    return map(level, 0, 1023, 0, 100);  \n}\n\nlong readVcc() {\n    // Read 1.1V reference against AVcc\n    // set the reference to Vcc and the measurement to the internal 1.1V reference\n    #if defined(__AVR_ATmega32U4__) || defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__)\n      ADMUX = _BV(REFS0) | _BV(MUX4) | _BV(MUX3) | _BV(MUX2) | _BV(MUX1);\n    #elif defined (__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n      ADMUX = _BV(MUX5) | _BV(MUX0);\n    #elif defined (__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n      ADMUX = _BV(MUX3) | _BV(MUX2);\n    #else\n      ADMUX = _BV(REFS0) | _BV(MUX3) | _BV(MUX2) | _BV(MUX1);\n    #endif  \n  \n    delay(2); // Wait for Vref to settle\n    ADCSRA |= _BV(ADSC); // Start conversion\n    while (bit_is_set(ADCSRA,ADSC)); // measuring\n    uint8_t low  = ADCL; // must read ADCL first - it then locks ADCH  \n    uint8_t high = ADCH; // unlocks both\n    long result = (high<<8) | low;\n    result = 1125300L / result; // Calculate Vcc (in mV); 1125300 = 1.1*1023*1000\n    \n    return result; // Vcc in millivolts\n}Before uploading the code, download and install the following arduino libraries:* BH1750 library:  https://github.com/claws/BH1750 * LowPower library:  https://github.com/rocketscream/Low-Power * Adafruit Sensor library:  https://github.com/adafruit/Adafruit_Sensor * Adafruit BME280 library:  https://github.com/adafruit/Adafruit_Sensor If you don't know how to do that, check out this tutorial.", "step_imgs": [], "step_title": "Step 3: Arduino Code"}, {"step": 4, "steps_text": "The base station will consist of a linux computer (desktop, laptop or development board) with the HC-12 USB module attached. The computer must remain always on to collect data every 10 minutes from the station.I've used my laptop with Ubuntu 18.The installation steps:1. Install anaconda. Anaconda is a python package manager and it will make it easy for us to work with the same dependencies. We'll be able to control the python version, and each package versionIf you don't know how to install it check out this: https://www.digitalocean.com/community/tutorials/h... tutorial and follow the steps 1 - 82. Install mongoDb. MongoDb will be our main database for this project. It will store data about all the sensors time series. It's schemaless and for our purpose it's easy to use. For installation steps check out their page: https://docs.mongodb.com/v3.4/tutorial/install-mon...I've used an older version of mongoDb 3.4.6, if you follow the tutorial above you'll get exactly that. In principle it should work with the latest version.[Optionally] add an index on date field:mongouse weather \ndb.weather_station.createIndex({\"date\" : 1})3. Download the project from here: https://github.com/danionescu0/home-automation . We'll be using the weather-predict foldersudo apt-get install git\ngit clone  https://github.com/danionescu0/home-automation.gi...4. Create and configure anaconda environment:cd weather-predict \n# create anaconda environment named \"weather\" with python 3.6.2\nconda create --name weather python=3.6.2 \n\n# activate environment\nconda activate weather\n\n# install all packages \npip install -r requirements.txt This will create an new anaconda environment and install the needed packages. Some of the packages are:Keras (high level neural network layer, with this library we'll make all our neural network predictions)pandas (useful tool that manipulates data, we'll use it heavily)pymongo (python mongoDb driver)sklearn (data mining and data analysing tools) Configure the projectThe config file is situated in the weather-predict folder and is named config.py1. if you install MongoDb remotely or on a different port change the \"host\" or \"port\" in the mongodb = {\n    'host': 'localhost',\n    'port': 27017\n}\n...2. Now we need to attach the HC-12 USB serial adapter. Before than run:ls -l /dev/tty*and you should get a list of mounted devices.Now insert the HC-12 in a USB port and run the same command again.It should be one new entry in that list, our serial adapter. Now change the adapter port in the config if necessaryserial = {\n    'port': '/dev/ttyUSB0',\n    'baud_rate': 9600\n} The other config entries are some file default paths, no need for a  change there.", "step_imgs": [], "step_title": "Step 4: Preparing the Base Station"}, {"step": 5, "steps_text": "   Here we'll discuss basic stuff about importing my test data, running some tests on it, setting up your own data, displaying some graphs and setting up an email with prediction for the next few hours.   If you like to know more about how it works check out the next step \"How does it work\"Importing my already gathered dataMongoDb comes with a cli command for importing data from json:mongoimport -d weather -c weather_station --file sample_data/weather_station.jsonThis will import the file from sample data into \"weather\" database and \"datapoints\" collectionA warning here, if you use my gathered data, and combine it with your newly local data the accuracy might drop because of the small differences in hardware (sensors) and local weather patterns.Gathering new dataOne of the base station roles is to store incoming data from the weather station into the database for later processing. To start the process that listens to the serial port and stores in the database just run:conda activate weather\n\npython serial_listener.py\n\n# every 10 minutes you should see data from the weather station coming in :\n\n[Sensor: type(temperature), value(14.3)]\n\n[Sensor: type(pressure), value(1056.0)]\n\n...Generating the prediction modelI'll presume you have imported my data or \"ran the script for a few years\" to gather your personialised data, so in this step we'll process the data to create a model used to predict future rain.conda activate weather\n\npython train.py --days_behind 600 --test-file-percent 10 --datapoints-behind 8 --hour-granularity 6* The first parameter --days_behind means how much data into the past should the script process. It's measured in days* --test-file-percent means how much of the data should be considered for testing purpose, this is a regular step in a machine learning algorithm* --hour-granularity basically means how many hours into the future we'll want the prediction* --datapoints-behind this parameter will be discussed further into the next sectionView some data charts with all the weather station sensorsLet's say for the last 10 days:conda activate weather \n\npython graphs --days-behind 10Predict if it will rain in the next periodWe'll predict if it's going to rain and send an notification emailconda activate weather \n\npython predict.py --datapoints-behind 8 --hour-granularity 6 --from-addr a_gmail_address --from-password gmail_password --to-addr a_email_destinationRun a batch predict on the test data:python predict_batch.py -f sample_data/test_data.csvIt's important to use the same parameters as in the train script above.For the email notification to work log in into your gmail account and Turn Allow less secure apps to ON. Be aware that this makes it easier for others to gain access to your account. You'll need two email addresses, a gmail address with the above option activated, and an other address where you'll receive your notification.If you like to receive notifications every hour, put the script into crontabTo see how all of this is possible check the next step", "step_imgs": ["https://cdn.instructables.com/FJ5/7BMS/JQKTLL35/FJ57BMSJQKTLL35.LARGE.jpg", "https://cdn.instructables.com/FEU/APC9/JQKTK4QT/FEUAPC9JQKTK4QT.LARGE.jpg"], "step_title": "Step 5: Use the Weather Station in Practice"}, {"step": 6, "steps_text": "In this last step we'll discuss several aspects of the architecture of this project:1. Project overview, we'll discuss the general architecture and technologies involved2. Basic concepts of machine learning3. How the data is prepared (the most important step)4. How the actual neural network wrapper API works (Keras)5. Future improvementsI'll try to give some code example here but bear in mind, that it's not 100% the code from the project. In the project it's self the code it's a bit more complicated with classes and a structure1. Project overview, we'll discuss the general architecture and technologies involvedAs we talked earlier, the project has two separate parts. The weather station it's self which only function is to collect and transmit data. And the base station where all the collection training and prediction will happen.Advantages of the separation of the weather station and the base station:- power requirements, if the weather station was able to process the data too, it would need substantial power, maybe large solar panels or a permanent power source- portability, due to it's small size the weather station can collect data from a few hundred meters away and you can easily change it's place if needed- scalability, you can increase the prediction accuracy by building more than one weather stations and spread them around a few hundred meters- low cost, because it's a cheap device you can easily build another in case one is lost or stolenThe database choice. I've chosen mongoDb because it's nice features: schemaless, free and easy to use APIEvery time sensor data is received the data is saved in the database, a the data entry looks something like this:{\t\n        \"_id\" : \"04_27_2017_06_17\",\n\t\"humidity\" : 65,\n\t\"date\" : ISODate(\"2017-04-27T06:17:18Z\"),\n\t\"pressure\" : 1007,\n\t\"temperature\" : 9,\n\t\"rain\" : 0,\n\t\"light\" : 15\n}The database stores data in BSON format (similar to JSON) so it's easy to read and easy to work with. I've aggregated the data under an identifier that contains the date formatted as string to the minutes, so the smallest grouping here is a minute.The weather station (when working properly) will transmit a datapoint every 10 minutes. A datapoint is a collection of \"date\", \"humidity\", \"pressure\", \"temperature\", \"rain\" and \"light\" values.The data processing and neural network technology choiceI've chosen python for the backend because many major inovations in neural networks are found in python. A growing community with a lot of Github repositories, tutorials blogs and books are here to help.* For the data processing part i've used Pandas (https://pandas.pydata.org/). Pandas make working with data easy. You can load tables from CSV, Excel, python data structures and reorder them, drop columns, add columns, index by a column and many other transformations.* For working with neural networks i've chosen Keras (https://keras.io/). Keras is a high level neural network wrapper over more lower level API's like Tensorflow and one can build a multi - layer neural network with a dozen lines of code or so. This is a great advantage because we can build something useful on the great work of other people. Well this is the basic stuff of programming, build on other smaller building blocks.2. Basic concepts of machine learningThe scope of this tutorial is not to teach machine learning, but merely to outline one of it's possible use cases and how we can practically apply it to this use case.   Neural networks are data structures that resemble brain cells called neurons. Science discovered that a brain has special cells named neurons that communicate with other neurons by electrical impulses through \"lines\" called axons. If stimulated sufficiently (from many other neurons) the neurons will trigger an electric impulse further away in this \"network\" stimulating other neurons. This of course is a oversimplification of the process, but basically computer algorithms try to replicate this biological process.   In computer neural nets each neuron has a \"trigger point\" where if stimulated over that point it will propagate the stimulation forward, if not it won't. For this each simulated neuron will have a bias, and each axon a weight. After a random initialization of these values a process called \"learning\" starts this means in a loop an algorithm will do this steps:- stimulate the input neurons- propagate the signals through the network layers until the output neurons- read the output neurons and compare the results with the desired results- tweak the axons weights for a better result next time- start again until the number of loops has been reachedIf you like to know more details about this process you can check out this article: https://mattmazur.com/2015/03/17/a-step-by-step-ba.... There are also numerous books and tutorials out there.One more thing, here we'll be using a supervised learning method. That means we'll teach the algorithm the inputs and the outputs also, so that given a new set of inputs it can predict the output.3. How the data is prepared (the most important step) In many machine learning and neural network problems data preparation is a very important part and it will cover:- get the raw data- data cleanup: this will mean removing orphan values, aberrations or other anomalies- data grouping: taking many datapoints and transforming into an aggregated datapoint- data enhancing: adding other aspects of the data derived from own data, or from external sources- splitting the data in train and test data- split each of the train and test data into inputs and outputs. Typically a problem will have many inputs and a few outputs- rescale the data so it's between 0 and 1 (this will help the network removing high/low value biases)Getting the raw dataIn our case getting data for MongoDb in python is really easy. Given our datapoints collection just this lines of code will doclient = MongoClient(host, port).weather.datapoints \n\ncursor = client.find(\n            {'$and' : [\n                {'date' : {'$gte' : start_date}},\n                {'date' : {'$lte' : end_date}}\n            ]}\n        )\ndata = list(cursor)\n..Data cleanupThe empty values in the dataframe are droppeddataframe = dataframe.dropna()Data grouping & data enhancingThis is a very important step, the many small datapoins will be grouped into intervals of 6 hours. For each group several metrics will be calculated on each of the sensors (humidity, rain, temperature, light, pressure)- min value- max value- mean - 70, 90, 30, 10 percentiles- nr of times there has been a rise in a sensor- nr of times there has been a fall in a sensor- nr of times there has been steady values in a sensorAll of these things will give the network information for a datapoint, so for each of the 6 hours intervals these things will be known.From a dataframe that looks like this:_id date  humidity  light  pressure  rain  temperature\n                                                                            \n04_27_2017_03_08 2017-04-27 03:08:36      67.0    0.0    1007.0   0.0         11.0\n04_27_2017_03_19 2017-04-27 03:19:05      66.0    0.0    1007.0   0.0         11.0\n04_27_2017_03_29 2017-04-27 03:29:34      66.0    0.0    1007.0   0.0         11.0 And the transformation will be:\"_id date  humidity_10percentile  humidity_30percentile  humidity_70percentile  humidity_90percentile  humidity_avg         ...          temperature_avg  temperature_fall  temperature_max  temperature_min  temperature_rise  temperature_steady                                                                                                                                                ...                                                                                                                   \n04_27_2017_0 2017-04-27 03:08:36                   59.6                   60.8                   63.2                   66.0     62.294118         ...                10.058824                 2             11.0              9.0                 1                  14\n04_27_2017_1 2017-04-27 06:06:50                   40.3                   42.0                   60.0                   62.0     50.735294         ...                14.647059                 3             26.0              9.0                11                  20\n04_27_2017_2 2017-04-27 12:00:59                   36.0                   37.0                   39.8                   42.0     38.314286         ...                22.114286                 1             24.0             20.0                 5                  29 After this a new column named \"has_rain\" will be added. This will be the output (our predicted variable). Has rain will be 0 or 1 depending if the rain average is above a threshold (0.1). With pandas it's as simple as:dataframe.insert(loc=1, column='has_rain', value=numpy.where(dataframe['rain_avg'] > 0.1, 1, 0))Data cleanup (again)- we'll drop the date column because it's no use to us, and also remove datapoints where the minimum temperature is below 0 because our weather station it doesn't have a snow sensor, so we won't be able to measure if it snoweddataframe = dataframe.drop(['date'], axis=1)\n\ndataframe = dataframe[dataframe['temperature_min'] >= 0]Data enhancing Because data in the past might influence our prediction of the rain, we need for each of the dataframe rows to add columns reference to the past rows. This is because each of the row will serve as a training point, and if we want the prediction of the rain to take into account previous datapoints that's exactly what we should do: add more columns for datapoints in the past ex:_id has_rain  humidity_10percentile  humidity_30percentile  humidity_70percentile  humidity_90percentile          ...           temperature_steady_4  temperature_steady_5  temperature_steady_6  temperature_steady_7  temperature_steady_8                                                                                                                         ...                                                                                                                       \n04_27_2017_3         0                   36.0                   44.8                   61.0                   63.0          ...                            NaN                   NaN                   NaN                   NaN                   NaN\n04_28_2017_0         0                   68.0                   70.0                   74.0                   75.0          ...                           14.0                   NaN                   NaN                   NaN                   NaN\n04_28_2017_1         0                   40.0                   45.0                   63.2                   69.0          ...                           20.0                  14.0                   NaN                   NaN                   NaN\n04_28_2017_2         0                   34.0                   35.9                   40.0                   41.0          ...                           29.0                  20.0                  14.0                   NaN                   NaN\n04_28_2017_3         0                   36.1                   40.6                   52.0                   54.0          ...                           19.0                  29.0                  20.0                  14.0                   NaN\n04_29_2017_0         0                   52.0                   54.0                   56.0                   58.0          ...                           26.0                  19.0                  29.0                  20.0                  14.0\n04_29_2017_1         0                   39.4                   43.2                   54.6                   57.0          ...                           18.0                  26.0                  19.0                  29.0                  20.0\n04_29_2017_2         1                   41.0                   42.0                   44.2                   47.0          ...                           28.0                  18.0                  26.0                  19.0                  29.0 So you see that for every sensor let's say temperature the following rows will be added: \"temperature_1\" , \"temperature_2\" .. meaning temperature on the previous datapoint, temperature on the previous two datapoints etc. I've experimented with this and i found that a optimum number for our 6 hour groupings in 8. That means 8 datapoints in the past (48 hours). So our network learned the best from datapoins spanning 48 hours in the past.Data cleanup (again) As you see, the first few columns has \"NaN\" values because there is nothing in front of them so they should be removed because they are incomplete. Also data about current datapoint should be dropped, the only exception is \"has_rain\". the idea is that the system should be able to predict \"has_rain\" without knowing anything but previous data.Splitting the data in train and test data This is very easy due to Sklearn package:from sklearn.model_selection import train_test_split \n\n...\n\nmain_data, test_data = train_test_split(dataframe, test_size=percent_test_data) \n\n...This will split the data randomly into two different setsSplit each of the train and test data into inputs and outputs Presuming that our \"has_rain\" interest column is located firstX = main_data.iloc[:, 1:].values\n\ny = main_data.iloc[:, 0].values Rescale the data so it's between 0 and 1 Again fairly easy because of sklearnfrom sklearn.preprocessing import StandardScaler\n\nfrom sklearn.externals import joblib\n\n..\n\nscaler = StandardScaler()\n\nX = scaler.fit_transform(X) \n\n...\n\n# of course we should be careful to save the scaled model for later reuse\n\njoblib.dump(scaler, 'model_file_name.save') 4. How the actual neural network wrapper API works (Keras)Building a multi layer neural network with Keras is very easy:from keras.models import Sequential\n\nfrom keras.layers import Dense\nfrom keras.layers import Dropout \n...\ninput_dimensions = X.shape[1] \noptimizer = 'rmsprop'\ndropout = 0.05\nmodel = Sequential()\ninner_nodes = int(input_dimensions / 2)\nmodel.add(Dense(inner_nodes, kernel_initializer='uniform', activation='relu', input_dim=input_dimensions))\nmodel.add(Dropout(rate=dropout))\nmodel.add(Dense(inner_nodes, kernel_initializer='uniform', activation='relu'))\nmodel.add(Dropout(rate=dropout))\nmodel.add(Dense(1, kernel_initializer='uniform', activation='sigmoid'))\nmodel.compile(optimizer=optimizer, loss='mean_absolute_error', metrics=['accuracy']) \n\nmodel.fit(X, y, batch_size=1, epochs=50)\n...\n\n# save the model for later use\nclassifier.save('file_model_name')So what does this code mean? Here we're building a sequential model , that means sequentially all the layers will be evaluated.a) we declare the input layer (Dense), here all the inputs from our dataset will be initializedm so the \"input_dim\" parameter must be equal to the row lengthb) a Dropout layer is added. To understand the Dropout first we must understand what \"overfitting\" means: it's a state in which the network has learned too much particularities for a specific dataset and will perform badly when confronted to a new dataset. The dropout layer will disconnect randomly neurons at each iteration so the network won't overfit.c) another layer of Dense is addedd) another Dropoute) the last layer is added with one output dimension (it will predict only yes/no)f) the model is \"fitted\" that means the learning process will begin, and the model will learnOther parameters here:- activation functions (sigmoid, relu). This are functions that dictate when the neuron will transmit it's impulse further in the network. There are many, but sigmoid and relu are the most common. Check out this link for more details: https://towardsdatascience.com/activation-function...- kernel_initializer function (uniform). This means that all the weights are initialized with random uniform values- loss function (mean_absolute_error). This function measures the error comparing the network predicted result versus the ground truth. There are many alternatives: https://keras.io/losses/- metrics function (accuracy). It measures the performance of the model- optimiser functions (rmsprop). It optimizes how the model learn through backpropagation.- batch_size. Number of datapoints to take once by Keras before applying optimizer function- epochs: how many times the process it's started from 0 (to learn better)There is no best configuration for any network or dataset, all these parameters can an should be tuned for optimal performance and will make a big difference in prediction success.5. Future improvementsLet's start from the weather station, i can see a lot of improving work to be done here:- add a wind speed / direction sensor. This could be a very important sensor that i'm missing in my model- experiment with UV rays, gas and particle sensors- add at least two stations in the zone for better data (make some better averages)- collect a few more years of data, i've experimented with just a year and a halfSome processing improvements:- try to incorporate data from other sources into the model. You can start to import wind speed data and combine with the local station data for a better model. This website offers historical data: https://www.wunderground.com/history/- optimize the Keras model better by adjusting: layers, nr of neurons in layers, dropout percents, metrics functions, optimiser functions, loss functions, batch size, learning epochs- try other model architectures, for example i've experimented with LSTM (long short term memory) but it gived slightly poorer results)To try different parameters on the learning model you can usepython train.py --days_behind 600 --test-file-percent 10 --datapoints-behind 6 --hour-granularity 6 --grid-searchThis will search through different \"batch_size\", \"epoch\", \"optimizer\" and \"dropout\" values, evaluate all and print out the best combination for your data.If you have some feedback on my work please share it, thanks for staying till the end of the tutorial!", "step_imgs": ["https://cdn.instructables.com/F8Q/QY93/JQKTK5PG/F8QQY93JQKTK5PG.LARGE.jpg"], "step_title": "Step 6: How Does It Work"}, {"step": 7, "steps_text": "   I was wondering if i can get better results with a more reliable weather station, so i've searched a bit, and i've came across \"Darksky API\" (https://darksky.net/dev), this is a great tool that provides current and historical weather data with many more sensor data:- temperature- humidity- pressure- wind speed- wind gust- ub index- visibilitySo this beeing data from an official weather station, and having more parameters i thought it should perform better so i've gave it a try. To replicate my findings:1.Download the data from darsky or import my MongoDb collection:a) Download- to download your self, first create an account in darsky and get the API key- replace the API key in download_import/config.py- also in the config replace the geographic coordonates for the location you want to predict the rain- in a console activate \"weather\" anaconda environment and run:python download_import/darksky.py -d 1000- the free version of the API is limited to 1000 requests per day so if you want more data you need to wait for a longer timeb) Import my downloaded data for Bucharest city- in a console runmongoimport -d weather -c darksky --file sample_data/darksky.json 2. When you train the model specify that it should run on \"darksy\" datasetpython train.py -d 2000 -p 20 -dp 4 -hg 6 --data-source darksky3. To see the results run predict batch script as beforepython predict_batch.py -f sample_data/test_data.csvYou'll see that the overall prediction percent has gone from about 80% to 90%. Also the prediction accuracy when accounting only rainy days has gone up.So yes the dataset it really matters", "step_imgs": [], "step_title": "Step 7: Bonus: Using an Official Weather Dataset"}], "channel": "Arduino"}, {"category": "technology", "description": "The purpose of this Instructable is to show you how to write a half-life program on your calculator. The program will make it very quick and easy to find to half-life, initialmass, time, or final mass. All you have to do is enter three of the variables (I will explain more on this later) and the calculator will compute the fourth one. This means no more logarithms or decimal exponents!", "title": "Half-Life Calculator Program (Ti-89, Ti-84, and Ti-83)", "url": "https://www.instructables.com/id/Half-Life-Calculator-Program-Ti-89-Ti-84-and-Ti/", "section": "technology", "steps": [{"step": 1, "steps_text": "\u00a0The name of the program can be whatever you want.\u00a0 I simply called it \"hl\" because it is nice and short.Ti-89\nTo create the program, just follow the pictures.\u00a0Ti-83 & Ti-84\nI can't take screen shots on my Ti-83 so you will just have to follow my directions.\n1. Press PRGM and arrow over to \"NEW\" and\n2.\u00a0Hit enter and give the program a name. (It must be 8 or less characters)", "step_imgs": ["https://cdn.instructables.com/F53/LUEE/GV279LCX/F53LUEEGV279LCX.LARGE.jpg", "https://cdn.instructables.com/FHZ/S7IF/GV279LCW/FHZS7IFGV279LCW.LARGE.jpg", "https://cdn.instructables.com/FUN/4S16/GV279LCV/FUN4S16GV279LCV.LARGE.jpg"], "step_title": "Step 1: Creating the Program"}, {"step": 2, "steps_text": "The easiest way to write the program is to look at the extended screenshot I made.\u00a0 It is crucial to type everything EXACTLY as it is in the picture.\u00a0 One error could mess up the entire program. Make sure you type the correct amount of parentheses.Ti-89\nDepending on how familiar you are with programing, you might not know how to enter some of the commands.\u00a0 Here's how to type all the symbols you will need.\nThe colon represents one line of commands.\u00a0 Hit enter to get to the next line. To type the extra colons on line four, press 2nd then 4.\nTo input \"Prompt\" press F3, 5\nThe fastest way to type letters is by pressing \"alpha\" twice to turn on alpha lock\nFor the \"If\u00a0 Then\" command, press F2, 2, Enter\nThe arrow is created by pressing the STO> button (it's right above the ON button)\nTo input \"Disp\" press F3, 2\nYou can type quotes by pressing 2nd, 1Ti-83 & Ti-84\n*Please read the list below because your program won't look exactly like the one in the picture!\nYour program will start off differently from the picture.\u00a0 Type (To type \"Input\"\u00a0press PRGM, right arrow, enter)(To type the extra colons, press \"alpha\", \".\")\u00a0\u00a0\u00a0 Input \"halflife\",x:Input \"mass\",y:Input \"time\",z:Input \"mass2\",t\nThe colon represents one line of commands.\u00a0 Hit enter to get to the next line.\nTo input \"Prompt\" press PRGM, right arrow, 2\nThe fastest way to type letters is by pressing 2nd, \"alpha\"\u00a0to turn on alpha lock\nFor the \"If\u00a0\" command, press PRGM, 1\nTo type the equals sign, press 2nd, \"MATH\", enter\nFor the \"Then\" command (This should be on its own line for the Ti-83 and 84), press PRGM, 2\nWhere the picture says \"EndIf\" type \"End\" (PRGM, 7) instead\nThe arrow is created by pressing the STO> button (it's right above the ON button)\nYou can type quotes by pressing \"alpha\", \"+\"", "step_imgs": ["https://cdn.instructables.com/FS0/DMGR/GV279LCN/FS0DMGRGV279LCN.LARGE.jpg"], "step_title": "Step 2: Writing the Program"}, {"step": 3, "steps_text": "In order to use this program you must input three variables and the calculator will give you the fourth one.\u00a0 The four variables are the half-life, Initial mass, time, and the second mass.\u00a0 You must input 0 (zero) for the variable that you want the calculator to find.\nHere's how to start the programTi-89\nType the name of your program in the home screen the end it with two parentheses. Then hit enterMine looks like this: Ex. hl()\nTi-83 &Ti-84\nPress PRGM (as if you haven't done that enough yet!) then use the arrows or numbers to select the half-life program.\u00a0 Then hit enter.", "step_imgs": ["https://cdn.instructables.com/FNO/7O9I/GV279LBY/FNO7O9IGV279LBY.LARGE.jpg"], "step_title": "Step 3: Using the Half-Life Program"}, {"step": 4, "steps_text": "I will finally show you the four ways this program can be used.\u00a0In the red is the half-life of carbon-14,\u00a0green is the mass,\u00a0blue is the time, and the\u00a0yellow is the second mass.\n1. Solve for the second mass (yellow)\nType in 5730 and\u00a0hit enter\nType in 128 and hit enter\nType in 11460 and hit enter\nTo solve for \"Mass2\" type in 0 (zero)\n*The answer should be 32*\n2. Solve for time (blue)\nType in the half-life, mass and mass2\nType zero for the time\n*The answer should be 11460*\n3. Solve for\u00a0Mass (the first one) (green)\nType in half-life, time and mass2\nType zero in for \"Mass\"\u00a0\u00a0\n*The answer should be 128*\n4. Solve for\u00a0Half-life\nType in mass, time and mass2\nType in zero for \"halflife\"\n*The answer should be 5730*\nIf you do not get the right answer, double-check your program for errors.\u00a0 If you need more help with anything, even if it's not just about this program don't hesitate to ask!\nHere are the links to my other programs (they are meant for the Ti-83 and 84 but you can pretty easily change them for the Ti-89)https://www.instructables.com/id/Quadratic-Formula-for-the-TI-83-and-84/https://www.instructables.com/id/Herons-Formula-program-for-the-TI-83-and-84/", "step_imgs": ["https://cdn.instructables.com/FTA/F7T4/GV279MSJ/FTAF7T4GV279MSJ.LARGE.jpg"], "step_title": "Step 4: Using the Program"}], "channel": "Software"}, {"category": "technology", "description": "This is a picture of the Differential Scanning Analysis (DSC) machine. It uses a combination of heating and cooling to create a heat flow graph. They are often used to determine thermodynamic properties of samples.", "title": "How to Perform a Differential Scanning Calorimetry Analysis of a Polymer", "url": "https://www.instructables.com/id/How-to-Perform-a-Differential-Scanning-Calorimetry/", "section": "technology", "steps": [{"step": 1, "steps_text": "Before a DSC analysis can be performed, you must first turn on the cooling machine (used to cool the sample at the appropriate times) and weigh out your sample. How to do perform these tasks is explained in the following steps.", "step_imgs": [], "step_title": "Step 1: Preliminaries"}, {"step": 2, "steps_text": "Before performing anything else, it is best to turn on the cooling unit first. This allows this machine to turn on fully and work to its fullest potential during DSC. To turn on this machine, press the power button so the portion with the line is pressed down.", "step_imgs": ["https://cdn.instructables.com/FVX/PEFY/IGL6DCZI/FVXPEFYIGL6DCZI.LARGE.jpg"], "step_title": "Step 2: Turn on the Cooling Unit"}, {"step": 3, "steps_text": "The next step is to prepare your sample. The program that records DSC data requires the weight of your sample in milligrams. Turn on the scale using the power button.", "step_imgs": ["https://cdn.instructables.com/FFS/WG69/IGL6DCZJ/FFSWG69IGL6DCZJ.LARGE.jpg", "https://cdn.instructables.com/FYE/LG0K/IGL6DCZK/FYELG0KIGL6DCZK.LARGE.jpg"], "step_title": "Step 3: Weigh Out Your Sample"}, {"step": 4, "steps_text": "Obtain a sample tray and a lid. Place the tray on the scale and click the tare button to zero out the scale with the tray sitting on top. Remove your tray from the scale and begin to load your sample into the tray using the forceps pictured. Reweigh your tray and sample until you obtain between 5 and 10 milligrams of sample. Once you have done this, gently place the lid on top of your sample in the tray.", "step_imgs": ["https://cdn.instructables.com/FMQ/P3TP/IGTASSLI/FMQP3TPIGTASSLI.LARGE.jpg", "https://cdn.instructables.com/FPN/0DGN/IGL6DCZO/FPN0DGNIGL6DCZO.LARGE.jpg", "https://cdn.instructables.com/F72/WOAD/IGTASSTD/F72WOADIGTASSTD.LARGE.jpg"], "step_title": "Step 4: Weigh Out Your Sample (continued)"}, {"step": 5, "steps_text": "Pull down the bottom cylinder on the crimper (pictured above) and place your sample tray with the top on it on the platform. Allow the cylinder to rise back up and surround the tray. Then slowly press the crimper down onto the sample, applying a significant amount of pressure once the bottom contacts the tray. Allow the handle to lift back up and retrieve your crimped sample.", "step_imgs": ["https://cdn.instructables.com/FG6/VPI6/IGL6DG70/FG6VPI6IGL6DG70.LARGE.jpg", "https://cdn.instructables.com/FCR/HZY4/IGL6DG74/FCRHZY4IGL6DG74.LARGE.jpg", "https://cdn.instructables.com/FFS/45UG/IGL6DG7E/FFS45UGIGL6DG7E.LARGE.jpg", "https://cdn.instructables.com/FGN/GS3B/IGL6DG6N/FGNGS3BIGL6DG6N.LARGE.jpg"], "step_title": "Step 5: Crimp Your Sample"}, {"step": 6, "steps_text": "Open the DSC machine by pressing the indentation on the top and open the black swivel portion by turning it to the left.", "step_imgs": ["https://cdn.instructables.com/FNG/4PCU/IGL6DGWU/FNG4PCUIGL6DGWU.LARGE.jpg", "https://cdn.instructables.com/F8Q/OQZN/IGS9GL7D/F8QOQZNIGS9GL7D.LARGE.jpg", "https://cdn.instructables.com/FY3/RO9L/IGS9GL7N/FY3RO9LIGS9GL7N.LARGE.jpg"], "step_title": "Step 6: Load Your Sample Into the DSC Machine"}, {"step": 7, "steps_text": "DSC machines use a reference pan as a comparison during DSC analysis. This pan is always placed on the right side of the DSC machine while your actual sample is placed on the left (see picture). In order to load your sample, remove the cover of the sample slots using the forceps. Then drop the sample into the slot and replace the cover. Do this for both the actual sample and the reference sample.", "step_imgs": ["https://cdn.instructables.com/FOG/7MU0/IGS9GL84/FOG7MU0IGS9GL84.LARGE.jpg", "https://cdn.instructables.com/F20/2JZZ/IGTASV3U/F202JZZIGTASV3U.LARGE.jpg"], "step_title": "Step 7: Load Your Sample Into the DSC Machine (continued)"}, {"step": 8, "steps_text": "Once your samples are loaded into the machine, close the swivel portion and press down the top until it clicks closed.", "step_imgs": ["https://cdn.instructables.com/F6Q/WOY5/IGS9GL59/F6QWOY5IGS9GL59.LARGE.jpg", "https://cdn.instructables.com/FNG/4PCU/IGL6DGWU/FNG4PCUIGL6DGWU.LARGE.jpg"], "step_title": "Step 8: Close the DSC Machine"}, {"step": 9, "steps_text": "It is now time to enter all of the necessary information into the DSC computer program to get the desired results. How to do so is explained out in the next several steps.", "step_imgs": [], "step_title": "Step 9: Prepare the Program"}, {"step": 10, "steps_text": "Typically, the Pyris program (the program that records the data from the analysis) automatically opens on the computer connected to the DSC machine, so it should already be open. In order for the program to save the information gathered from your DSC analysis, you must give your sample a name in the \"Sample ID\" box. In the example above, the sample name is \"Chocolate\". It is best to choose a name relevant to your sample so you can retrieve the correct data at a later time. Additionally, enter a file name in the \"File Name\" box and click the \"Browse...\" button to find a location on the computer to save your data. The \"File Name\" and \"Sample ID\" can be the same thing if desired. Additionally, the program requires the mass of your sample in order to gather accurate data. Enter this information in the \"sample weight\" box pictured above.", "step_imgs": ["https://cdn.instructables.com/F87/WJHB/IGS9H6QE/F87WJHBIGS9H6QE.LARGE.jpg"], "step_title": "Step 10: Enter Your Sample Name and Mass"}, {"step": 11, "steps_text": "In order to correctly perform a proper DSC analysis of your polymer, a heating and cooling cycle that includes the glass transition temperature (Tg) of your polymer should be created in Pyris. It is best to set the initial value to a temperature well below this Tg and heat to a value above the relevant Tg. For example, polymethacrylate (PMMA) has a Tg around 105 Celsius. For a DSC of this polymer, we set the initial temperature to 30 Celsius and heat to 185 Celsius to ensure that we pass its Tg. To begin to set up the cycle, enter your initial temperature in the section labeled \"Set Initial Values\" under the \"Initial State\" tab.", "step_imgs": ["https://cdn.instructables.com/FC0/Z4W6/IGS9H5IV/FC0Z4W6IGS9H5IV.LARGE.jpg"], "step_title": "Step 11: Set Up a Heating and Cooling Cycle"}, {"step": 12, "steps_text": "To make the heating and cooling cycle, create steps under the \"Program\" tab at the top of the program. To create a step, click the \"Add a Step...\" button on the right side of the window. Set the ending temperature you wish to achieve by the end of that step in the \"To:\" space. For example, if I wish to heat from the initial value of 30 degrees Celsius to 185 degrees Celsius in step one, I would enter \"185\" in this box. You must also pick a heating or cooling rate for each step. 10 degrees Celsius per minute is a reasonable rate for most polymers, but it may be best to look this value up online for your specific polymer. If your rate is not already set to your desired value, enter it into the \"Rate:\" box. Continue to make steps until you have made a program that will heat and cool your sample the desired number of times. Making a heating/cooling cycle that repeats twice is a good rule of thumb just to ensure that nothing went wrong the first time around.", "step_imgs": ["https://cdn.instructables.com/FSN/SHYD/IGS9H5JB/FSNSHYDIGS9H5JB.LARGE.jpg"], "step_title": "Step 12: Set Up a Heating and Cooling Cycle (continued)"}, {"step": 13, "steps_text": "Once you have properly loaded your sample, click the \"start\" button on the right side of the screen (pictured above). DSC analysis will then begin. This process usually take between 1 and 2 hours.", "step_imgs": ["https://cdn.instructables.com/FWK/QB9H/IGS9HE02/FWKQB9HIGS9HE02.LARGE.jpg"], "step_title": "Step 13: Start the Analysis"}, {"step": 14, "steps_text": "Once your DSC analysis has concluded, it is now okay to remove the sample in the same fashion that you loaded it into the machine. A heat flow versus temperature graph will have been created on the Pyris program automatically. You have successfully performed a DSC analysis of your sample!", "step_imgs": [], "step_title": "Step 14: Finishing Up"}], "channel": "Science"}, {"category": "technology", "description": "This instructable explains how I plot temperature sensor DHT11 data using Arduino Uno and Raspberry Pi. In this temperature sensor is connected with Arduino Uno and Arduino Uno is connected serially with Raspberry Pi. At Raspberry Pi Side, matplotlib,numpy and drawnow libraries are used to plot graphs.", "title": "Plot DHT11 Data Using Raspberry Pi and Arduino UNO", "url": "https://www.instructables.com/id/Plot-Data-of-DHT11-Using-Raspberrypi-and-Arduino-U/", "section": "technology", "steps": [{"step": 1, "steps_text": "1. Raspberry Pi2. Arduino Uno3. DHT11 Temperature Sensor4. Jumper Wires5. Breadboard", "step_imgs": ["https://cdn.instructables.com/F5U/38E5/JNAL4761/F5U38E5JNAL4761.LARGE.jpg", "https://cdn.instructables.com/F68/DUEJ/JNAL476Z/F68DUEJJNAL476Z.LARGE.jpg", "https://cdn.instructables.com/FRE/GKYI/JNAL47ZB/FREGKYIJNAL47ZB.LARGE.jpg", "https://cdn.instructables.com/FS7/7GWJ/JNAL4808/FS77GWJJNAL4808.LARGE.jpg", "https://cdn.instructables.com/FKX/3JM0/JNAL4817/FKX3JM0JNAL4817.LARGE.jpg"], "step_title": "Step 1: Things Needed for the Project"}, {"step": 2, "steps_text": "Note :- You can use Arduino IDE of windows,Linux or Mac to upload sketch in Arduino UNO.First step is to install Arduino IDE for that open browser in Raspberry Pi and open the link given below Arduino Previous IDEThen download the Linux ARM version and extract it using commandtar  -xf file nameAfter extracting you will see a  new directory. Here I am using  arduino-1.8.2 IDE. Then go to directory by using command.cd arduino-1.8.1To  run Arduino IDE, use this command in arduino-1.8.2 directory ./arduinoHow to use libraries To install any libraries in Arduino , simply download the library and  paste in arduino 1.8.2  ==> libraries folder . NOTE:- Make sure there  is no ( - ) in library folder for ex  (DHT-sensor). If there is any  (-),rename it .we will use two libraries in this instructable, DHT_Sensor and Adafruit_Sensor", "step_imgs": ["https://cdn.instructables.com/FNA/JER1/JN4VHBGV/FNAJER1JN4VHBGV.LARGE.jpg", "https://cdn.instructables.com/F95/NZSH/JN4VHBJ2/F95NZSHJN4VHBJ2.LARGE.jpg", "https://cdn.instructables.com/FQI/71J5/JN4VHC9I/FQI71J5JN4VHC9I.LARGE.jpg", "/assets/img/pixel.png", "/assets/img/pixel.png"], "step_title": "Step 2: Download and Install Arduino IDE in Raspberry Pi"}, {"step": 3, "steps_text": "Now, lets get python and Arduino talking together. Firstly we need a simple program to get the Arduino sending data over the serial port. The  following program is a simple program that will have the Arduino count  and send the data to the serial port.Arduino Code#include \"DHT.h\" float tempC;  // Variable or holding temp in C float tempF;  // Variable for holding temp in F float humidity; //Variable for holding pressure reading#define DHTPIN 7 // what digital pin we're connected to#define DHTTYPE DHT11 // DHT 11//#define DHTTYPE DHT22 // DHT 22 (AM2302), AM2321//#define DHTTYPE DHT21 // DHT 21 (AM2301)// Initialize DHT sensor.DHT dht(DHTPIN, DHTTYPE);  void setup(){Serial.begin(115200); //turn on serial monitor dht.begin();   //initialize dht }void loop() {tempC = dht.readTemperature(); //  Be sure to declare your variableshumidity = dht.readHumidity(); // Read HumiditySerial.print(tempC);Serial.print(\" , \");Serial.print(humidity);Serial.print(\"\\n\"); // for new linedelay(2000); //Pause between readings. }Once sketch is compiled , select board and port and upload it.", "step_imgs": ["https://cdn.instructables.com/F55/FTUT/JN4VHDF3/F55FTUTJN4VHDF3.LARGE.jpg"], "step_title": "Step 3: Code for Arduino"}, {"step": 4, "steps_text": "Once code is uploaded, Install some libraries so that we can plot graph of data which is coming serially from Arduino Uno.1. PySerial  is a library which provides support for serial connections over a variety of different devices. To install it use command.Sudo apt-get install python-serial2. Numpy is a package that defines a multi-dimensional array object and associated fast math functions that operate on it.  It also provides  simple routines for linear algebra and FFT (Fast Fourier Transform) and sophisticated  random-number generation. You can install it in many ways either use apt package or pip. Here I am installing using pip for that first we have to install pipsudo apt-get install python-pip python-dev build-essentialsudo pip install numpyor  if you wanna use apt packagesudo apt install python-numpy3. Matplotlib is a 2D plotting library which provides an object-oriented API for embedding plots into applications using general-purpose GUI toolkits like Tkinter, wxPython, Qt, or GTK+. To install it use commandsudo pip install matplotlibor sudo apt install python-matplotlib4. Drawnow is generally used to see  the results after each iteration as we use \"imshow\" in MATLAB. To install it use  command sudo pip install drawnow", "step_imgs": ["https://cdn.instructables.com/F8L/GRS7/JN4VHFC9/F8LGRS7JN4VHFC9.LARGE.jpg"], "step_title": "Step 4: Setup Raspberry Pi"}, {"step": 5, "steps_text": "Next step is to write a python script for that you can use any editor to write it.1. Plot data in one graphimport serial                      # import Serial Library\n\nimport numpy                    # Import numpyimport matplotlib.pyplot as plt                 #import matplotlib library from drawnow import *tempC = []     #Empty array<br>humidity = []arduino = serial.Serial(\"/dev/ttyACM0\", 115200)plt.ion()                   # interactive mode to plot live data<br>count = 0def makeFig():              #Create a function that makes our desired plot\n   plt.ylim(20,30)                              #Set y min and max values     plt.title('Real Time DHT11 Data')      #Plot the titleplt.grid(True)                                  #Turn the grid onplt.ylabel('Temp C')                            #Set ylabelplt.plot(tempC,'b^-', label='Degree C')       #plot the temperatureplt.legend(loc='upper right')                    #plot the legendplt2=plt.twinx()                                #Create a second y axis\n\nplt.ylim(50,70)                           #Set limits of second y axisplt2.plot(humidity, 'g*-', label='Humidity') #plot pressure data\n\nplt2.set_ylabel('Humidity')                    #label second y axisplt2.ticklabel_format(useOffset=False)           \n\nplt2.legend(loc='upper left')while True: # While loop that loops forever\n    while (arduino.inWaiting()==0): #Wait here until there is data                        pass #do nothing       arduinoString = arduino.readline()     dataArray = arduinoString.split(',')   #Split it into an array     temp = float( dataArray[0])     hum = float( dataArray[1])     tempC.append(temp)     humidity.append(hum)     drawnow(makeFig)\n\n     plt.pause(.000001)     count=count+1<br>     \n     if(count>20):    #only take last 20 data if data is more it will pop first              tempC.pop(0)                   humidity.pop(0)2. To plot humidity and temperature separatelyimport serial # import Serial Library\nimport numpy  # Import numpy import matplotlib.pyplot as plt #import matplotlib library from drawnow import *tempC = []     #Empty array humidity = []arduino = serial.Serial(\"/dev/ttyACM0\", 115200)   #Serial port to which arduino is connected and Baudrateplt.ion() #Tell matplotlib you want interactive mode to plot live datadef CreatePlot(): #Create a function that makes our desired plot\n    plt.subplot(2,1,1)  #Height,Width,First plot    plt.ylim(22,34)                                 #Set y min and max values\n    plt.title('Real Time DHT11 Data')      #Plot the title\n        plt.grid(True)                                  #Turn the grid on\n        plt.ylabel('Temp C')                            #Set ylabels\n        plt.plot(tempC,'b^-', label='Degree C')       #plot the temperature\n      plt.legend(loc='upper center')                    #plot the legend    plt.subplot(2,1,2)  # Height,Width,Second plot\n\n    plt.grid(True)    plt.ylim(45,70)             #Set limits of second y axis\n    plt.plot(humidity, 'g*-', label='Humidity (g/m^3)') #plot humidity data\n        plt.ylabel('Humidity (g/m^3)')    #label second y axis\n      plt.ticklabel_format(useOffset=False)           #to stop autoscale y axis\n       plt.legend(loc='upper center')while True: # While loop that loops forever\n    while (arduino.inWaiting()==0): #Wait here until there is data\n        pass #do nothing\n    arduinoString = arduino.readline() #read the data from serial port   dataArray = arduinoString.split(',')   #Split it into an array\n\n    temp = float( dataArray[0])            #Convert first element to floating number and put in temp    hum = float( dataArray[1])            #Convert second element to floating number and put in hum\n      tempC.append(temp)                     #Build our tempC array by appending temp reading\n        humidity.append(hum)                     #Building our humidity array by appending hum reading\n       drawnow(CreatePlot)\n       plt.pause(.000001)\n       count=count+1   if(count>20):    #only take last 20 data if data is more it will pop first\n        tempC.pop(0) # pop out first element\n                humidity.pop(0)", "step_imgs": ["https://cdn.instructables.com/F1P/Q9PU/JN4VHEYN/F1PQ9PUJN4VHEYN.LARGE.jpg", "https://cdn.instructables.com/F5K/9K3L/JN4VHEYW/F5K9K3LJN4VHEYW.LARGE.jpg"], "step_title": "Step 5: Python Scipt"}, {"step": 6, "steps_text": "Arduino ==> DHT113.3V ==> VCCGND ==> GNDD7 ==> OUT", "step_imgs": ["https://cdn.instructables.com/FRI/5HD4/JN4VG99Y/FRI5HD4JN4VG99Y.LARGE.jpg", "https://cdn.instructables.com/FKI/I62Q/JNAL486W/FKII62QJNAL486W.LARGE.jpg", "https://cdn.instructables.com/FA3/5KZJ/JNAL486X/FA35KZJJNAL486X.LARGE.jpg", "https://cdn.instructables.com/FBS/9UNN/JNAL488D/FBS9UNNJNAL488D.LARGE.jpg", "https://cdn.instructables.com/FF4/4B4A/JNAL488E/FF44B4AJNAL488E.LARGE.jpg", "https://cdn.instructables.com/FJY/ZUOA/JNAL488F/FJYZUOAJNAL488F.LARGE.jpg"], "step_title": "Step 6: Circuit Diagram"}, {"step": 7, "steps_text": "", "step_imgs": [], "step_title": "Step 7: Result"}], "channel": "Arduino"}, {"category": "technology", "description": "Greetings Instructable lovers and learners alike.  I have always loved Instructables, using many myself, and now I have one to give. This instructable was one on the Burning Questions 6 and I thought this would be a good way for me to start. Now, who is ready to learn form a high school/ college student?", "title": "How to Graph", "url": "https://www.instructables.com/id/How-to-Graph-1/", "section": "technology", "steps": [{"step": 1, "steps_text": "Here's a basic understanding of a graph( incase this is new to you)A Graph is a graphic (such as a chart or diagram) depicting the relationship between two or more variables used, for instance, in visualising scientific data(Wikipedia).The most common way to display a graphs are like the following, please note that i'm starting out little and growing into more coplex graphs. none will be too extragavent.     *Bar     *Line     *Pie     *X and Y- Axis (similar to a line graph)", "step_imgs": [], "step_title": "Step 1: Understanding the Graph"}, {"step": 2, "steps_text": "The Bar Graph is easy to understand and to create. The Bar graph lets you visually see differences in two or more sources. If I have led you confused look at the graph provided to see what i mean.TO create the graph you would choose a topic, mine was favorite fruits(not shown). You then choose a set of different items, for instance different fruits. You then would research your so called topic to help form the graph form, basically finding  around so many people and finding out what they like or otherwise.          *note*try to make small graphs, whether it is a small over all number or using a Least common denominator as your incriments on the side.( like the multiples of 5)", "step_imgs": ["https://cdn.instructables.com/FA9/BSK2/FQWVUXVE/FA9BSK2FQWVUXVE.LARGE.jpg"], "step_title": "Step 2: The Bar Graph"}, {"step": 3, "steps_text": "Here is another easy one.This is similar to the bar graph. The graph shows the same increments on the side, But ALso have increments on the bottom. The source(s) are shown as lines now and show an increase over time or anything else. The source(s) names are now represented by a key if their is more than one source. if not, the single source is represented by the title.To create, make the same tally as in the bar graph but as over a lapse of time. you would create the graph as you did exactly like the bar graph, remembering to keep small, and show how the source rices or falls as it goes down the graphAnother graph that you may see is a scatter plot. This is where the sources does not go in the right order.", "step_imgs": ["https://cdn.instructables.com/FI4/TTYF/FR1230J9/FI4TTYFFR1230J9.LARGE.jpg", "https://cdn.instructables.com/FK1/UA7M/FR1230R9/FK1UA7MFR1230R9.LARGE.jpg"], "step_title": "Step 3: THe Line Graph"}, {"step": 4, "steps_text": "Mmmmm..Pie. Too bad this isn't like blueberry pie or anything. This is also called a circle graph but you'll mostly hear it as a pie chart.Now as you probably know, it's not a square anymore, it's a circle. THis graph shows your the portions of a source, naming each portion and stating how much percent it is out of the whole, usually 100%.To make it... Make a circle to start. Then see how many portions of a source there is. Using a protractor, or a fancy computer application, you would place the specific divisions in proportion of how much percent is use to make the portion. Like cutting the pie... mmmm pie. I'll be back, i got to get some pie now.", "step_imgs": ["https://cdn.instructables.com/F50/KJTA/FR12317C/F50KJTAFR12317C.LARGE.jpg"], "step_title": "Step 4: Pie Chart"}, {"step": 5, "steps_text": "Here is where you need the use of equations to solve.We're back to the squares, but this one has a source that you need to make. To make it you have a vertical line, a hoorizontal line, and incriment vertically and horizontally ranging from positive infinity to negative infinity.To put points on the graph you will be given coodinates. These coordinates are stated as (x,y). An example of that is (1,2) that is graphed one right and two up.Now say that you have 2 points (1,3) and (2,1) and you need to find out what the slope is. to find the slope you first label the coordinates, then follow the second image for the equation, and what you get is slope.What is you need the Slope- Intercept form, this fun little equation shows the direction that a slope goes and where it starts. this uses one coordinate and a slope.*if you don't have the slope, you can get it now* this equation is the same as the third image.to get the y-intercept or B, you need a coordinate (x,y) and a slope. then plug in the numbers and find out what B equals. last picture is a good example.", "step_imgs": ["https://cdn.instructables.com/FK0/77AI/FR12319A/FK077AIFR12319A.LARGE.gif", "https://cdn.instructables.com/FKP/GW62/FRA9SSZ5/FKPGW62FRA9SSZ5.LARGE.jpg", "https://cdn.instructables.com/FMQ/90VW/FRA9SSZX/FMQ90VWFRA9SSZX.LARGE.jpg", "https://cdn.instructables.com/FNW/HH96/FRA9ST5U/FNWHH96FRA9ST5U.LARGE.jpg"], "step_title": "Step 5: X-Y Axis Graph"}, {"step": 6, "steps_text": "You know a little bit about graphs. it's been really long time since i did the first four but i am avaliable to answer any question or problems if you post them.This was suppose to be for the burning questions 6.5, hope it still helps", "step_imgs": ["https://cdn.instructables.com/FT6/QUPY/FRA9ST6T/FT6QUPYFRA9ST6T.LARGE.jpg"], "step_title": "Step 6: Hey, Guess What"}], "channel": "Science"}, {"category": "No category to show", "description": "We all have pennies, and they are usually dirty. With this instructable, you can clean your pennies very easily using only a few steps.", "title": "Cleaning Pennies", "url": "https://www.instructables.com/id/Cleaning-Pennies/", "section": "home", "steps": [{"step": 1, "steps_text": "You will need:Dirty pennies1/4 cup vinegar1 tsp salta non-metal bowlnapkins/paper towels a cup or bowl of water", "step_imgs": ["https://cdn.instructables.com/F10/4XJP/IRW8MAHB/F104XJPIRW8MAHB.LARGE.jpg", "https://cdn.instructables.com/FX5/2UZF/IRW8MAHP/FX52UZFIRW8MAHP.LARGE.jpg", "https://cdn.instructables.com/FWA/EKKR/IRW8MA8G/FWAEKKRIRW8MA8G.LARGE.jpg", "https://cdn.instructables.com/FWC/R0T9/IRW8MA8W/FWCR0T9IRW8MA8W.LARGE.jpg", "https://cdn.instructables.com/FP3/LXQ7/IRW8MA94/FP3LXQ7IRW8MA94.LARGE.jpg", "https://cdn.instructables.com/FUH/HGPG/IRW8MAAP/FUHHGPGIRW8MAAP.LARGE.jpg"], "step_title": "Step 1: Gather Supplies"}, {"step": 2, "steps_text": "In a non-metal bowl, mix the salt and vinegar. Stir until the salt if completely dissolved.", "step_imgs": ["https://cdn.instructables.com/FGT/2S6S/IRW8MABZ/FGT2S6SIRW8MABZ.LARGE.jpg", "https://cdn.instructables.com/FRC/0KIQ/IRW8MADS/FRC0KIQIRW8MADS.LARGE.jpg", "https://cdn.instructables.com/F1Q/FFL5/IRW8MAFM/F1QFFL5IRW8MAFM.LARGE.jpg"], "step_title": "Step 2: Create the Cleaning Solution"}, {"step": 3, "steps_text": "Place about 5 pennies in the vinegar solution. Wait for 10-20 seconds, then remove the pennies and place them in water. This will remove any extra vinegar. If you don't do this, the pennies will start to turn a gross color of green.", "step_imgs": ["https://cdn.instructables.com/FCE/WEEB/IRW8MAFQ/FCEWEEBIRW8MAFQ.LARGE.jpg"], "step_title": "Step 3: Clean the Pennies"}, {"step": 4, "steps_text": "Take the pennies out of the water and place them on a napkin/paper towels. Dry them off and then you are done. You now have clean pennies!", "step_imgs": ["https://cdn.instructables.com/FRT/SKYF/IRW8MAGX/FRTSKYFIRW8MAGX.LARGE.jpg"], "step_title": "Step 4: Dry Them Off"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "This Instructable is designed to explain and illustrate how taxes affect consumers, producers, and the economy as a whole. You will follow step by step instructions to learn how to graph the economic burden of tax. You will then analyze the results of your work, and hopefully gain a general knowledge about microeconomic taxation.\u00a0 Before you begin, understand that the economic graph of supply and demand is a model; it illustrates a concept based on select economic assumptions- it does not reflect a precise reality. In the microeconomic models below, we hold all else constant, to show the effect of a single input (taxation) on a specific economy (gasoline and candy bars).", "title": "How to Graph the Burden of Tax", "url": "https://www.instructables.com/id/How-to-Graph-the-Burden-of-Tax/", "section": "home", "steps": [{"step": 1, "steps_text": "Supplies: -1-2 sheets of paper -a pencil -4 highlighters/colored pencils (each a different color) -a ruler (OPTIONAL) -a calculator (OPTIONAL) *NOTE: you will also need a very basic understanding of algebra.", "step_imgs": ["https://cdn.instructables.com/FE9/OOF3/HUIS7WXY/FE9OOF3HUIS7WXY.LARGE.jpg"], "step_title": "Step 1: Obtain Your Supplies"}, {"step": 2, "steps_text": "1.) Draw a simple graph with an x and y-axis. 2.) Title the graph Gasoline. *NOTE: make sure the graph is big enough for proper analysis; a good size graph will be about half a page length.", "step_imgs": ["https://cdn.instructables.com/FTN/ZMST/HTYHGJVZ/FTNZMSTHTYHGJVZ.LARGE.jpg"], "step_title": "Step 2: Part 1 (Graphing & Calculating)"}, {"step": 3, "steps_text": "1.) Label the x-axis Quantity\u00a0and the y-axis Price. 2.) Identify that Price is measured per gallon and Quantity is measured in # of gallons. *Use the image above as a reference for the slopes in part 3 and 4. 3.) Draw a line with a positive slope that is marginally steep 4.) Draw a line with a negative slope that is very steep. *NOTE: remember that this is a conceptual model (the lines do not have to be exact so a specific slope is not given); it is also not necessary to have the lines touch the axes.", "step_imgs": ["https://cdn.instructables.com/F8R/NZPS/HTYHGJWK/F8RNZPSHTYHGJWK.LARGE.jpg"], "step_title": "Step 3: "}, {"step": 4, "steps_text": "1.) Label the positive slope S\u00a0(supply). 2.) Label the negative slope D (demand). 3.) Put a point where S & D intersect and label \u00a0it E\u00a0(equilibrium).", "step_imgs": ["https://cdn.instructables.com/F13/68LP/HTZ84EHB/F1368LPHTZ84EHB.LARGE.jpg"], "step_title": "Step 4: "}, {"step": 5, "steps_text": "1.) Draw a vertical,dashed line from E to the x-axis. 2.) Label where this dashed line meets the axis 1,000 Q. 3.) Draw a horizontal, dashed line from\u00a0E to the y-axis. 4.) Label where this dashed line meets the axis $3.00 P. *NOTE: before taxation, the equilibrium quantity for gas is 1,000 gallons and the equilibrium price for gas is 3 dollars a gallon (consumers pay $3 a gallon for gas and producers receive $3 in sales revenue per gallon of gas).", "step_imgs": ["https://cdn.instructables.com/F59/ICHW/HTZ84EX8/F59ICHWHTZ84EX8.LARGE.jpg"], "step_title": "Step 5: "}, {"step": 6, "steps_text": "1.) Draw a line parallel to S approximately an inch to the left of S. 2.) Label the new line S1. 3.) Using an arrow, show that S shifted to S1. 4.) Label the arrow tax. *NOTE: the shift in supply was a direct result of taxation; see how this change will affect E,P, and Q.", "step_imgs": ["https://cdn.instructables.com/F8S/VA21/HTZ84FCT/F8SVA21HTZ84FCT.LARGE.jpg"], "step_title": "Step 6: "}, {"step": 7, "steps_text": "1.) Draw a point where S1 intersects D. 2.) Draw a vertical, dashed line from the new point to the x-axis. 3.) Label where the dashed line meets the axis 900 Q1. *NOTE: the equilibrium quantity has shifted from 1,000 gallons to 900 gallons of gas.", "step_imgs": ["https://cdn.instructables.com/FBS/32ZQ/HTZ84GKW/FBS32ZQHTZ84GKW.LARGE.jpg"], "step_title": "Step 7: "}, {"step": 8, "steps_text": "1.) Draw a new point where the vertical dashed line from Step 7 meets S. 2.) Draw a horizontal dashed line from this point to the y-axis. 3.) Label where the dashed line intersects the axis $2.90 P2 4.) Draw a horizontal, dashed line from the point intersecting S1 & D to the y-axis. 5.) Label where the dashed line intersects the axis $3.30 P1. *NOTE:\u00a0the imposed tax has shifted the equilibrium price up 30 cents to P1 (consumers now pay $3.30 per gallon of gas), and down 10 cents to P2 (producers now receive $2.90 in sales revenue per gallon of gas).", "step_imgs": ["https://cdn.instructables.com/FW6/N005/HTZ84JH4/FW6N005HTZ84JH4.LARGE.jpg"], "step_title": "Step 8: "}, {"step": 9, "steps_text": "1.) Take a highlighter or colored pencil and color in the rectangular region showing the change from P to P1. *NOTE: DO NOT color past the Q1 marker; use the image above as a reference. 2.) Calculate the economic\u00a0Cost to Consumers in this economy by finding the area of the colored rectangle: A=(3.30-3)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show\u00a0Cost to Consumers.", "step_imgs": ["https://cdn.instructables.com/FUY/AO3Q/HTZ84M9C/FUYAO3QHTZ84M9C.LARGE.jpg"], "step_title": "Step 9: "}, {"step": 10, "steps_text": "1.) Take a highlighter or colored pencil and color in the rectangular region showing the change from P to P2. *NOTE: DO NOT color past the Q1 marker; use the image above as a reference. 2.) Calculate the economic Cost to\u00a0Producers\u00a0in this economy by finding the area of the colored rectangle: A=(3-2.9)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show\u00a0Cost to Producers.", "step_imgs": ["https://cdn.instructables.com/F2V/9JKE/HTZ84N1Z/F2V9JKEHTZ84N1Z.LARGE.jpg"], "step_title": "Step 10: "}, {"step": 11, "steps_text": "1.) Take a highlighter or colored pencil and color in the triangular region showing the change from Q to Q1. *NOTE: DO NOT color past the Q1, S,and D\u00a0markers; use the image above as a reference. 2.) Calculate the economic Dead Weight Loss in this economy by finding the area of the colored triangle: A=(1/2)(3.3-2.9)(1,000-900).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show Dead Weight Loss.", "step_imgs": ["https://cdn.instructables.com/F3D/TGCM/HTZ84N2K/F3DTGCMHTZ84N2K.LARGE.jpg"], "step_title": "Step 11: "}, {"step": 12, "steps_text": "1.) Take a highlighter or colored pencil and make a border around the rectangular region encompassing\u00a0Cost to Consumers and Cost to Producers. 2.) Calculate the Total Tax Revenue in this economy by finding the area of the rectangle border: A=(3.3-2.9)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show Total Tax Revenue. *NOTE: the first part of the Total Tax Revenue equation is (3.3-2.9); this is the imposed tax per gallon of gas.", "step_imgs": ["https://cdn.instructables.com/FAE/2Z8N/HTZ84O7N/FAE2Z8NHTZ84O7N.LARGE.jpg"], "step_title": "Step 12: "}, {"step": 13, "steps_text": "Using your answers, determine whether consumers or producers had the greater burden of tax (the higher cost).", "step_imgs": ["https://cdn.instructables.com/FG1/YF25/HUIS82YS/FG1YF25HUIS82YS.LARGE.jpg"], "step_title": "Step 13: Part 2 (Analyzing)"}, {"step": 14, "steps_text": "In our gasoline example, we saw how consumers paid 30 cents more per gallon and producers lost 10 cents per gallon in revenues due to taxation. This interference in an economy unintentionally produces dead wight loss in which money is not gained by any party- it is merely lost due to market inefficiency. From this exercise, we can conclude that the burden of an imposed tax on a specific good will be shared by both consumers and producers; however, this burden is rarely shared equally. As a consumer, it is important for you to know how taxation can influence your purchasing power and which goods will be more burdensome (more costly) to you.", "step_imgs": [], "step_title": "Step 14: "}, {"step": 15, "steps_text": "*Use another piece of paper or use the back of your current sheet. Look at the graph above depicting the economy for Candy Bars. Using your new knowledge of the burden of tax, calculate how much the tax is per candy bar, the economic Cost to Consumers, Cost to Producers, Dead Weight Loss, and Total Tax Revenue.", "step_imgs": ["https://cdn.instructables.com/F8Y/OP1Y/HTZ84QJD/F8YOP1YHTZ84QJD.LARGE.jpg"], "step_title": "Step 15: "}, {"step": 16, "steps_text": "From the Candy Bars example we can see how producers have the greater burden of tax in this economy. If a tax is placed on candy bars, producers will loose 40 cents of sales revenue per bar while consumers will pay 10 cents more per bar. *NOTE: gasoline and candy bars had two very different results; as consumers we care more about a tax increase on gasoline than we do about candy bars because the burden of tax is significantly different for these two goods So why did it change...", "step_imgs": ["https://cdn.instructables.com/F6G/KE5E/HUIS82VD/F6GKE5EHUIS82VD.LARGE.jpg"], "step_title": "Step 16: "}, {"step": 17, "steps_text": "Remember Step 3 had you draw the slope of the supply and demand curves based on steepness. These slopes (steep or flat) are called price elasticities; the slope reflects how a good's supply and demand change compared to its price over time. Very inelastic goods (steep slopes) do not have a tendency to change when prices rise/fall. These goods are necessities and cannot be substituted easily: gasoline, water, toilet paper! If a tax is imposed on inelastic goods, consumers will have the greater burden. Elastic goods (flat slopes) are not necessities and typically have multiple substitutes so we tend to buy less when prices are high, and more when prices are low: candy bars, jewelry, TVs. If a tax is imposed on elastic goods, producers will have the greater burden. Taxation affects us all. Not all taxes are bad; as you have seen, they provide significant revenue for the government. However, understanding the burden of tax is important, especially when it involves the goods we value greatly. Next time you hear about a tax initiative, use your new knowledge and think about how much the policy will cost you and the economy as a whole.", "step_imgs": [], "step_title": "Step 17: Why It Changed & Why It Matters!"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "This Instructable is designed to explain and illustrate how taxes affect consumers, producers, and the economy as a whole. You will follow step by step instructions to learn how to graph the economic burden of tax. You will then analyze the results of your work, and hopefully gain a general knowledge about microeconomic taxation.\u00a0 Before you begin, understand that the economic graph of supply and demand is a model; it illustrates a concept based on select economic assumptions- it does not reflect a precise reality. In the microeconomic models below, we hold all else constant, to show the effect of a single input (taxation) on a specific economy (gasoline and candy bars).", "title": "How to Graph the Burden of Tax", "url": "https://www.instructables.com/id/How-to-Graph-the-Burden-of-Tax/", "section": "home", "steps": [{"step": 1, "steps_text": "Supplies: -1-2 sheets of paper -a pencil -4 highlighters/colored pencils (each a different color) -a ruler (OPTIONAL) -a calculator (OPTIONAL) *NOTE: you will also need a very basic understanding of algebra.", "step_imgs": ["https://cdn.instructables.com/FE9/OOF3/HUIS7WXY/FE9OOF3HUIS7WXY.LARGE.jpg"], "step_title": "Step 1: Obtain Your Supplies"}, {"step": 2, "steps_text": "1.) Draw a simple graph with an x and y-axis. 2.) Title the graph Gasoline. *NOTE: make sure the graph is big enough for proper analysis; a good size graph will be about half a page length.", "step_imgs": ["https://cdn.instructables.com/FTN/ZMST/HTYHGJVZ/FTNZMSTHTYHGJVZ.LARGE.jpg"], "step_title": "Step 2: Part 1 (Graphing & Calculating)"}, {"step": 3, "steps_text": "1.) Label the x-axis Quantity\u00a0and the y-axis Price. 2.) Identify that Price is measured per gallon and Quantity is measured in # of gallons. *Use the image above as a reference for the slopes in part 3 and 4. 3.) Draw a line with a positive slope that is marginally steep 4.) Draw a line with a negative slope that is very steep. *NOTE: remember that this is a conceptual model (the lines do not have to be exact so a specific slope is not given); it is also not necessary to have the lines touch the axes.", "step_imgs": ["https://cdn.instructables.com/F8R/NZPS/HTYHGJWK/F8RNZPSHTYHGJWK.LARGE.jpg"], "step_title": "Step 3: "}, {"step": 4, "steps_text": "1.) Label the positive slope S\u00a0(supply). 2.) Label the negative slope D (demand). 3.) Put a point where S & D intersect and label \u00a0it E\u00a0(equilibrium).", "step_imgs": ["https://cdn.instructables.com/F13/68LP/HTZ84EHB/F1368LPHTZ84EHB.LARGE.jpg"], "step_title": "Step 4: "}, {"step": 5, "steps_text": "1.) Draw a vertical,dashed line from E to the x-axis. 2.) Label where this dashed line meets the axis 1,000 Q. 3.) Draw a horizontal, dashed line from\u00a0E to the y-axis. 4.) Label where this dashed line meets the axis $3.00 P. *NOTE: before taxation, the equilibrium quantity for gas is 1,000 gallons and the equilibrium price for gas is 3 dollars a gallon (consumers pay $3 a gallon for gas and producers receive $3 in sales revenue per gallon of gas).", "step_imgs": ["https://cdn.instructables.com/F59/ICHW/HTZ84EX8/F59ICHWHTZ84EX8.LARGE.jpg"], "step_title": "Step 5: "}, {"step": 6, "steps_text": "1.) Draw a line parallel to S approximately an inch to the left of S. 2.) Label the new line S1. 3.) Using an arrow, show that S shifted to S1. 4.) Label the arrow tax. *NOTE: the shift in supply was a direct result of taxation; see how this change will affect E,P, and Q.", "step_imgs": ["https://cdn.instructables.com/F8S/VA21/HTZ84FCT/F8SVA21HTZ84FCT.LARGE.jpg"], "step_title": "Step 6: "}, {"step": 7, "steps_text": "1.) Draw a point where S1 intersects D. 2.) Draw a vertical, dashed line from the new point to the x-axis. 3.) Label where the dashed line meets the axis 900 Q1. *NOTE: the equilibrium quantity has shifted from 1,000 gallons to 900 gallons of gas.", "step_imgs": ["https://cdn.instructables.com/FBS/32ZQ/HTZ84GKW/FBS32ZQHTZ84GKW.LARGE.jpg"], "step_title": "Step 7: "}, {"step": 8, "steps_text": "1.) Draw a new point where the vertical dashed line from Step 7 meets S. 2.) Draw a horizontal dashed line from this point to the y-axis. 3.) Label where the dashed line intersects the axis $2.90 P2 4.) Draw a horizontal, dashed line from the point intersecting S1 & D to the y-axis. 5.) Label where the dashed line intersects the axis $3.30 P1. *NOTE:\u00a0the imposed tax has shifted the equilibrium price up 30 cents to P1 (consumers now pay $3.30 per gallon of gas), and down 10 cents to P2 (producers now receive $2.90 in sales revenue per gallon of gas).", "step_imgs": ["https://cdn.instructables.com/FW6/N005/HTZ84JH4/FW6N005HTZ84JH4.LARGE.jpg"], "step_title": "Step 8: "}, {"step": 9, "steps_text": "1.) Take a highlighter or colored pencil and color in the rectangular region showing the change from P to P1. *NOTE: DO NOT color past the Q1 marker; use the image above as a reference. 2.) Calculate the economic\u00a0Cost to Consumers in this economy by finding the area of the colored rectangle: A=(3.30-3)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show\u00a0Cost to Consumers.", "step_imgs": ["https://cdn.instructables.com/FUY/AO3Q/HTZ84M9C/FUYAO3QHTZ84M9C.LARGE.jpg"], "step_title": "Step 9: "}, {"step": 10, "steps_text": "1.) Take a highlighter or colored pencil and color in the rectangular region showing the change from P to P2. *NOTE: DO NOT color past the Q1 marker; use the image above as a reference. 2.) Calculate the economic Cost to\u00a0Producers\u00a0in this economy by finding the area of the colored rectangle: A=(3-2.9)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show\u00a0Cost to Producers.", "step_imgs": ["https://cdn.instructables.com/F2V/9JKE/HTZ84N1Z/F2V9JKEHTZ84N1Z.LARGE.jpg"], "step_title": "Step 10: "}, {"step": 11, "steps_text": "1.) Take a highlighter or colored pencil and color in the triangular region showing the change from Q to Q1. *NOTE: DO NOT color past the Q1, S,and D\u00a0markers; use the image above as a reference. 2.) Calculate the economic Dead Weight Loss in this economy by finding the area of the colored triangle: A=(1/2)(3.3-2.9)(1,000-900).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show Dead Weight Loss.", "step_imgs": ["https://cdn.instructables.com/F3D/TGCM/HTZ84N2K/F3DTGCMHTZ84N2K.LARGE.jpg"], "step_title": "Step 11: "}, {"step": 12, "steps_text": "1.) Take a highlighter or colored pencil and make a border around the rectangular region encompassing\u00a0Cost to Consumers and Cost to Producers. 2.) Calculate the Total Tax Revenue in this economy by finding the area of the rectangle border: A=(3.3-2.9)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show Total Tax Revenue. *NOTE: the first part of the Total Tax Revenue equation is (3.3-2.9); this is the imposed tax per gallon of gas.", "step_imgs": ["https://cdn.instructables.com/FAE/2Z8N/HTZ84O7N/FAE2Z8NHTZ84O7N.LARGE.jpg"], "step_title": "Step 12: "}, {"step": 13, "steps_text": "Using your answers, determine whether consumers or producers had the greater burden of tax (the higher cost).", "step_imgs": ["https://cdn.instructables.com/FG1/YF25/HUIS82YS/FG1YF25HUIS82YS.LARGE.jpg"], "step_title": "Step 13: Part 2 (Analyzing)"}, {"step": 14, "steps_text": "In our gasoline example, we saw how consumers paid 30 cents more per gallon and producers lost 10 cents per gallon in revenues due to taxation. This interference in an economy unintentionally produces dead wight loss in which money is not gained by any party- it is merely lost due to market inefficiency. From this exercise, we can conclude that the burden of an imposed tax on a specific good will be shared by both consumers and producers; however, this burden is rarely shared equally. As a consumer, it is important for you to know how taxation can influence your purchasing power and which goods will be more burdensome (more costly) to you.", "step_imgs": [], "step_title": "Step 14: "}, {"step": 15, "steps_text": "*Use another piece of paper or use the back of your current sheet. Look at the graph above depicting the economy for Candy Bars. Using your new knowledge of the burden of tax, calculate how much the tax is per candy bar, the economic Cost to Consumers, Cost to Producers, Dead Weight Loss, and Total Tax Revenue.", "step_imgs": ["https://cdn.instructables.com/F8Y/OP1Y/HTZ84QJD/F8YOP1YHTZ84QJD.LARGE.jpg"], "step_title": "Step 15: "}, {"step": 16, "steps_text": "From the Candy Bars example we can see how producers have the greater burden of tax in this economy. If a tax is placed on candy bars, producers will loose 40 cents of sales revenue per bar while consumers will pay 10 cents more per bar. *NOTE: gasoline and candy bars had two very different results; as consumers we care more about a tax increase on gasoline than we do about candy bars because the burden of tax is significantly different for these two goods So why did it change...", "step_imgs": ["https://cdn.instructables.com/F6G/KE5E/HUIS82VD/F6GKE5EHUIS82VD.LARGE.jpg"], "step_title": "Step 16: "}, {"step": 17, "steps_text": "Remember Step 3 had you draw the slope of the supply and demand curves based on steepness. These slopes (steep or flat) are called price elasticities; the slope reflects how a good's supply and demand change compared to its price over time. Very inelastic goods (steep slopes) do not have a tendency to change when prices rise/fall. These goods are necessities and cannot be substituted easily: gasoline, water, toilet paper! If a tax is imposed on inelastic goods, consumers will have the greater burden. Elastic goods (flat slopes) are not necessities and typically have multiple substitutes so we tend to buy less when prices are high, and more when prices are low: candy bars, jewelry, TVs. If a tax is imposed on elastic goods, producers will have the greater burden. Taxation affects us all. Not all taxes are bad; as you have seen, they provide significant revenue for the government. However, understanding the burden of tax is important, especially when it involves the goods we value greatly. Next time you hear about a tax initiative, use your new knowledge and think about how much the policy will cost you and the economy as a whole.", "step_imgs": [], "step_title": "Step 17: Why It Changed & Why It Matters!"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "This Instructable is designed to explain and illustrate how taxes affect consumers, producers, and the economy as a whole. You will follow step by step instructions to learn how to graph the economic burden of tax. You will then analyze the results of your work, and hopefully gain a general knowledge about microeconomic taxation.\u00a0 Before you begin, understand that the economic graph of supply and demand is a model; it illustrates a concept based on select economic assumptions- it does not reflect a precise reality. In the microeconomic models below, we hold all else constant, to show the effect of a single input (taxation) on a specific economy (gasoline and candy bars).", "title": "How to Graph the Burden of Tax", "url": "https://www.instructables.com/id/How-to-Graph-the-Burden-of-Tax/", "section": "home", "steps": [{"step": 1, "steps_text": "Supplies: -1-2 sheets of paper -a pencil -4 highlighters/colored pencils (each a different color) -a ruler (OPTIONAL) -a calculator (OPTIONAL) *NOTE: you will also need a very basic understanding of algebra.", "step_imgs": ["https://cdn.instructables.com/FE9/OOF3/HUIS7WXY/FE9OOF3HUIS7WXY.LARGE.jpg"], "step_title": "Step 1: Obtain Your Supplies"}, {"step": 2, "steps_text": "1.) Draw a simple graph with an x and y-axis. 2.) Title the graph Gasoline. *NOTE: make sure the graph is big enough for proper analysis; a good size graph will be about half a page length.", "step_imgs": ["https://cdn.instructables.com/FTN/ZMST/HTYHGJVZ/FTNZMSTHTYHGJVZ.LARGE.jpg"], "step_title": "Step 2: Part 1 (Graphing & Calculating)"}, {"step": 3, "steps_text": "1.) Label the x-axis Quantity\u00a0and the y-axis Price. 2.) Identify that Price is measured per gallon and Quantity is measured in # of gallons. *Use the image above as a reference for the slopes in part 3 and 4. 3.) Draw a line with a positive slope that is marginally steep 4.) Draw a line with a negative slope that is very steep. *NOTE: remember that this is a conceptual model (the lines do not have to be exact so a specific slope is not given); it is also not necessary to have the lines touch the axes.", "step_imgs": ["https://cdn.instructables.com/F8R/NZPS/HTYHGJWK/F8RNZPSHTYHGJWK.LARGE.jpg"], "step_title": "Step 3: "}, {"step": 4, "steps_text": "1.) Label the positive slope S\u00a0(supply). 2.) Label the negative slope D (demand). 3.) Put a point where S & D intersect and label \u00a0it E\u00a0(equilibrium).", "step_imgs": ["https://cdn.instructables.com/F13/68LP/HTZ84EHB/F1368LPHTZ84EHB.LARGE.jpg"], "step_title": "Step 4: "}, {"step": 5, "steps_text": "1.) Draw a vertical,dashed line from E to the x-axis. 2.) Label where this dashed line meets the axis 1,000 Q. 3.) Draw a horizontal, dashed line from\u00a0E to the y-axis. 4.) Label where this dashed line meets the axis $3.00 P. *NOTE: before taxation, the equilibrium quantity for gas is 1,000 gallons and the equilibrium price for gas is 3 dollars a gallon (consumers pay $3 a gallon for gas and producers receive $3 in sales revenue per gallon of gas).", "step_imgs": ["https://cdn.instructables.com/F59/ICHW/HTZ84EX8/F59ICHWHTZ84EX8.LARGE.jpg"], "step_title": "Step 5: "}, {"step": 6, "steps_text": "1.) Draw a line parallel to S approximately an inch to the left of S. 2.) Label the new line S1. 3.) Using an arrow, show that S shifted to S1. 4.) Label the arrow tax. *NOTE: the shift in supply was a direct result of taxation; see how this change will affect E,P, and Q.", "step_imgs": ["https://cdn.instructables.com/F8S/VA21/HTZ84FCT/F8SVA21HTZ84FCT.LARGE.jpg"], "step_title": "Step 6: "}, {"step": 7, "steps_text": "1.) Draw a point where S1 intersects D. 2.) Draw a vertical, dashed line from the new point to the x-axis. 3.) Label where the dashed line meets the axis 900 Q1. *NOTE: the equilibrium quantity has shifted from 1,000 gallons to 900 gallons of gas.", "step_imgs": ["https://cdn.instructables.com/FBS/32ZQ/HTZ84GKW/FBS32ZQHTZ84GKW.LARGE.jpg"], "step_title": "Step 7: "}, {"step": 8, "steps_text": "1.) Draw a new point where the vertical dashed line from Step 7 meets S. 2.) Draw a horizontal dashed line from this point to the y-axis. 3.) Label where the dashed line intersects the axis $2.90 P2 4.) Draw a horizontal, dashed line from the point intersecting S1 & D to the y-axis. 5.) Label where the dashed line intersects the axis $3.30 P1. *NOTE:\u00a0the imposed tax has shifted the equilibrium price up 30 cents to P1 (consumers now pay $3.30 per gallon of gas), and down 10 cents to P2 (producers now receive $2.90 in sales revenue per gallon of gas).", "step_imgs": ["https://cdn.instructables.com/FW6/N005/HTZ84JH4/FW6N005HTZ84JH4.LARGE.jpg"], "step_title": "Step 8: "}, {"step": 9, "steps_text": "1.) Take a highlighter or colored pencil and color in the rectangular region showing the change from P to P1. *NOTE: DO NOT color past the Q1 marker; use the image above as a reference. 2.) Calculate the economic\u00a0Cost to Consumers in this economy by finding the area of the colored rectangle: A=(3.30-3)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show\u00a0Cost to Consumers.", "step_imgs": ["https://cdn.instructables.com/FUY/AO3Q/HTZ84M9C/FUYAO3QHTZ84M9C.LARGE.jpg"], "step_title": "Step 9: "}, {"step": 10, "steps_text": "1.) Take a highlighter or colored pencil and color in the rectangular region showing the change from P to P2. *NOTE: DO NOT color past the Q1 marker; use the image above as a reference. 2.) Calculate the economic Cost to\u00a0Producers\u00a0in this economy by finding the area of the colored rectangle: A=(3-2.9)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show\u00a0Cost to Producers.", "step_imgs": ["https://cdn.instructables.com/F2V/9JKE/HTZ84N1Z/F2V9JKEHTZ84N1Z.LARGE.jpg"], "step_title": "Step 10: "}, {"step": 11, "steps_text": "1.) Take a highlighter or colored pencil and color in the triangular region showing the change from Q to Q1. *NOTE: DO NOT color past the Q1, S,and D\u00a0markers; use the image above as a reference. 2.) Calculate the economic Dead Weight Loss in this economy by finding the area of the colored triangle: A=(1/2)(3.3-2.9)(1,000-900).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show Dead Weight Loss.", "step_imgs": ["https://cdn.instructables.com/F3D/TGCM/HTZ84N2K/F3DTGCMHTZ84N2K.LARGE.jpg"], "step_title": "Step 11: "}, {"step": 12, "steps_text": "1.) Take a highlighter or colored pencil and make a border around the rectangular region encompassing\u00a0Cost to Consumers and Cost to Producers. 2.) Calculate the Total Tax Revenue in this economy by finding the area of the rectangle border: A=(3.3-2.9)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show Total Tax Revenue. *NOTE: the first part of the Total Tax Revenue equation is (3.3-2.9); this is the imposed tax per gallon of gas.", "step_imgs": ["https://cdn.instructables.com/FAE/2Z8N/HTZ84O7N/FAE2Z8NHTZ84O7N.LARGE.jpg"], "step_title": "Step 12: "}, {"step": 13, "steps_text": "Using your answers, determine whether consumers or producers had the greater burden of tax (the higher cost).", "step_imgs": ["https://cdn.instructables.com/FG1/YF25/HUIS82YS/FG1YF25HUIS82YS.LARGE.jpg"], "step_title": "Step 13: Part 2 (Analyzing)"}, {"step": 14, "steps_text": "In our gasoline example, we saw how consumers paid 30 cents more per gallon and producers lost 10 cents per gallon in revenues due to taxation. This interference in an economy unintentionally produces dead wight loss in which money is not gained by any party- it is merely lost due to market inefficiency. From this exercise, we can conclude that the burden of an imposed tax on a specific good will be shared by both consumers and producers; however, this burden is rarely shared equally. As a consumer, it is important for you to know how taxation can influence your purchasing power and which goods will be more burdensome (more costly) to you.", "step_imgs": [], "step_title": "Step 14: "}, {"step": 15, "steps_text": "*Use another piece of paper or use the back of your current sheet. Look at the graph above depicting the economy for Candy Bars. Using your new knowledge of the burden of tax, calculate how much the tax is per candy bar, the economic Cost to Consumers, Cost to Producers, Dead Weight Loss, and Total Tax Revenue.", "step_imgs": ["https://cdn.instructables.com/F8Y/OP1Y/HTZ84QJD/F8YOP1YHTZ84QJD.LARGE.jpg"], "step_title": "Step 15: "}, {"step": 16, "steps_text": "From the Candy Bars example we can see how producers have the greater burden of tax in this economy. If a tax is placed on candy bars, producers will loose 40 cents of sales revenue per bar while consumers will pay 10 cents more per bar. *NOTE: gasoline and candy bars had two very different results; as consumers we care more about a tax increase on gasoline than we do about candy bars because the burden of tax is significantly different for these two goods So why did it change...", "step_imgs": ["https://cdn.instructables.com/F6G/KE5E/HUIS82VD/F6GKE5EHUIS82VD.LARGE.jpg"], "step_title": "Step 16: "}, {"step": 17, "steps_text": "Remember Step 3 had you draw the slope of the supply and demand curves based on steepness. These slopes (steep or flat) are called price elasticities; the slope reflects how a good's supply and demand change compared to its price over time. Very inelastic goods (steep slopes) do not have a tendency to change when prices rise/fall. These goods are necessities and cannot be substituted easily: gasoline, water, toilet paper! If a tax is imposed on inelastic goods, consumers will have the greater burden. Elastic goods (flat slopes) are not necessities and typically have multiple substitutes so we tend to buy less when prices are high, and more when prices are low: candy bars, jewelry, TVs. If a tax is imposed on elastic goods, producers will have the greater burden. Taxation affects us all. Not all taxes are bad; as you have seen, they provide significant revenue for the government. However, understanding the burden of tax is important, especially when it involves the goods we value greatly. Next time you hear about a tax initiative, use your new knowledge and think about how much the policy will cost you and the economy as a whole.", "step_imgs": [], "step_title": "Step 17: Why It Changed & Why It Matters!"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "This Instructable is designed to explain and illustrate how taxes affect consumers, producers, and the economy as a whole. You will follow step by step instructions to learn how to graph the economic burden of tax. You will then analyze the results of your work, and hopefully gain a general knowledge about microeconomic taxation.\u00a0 Before you begin, understand that the economic graph of supply and demand is a model; it illustrates a concept based on select economic assumptions- it does not reflect a precise reality. In the microeconomic models below, we hold all else constant, to show the effect of a single input (taxation) on a specific economy (gasoline and candy bars).", "title": "How to Graph the Burden of Tax", "url": "https://www.instructables.com/id/How-to-Graph-the-Burden-of-Tax/", "section": "home", "steps": [{"step": 1, "steps_text": "Supplies: -1-2 sheets of paper -a pencil -4 highlighters/colored pencils (each a different color) -a ruler (OPTIONAL) -a calculator (OPTIONAL) *NOTE: you will also need a very basic understanding of algebra.", "step_imgs": ["https://cdn.instructables.com/FE9/OOF3/HUIS7WXY/FE9OOF3HUIS7WXY.LARGE.jpg"], "step_title": "Step 1: Obtain Your Supplies"}, {"step": 2, "steps_text": "1.) Draw a simple graph with an x and y-axis. 2.) Title the graph Gasoline. *NOTE: make sure the graph is big enough for proper analysis; a good size graph will be about half a page length.", "step_imgs": ["https://cdn.instructables.com/FTN/ZMST/HTYHGJVZ/FTNZMSTHTYHGJVZ.LARGE.jpg"], "step_title": "Step 2: Part 1 (Graphing & Calculating)"}, {"step": 3, "steps_text": "1.) Label the x-axis Quantity\u00a0and the y-axis Price. 2.) Identify that Price is measured per gallon and Quantity is measured in # of gallons. *Use the image above as a reference for the slopes in part 3 and 4. 3.) Draw a line with a positive slope that is marginally steep 4.) Draw a line with a negative slope that is very steep. *NOTE: remember that this is a conceptual model (the lines do not have to be exact so a specific slope is not given); it is also not necessary to have the lines touch the axes.", "step_imgs": ["https://cdn.instructables.com/F8R/NZPS/HTYHGJWK/F8RNZPSHTYHGJWK.LARGE.jpg"], "step_title": "Step 3: "}, {"step": 4, "steps_text": "1.) Label the positive slope S\u00a0(supply). 2.) Label the negative slope D (demand). 3.) Put a point where S & D intersect and label \u00a0it E\u00a0(equilibrium).", "step_imgs": ["https://cdn.instructables.com/F13/68LP/HTZ84EHB/F1368LPHTZ84EHB.LARGE.jpg"], "step_title": "Step 4: "}, {"step": 5, "steps_text": "1.) Draw a vertical,dashed line from E to the x-axis. 2.) Label where this dashed line meets the axis 1,000 Q. 3.) Draw a horizontal, dashed line from\u00a0E to the y-axis. 4.) Label where this dashed line meets the axis $3.00 P. *NOTE: before taxation, the equilibrium quantity for gas is 1,000 gallons and the equilibrium price for gas is 3 dollars a gallon (consumers pay $3 a gallon for gas and producers receive $3 in sales revenue per gallon of gas).", "step_imgs": ["https://cdn.instructables.com/F59/ICHW/HTZ84EX8/F59ICHWHTZ84EX8.LARGE.jpg"], "step_title": "Step 5: "}, {"step": 6, "steps_text": "1.) Draw a line parallel to S approximately an inch to the left of S. 2.) Label the new line S1. 3.) Using an arrow, show that S shifted to S1. 4.) Label the arrow tax. *NOTE: the shift in supply was a direct result of taxation; see how this change will affect E,P, and Q.", "step_imgs": ["https://cdn.instructables.com/F8S/VA21/HTZ84FCT/F8SVA21HTZ84FCT.LARGE.jpg"], "step_title": "Step 6: "}, {"step": 7, "steps_text": "1.) Draw a point where S1 intersects D. 2.) Draw a vertical, dashed line from the new point to the x-axis. 3.) Label where the dashed line meets the axis 900 Q1. *NOTE: the equilibrium quantity has shifted from 1,000 gallons to 900 gallons of gas.", "step_imgs": ["https://cdn.instructables.com/FBS/32ZQ/HTZ84GKW/FBS32ZQHTZ84GKW.LARGE.jpg"], "step_title": "Step 7: "}, {"step": 8, "steps_text": "1.) Draw a new point where the vertical dashed line from Step 7 meets S. 2.) Draw a horizontal dashed line from this point to the y-axis. 3.) Label where the dashed line intersects the axis $2.90 P2 4.) Draw a horizontal, dashed line from the point intersecting S1 & D to the y-axis. 5.) Label where the dashed line intersects the axis $3.30 P1. *NOTE:\u00a0the imposed tax has shifted the equilibrium price up 30 cents to P1 (consumers now pay $3.30 per gallon of gas), and down 10 cents to P2 (producers now receive $2.90 in sales revenue per gallon of gas).", "step_imgs": ["https://cdn.instructables.com/FW6/N005/HTZ84JH4/FW6N005HTZ84JH4.LARGE.jpg"], "step_title": "Step 8: "}, {"step": 9, "steps_text": "1.) Take a highlighter or colored pencil and color in the rectangular region showing the change from P to P1. *NOTE: DO NOT color past the Q1 marker; use the image above as a reference. 2.) Calculate the economic\u00a0Cost to Consumers in this economy by finding the area of the colored rectangle: A=(3.30-3)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show\u00a0Cost to Consumers.", "step_imgs": ["https://cdn.instructables.com/FUY/AO3Q/HTZ84M9C/FUYAO3QHTZ84M9C.LARGE.jpg"], "step_title": "Step 9: "}, {"step": 10, "steps_text": "1.) Take a highlighter or colored pencil and color in the rectangular region showing the change from P to P2. *NOTE: DO NOT color past the Q1 marker; use the image above as a reference. 2.) Calculate the economic Cost to\u00a0Producers\u00a0in this economy by finding the area of the colored rectangle: A=(3-2.9)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show\u00a0Cost to Producers.", "step_imgs": ["https://cdn.instructables.com/F2V/9JKE/HTZ84N1Z/F2V9JKEHTZ84N1Z.LARGE.jpg"], "step_title": "Step 10: "}, {"step": 11, "steps_text": "1.) Take a highlighter or colored pencil and color in the triangular region showing the change from Q to Q1. *NOTE: DO NOT color past the Q1, S,and D\u00a0markers; use the image above as a reference. 2.) Calculate the economic Dead Weight Loss in this economy by finding the area of the colored triangle: A=(1/2)(3.3-2.9)(1,000-900).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show Dead Weight Loss.", "step_imgs": ["https://cdn.instructables.com/F3D/TGCM/HTZ84N2K/F3DTGCMHTZ84N2K.LARGE.jpg"], "step_title": "Step 11: "}, {"step": 12, "steps_text": "1.) Take a highlighter or colored pencil and make a border around the rectangular region encompassing\u00a0Cost to Consumers and Cost to Producers. 2.) Calculate the Total Tax Revenue in this economy by finding the area of the rectangle border: A=(3.3-2.9)(900-0).\u00a0Write your answer at the bottom of the page, and identify the specific color used to show Total Tax Revenue. *NOTE: the first part of the Total Tax Revenue equation is (3.3-2.9); this is the imposed tax per gallon of gas.", "step_imgs": ["https://cdn.instructables.com/FAE/2Z8N/HTZ84O7N/FAE2Z8NHTZ84O7N.LARGE.jpg"], "step_title": "Step 12: "}, {"step": 13, "steps_text": "Using your answers, determine whether consumers or producers had the greater burden of tax (the higher cost).", "step_imgs": ["https://cdn.instructables.com/FG1/YF25/HUIS82YS/FG1YF25HUIS82YS.LARGE.jpg"], "step_title": "Step 13: Part 2 (Analyzing)"}, {"step": 14, "steps_text": "In our gasoline example, we saw how consumers paid 30 cents more per gallon and producers lost 10 cents per gallon in revenues due to taxation. This interference in an economy unintentionally produces dead wight loss in which money is not gained by any party- it is merely lost due to market inefficiency. From this exercise, we can conclude that the burden of an imposed tax on a specific good will be shared by both consumers and producers; however, this burden is rarely shared equally. As a consumer, it is important for you to know how taxation can influence your purchasing power and which goods will be more burdensome (more costly) to you.", "step_imgs": [], "step_title": "Step 14: "}, {"step": 15, "steps_text": "*Use another piece of paper or use the back of your current sheet. Look at the graph above depicting the economy for Candy Bars. Using your new knowledge of the burden of tax, calculate how much the tax is per candy bar, the economic Cost to Consumers, Cost to Producers, Dead Weight Loss, and Total Tax Revenue.", "step_imgs": ["https://cdn.instructables.com/F8Y/OP1Y/HTZ84QJD/F8YOP1YHTZ84QJD.LARGE.jpg"], "step_title": "Step 15: "}, {"step": 16, "steps_text": "From the Candy Bars example we can see how producers have the greater burden of tax in this economy. If a tax is placed on candy bars, producers will loose 40 cents of sales revenue per bar while consumers will pay 10 cents more per bar. *NOTE: gasoline and candy bars had two very different results; as consumers we care more about a tax increase on gasoline than we do about candy bars because the burden of tax is significantly different for these two goods So why did it change...", "step_imgs": ["https://cdn.instructables.com/F6G/KE5E/HUIS82VD/F6GKE5EHUIS82VD.LARGE.jpg"], "step_title": "Step 16: "}, {"step": 17, "steps_text": "Remember Step 3 had you draw the slope of the supply and demand curves based on steepness. These slopes (steep or flat) are called price elasticities; the slope reflects how a good's supply and demand change compared to its price over time. Very inelastic goods (steep slopes) do not have a tendency to change when prices rise/fall. These goods are necessities and cannot be substituted easily: gasoline, water, toilet paper! If a tax is imposed on inelastic goods, consumers will have the greater burden. Elastic goods (flat slopes) are not necessities and typically have multiple substitutes so we tend to buy less when prices are high, and more when prices are low: candy bars, jewelry, TVs. If a tax is imposed on elastic goods, producers will have the greater burden. Taxation affects us all. Not all taxes are bad; as you have seen, they provide significant revenue for the government. However, understanding the burden of tax is important, especially when it involves the goods we value greatly. Next time you hear about a tax initiative, use your new knowledge and think about how much the policy will cost you and the economy as a whole.", "step_imgs": [], "step_title": "Step 17: Why It Changed & Why It Matters!"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "My 6-year-old cousin quipped to me that 100 grapes is equal to a dozen peaches. Deciding he was referring to volume, we came up with the following experiment which uses the displacement of water to equate volumes. Though simple (all materials in photo), this highly visual and surprising experiment has many important lessons and can easily be adjusted to be appropriate for any grade 1-12.\u00a0", "title": "How Many Grapes Equals a Dozen Peaches?", "url": "https://www.instructables.com/id/How-many-grapes-equals-a-dozen-peaches/", "section": "home", "steps": [{"step": 1, "steps_text": "Fill a glass measuring cup with enough water to submerge a peach. If you do not have a measuring cup, you may simply use a big glass jar and a dry-erase marker to mark the water levels. Or, you may simply use two identical class jars side-by-side filled to the same level of water.\nHave your students note the water level (300 ml in this photo).", "step_imgs": ["https://cdn.instructables.com/FNT/ENS9/GXL5UMF8/FNTENS9GXL5UMF8.LARGE.jpg"], "step_title": "Step 1: "}, {"step": 2, "steps_text": "Place the peach in the water and have your students note the change in water level (to 450 ml in this photo). Really, this experiment can be done with anything, but I like round objects (because of easy volumetric calculations) and fruit since its fun to eat -- although many are too buoyant to do the experiment properly since it must be submerged (or nearly so) to get an accurate volume measure.\u00a0\nAsk the students why the peach must be submerged below the water line in order to get an accurate measurement of volume.\u00a0\nFor students 6th grade and up, you might consider discussing the relationship Density = Mass / Volume and which property is most relevant to this experiment. For students 9th grade and up you may even have them calculate the density of the peach and compare it to the density of water.\nRemove the peach but allow most of water to drip off it -- if you want to be precise (as in a chemistry class), you could add the precise water necessary to return it to its starting level.", "step_imgs": ["https://cdn.instructables.com/FAI/IO90/GXMS60Z0/FAIIO90GXMS60Z0.LARGE.jpg"], "step_title": "Step 2: "}, {"step": 3, "steps_text": "Before beginning this step, ask your students to make predictions about how many grapes will be necessary to displace an equal amount of water (to raise the water to the same line as the peach)-- they will probably be surprised (and you may be too!).\nWith advanced students (9th and up), you might guide their predictions -- have them make a guess (or measure) how many times larger the radius of the peach is to the grape. Leave it at that, hoping that some will remember the radius is cubed in calculating the volume of spheres (4/3*pi*r^3), \u00a0and thus the peach having roughly 3 times the radius of a grape corresponds to about 3^3 = 27 times the volume of the grape.\u00a0\nAdd grapes one at a time to the jar until you reach the same water level as the peach (450 ml in this photo.)", "step_imgs": ["https://cdn.instructables.com/FYD/H4CT/GXL5UMFH/FYDH4CTGXL5UMFH.LARGE.jpg"], "step_title": "Step 3: "}, {"step": 4, "steps_text": "Remove the grapes and count them, in this case it was 32 grapes!\nWith my first grade cousin, I arranged them in a grid as shown to introduce him to the concept of multiplication. This is also advisable with 2nd and 3rd graders. With 3rd grade and up, you would have them do the final calculation of 12 x 32 = 384 to arrive at the number of grapes to a dozen peaches (volumetrically.)\u00a0", "step_imgs": ["https://cdn.instructables.com/F7H/8TY4/GXL5XVWD/F7H8TY4GXL5XVWD.LARGE.jpg", "https://cdn.instructables.com/FXX/WUUO/GXL5XVVC/FXXWUUOGXL5XVVC.LARGE.jpg"], "step_title": "Step 4: "}, {"step": 5, "steps_text": "For advanced students:\n- You might discuss sample bias, as in the picture you can see many grapes on the vine are very much smaller, which I ignored for the simple version. In this case, I would split the room into groups and not even mention that they should consider it, but have each group decide how to proceed with the experiment. Afterwards, they would have to justify how and why they chose the grapes they did.\u00a0\n- To me, the most important lesson from this experiment (and one which many adults may have forgotten) is that volume goes by the cube to the radius -- that although the radius is only 3x bigger, the volume is closer to 30x bigger. So, as in much of science, looks and intuition can be deceiving.\u00a0\n- In a class in which d= m/v is just being introduced, this would make a nice starting point. From here, you might explain that with this simple equation your students can now calculate the mass of a giant boulder just by finding the properties of a little pebble chipped off of it!", "step_imgs": ["https://cdn.instructables.com/FN8/4PAW/GXO0U7G3/FN84PAWGXO0U7G3.LARGE.jpg"], "step_title": "Step 5: "}, {"step": 6, "steps_text": "Feast on the delicious fruit (don't forget to share)!", "step_imgs": ["https://cdn.instructables.com/FXX/WUUO/GXL5XVVC/FXXWUUOGXL5XVVC.LARGE.jpg"], "step_title": "Step 6: "}], "channel": "No channel to show"}, {"category": "No category to show", "description": "America is still using Imperial Measurements in their recipes. There are 6.4 billion Metric users vs. only .3 billion Americans. So this is a four step, when you use your Metric Cups/Spoons, process to convert your American recipes to Metric.\n\u00a0When I first made my first Metric instructable there was virtually no one selling Metric Cups and Spoons. As of 8/7/2010 I have found now only three websites selling to Americans, True Metric Cups and Spoons, and you should spend no more then $5. Replacing your American cups, 237 mL for a Metric cup, 250 mL, and Replace your American tablespoon set, 14.79 mL with true Metric tablespoon set, 15 mL.\nNext you need to do, is substitute every American pound (453.59 g) with 500 g. That was easy, no? You will need to convert centimeters, and Celsius. In the end you will actually end up making about 10% more. Why? Because the Metric Kitchen units are bigger then the American units.\nMetric is easy -- one gram of water = one milliliter of water = one cubic centimeter.\nWater --- 1 g = 1 mL = 1 cm\u00b3\u00a0\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1 kg = \u00a01 L = 1 dm\u00b3\n\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1 Mg = 1 kL = 1 m\u00b3Find Metric CupsFind Metric Spoons", "title": "Metrication of Recipes Simplified", "url": "https://www.instructables.com/id/Metrication-of-Recipes-Simplified/", "section": "home", "steps": [{"step": 1, "steps_text": "So You Want to Convert Your Recipe to Metric And You Want to Use Weights With Your Dry Ingredients? How Do You Do It?\nAre You Confused and Baffled?\nDon't Worry\n\u00a0It is a Four Step Process, if you use Metric cups/spoons, That You Have To Follow\nFirst, you do not have to change the cups and spoon measurements keep them exactly the way they are. But add the words 'This is a Metric Recipe with one cup = 250 mL'\nRemember the following ...\nOne cup = 250 mL\nHalf cup = 125 mL\nQuarter cup = 60 mL (62.5)\nEigth cup = 30 mL (31.25)\nOne tablespoon = 15 mL\nOne teaspoon = 5 mL", "step_imgs": ["https://cdn.instructables.com/FKL/019A/GDTLSSK4/FKL019AGDTLSSK4.LARGE.jpg"], "step_title": "Step 1: Choose Your Faviorite Recipe"}, {"step": 2, "steps_text": "Convert all English Weights to Grams or Kilograms.\nUse 500 g for every one pound as the formula and\nUse 31.25 g for every dry ounce\nYou can also use 31.25 mL for every fluid ounce\nIn this recipe you would actually now replace 1.5 lbs with 750 g, not the exact grams replacement.\nHere is a quick review of exact equivalent...\none ounce equal 28.3 g\none pound equal 453.6 g\nFive pounds equal 2.27 kg or 2267.96 g\none fluid ounce equal 29.57 mL\nOK, how did I come up with 31.25 for both dry and fluid ounce, you may ask?\nFor comparison and to keep inline with my Metrication of Recipes...\none American pound divide by 16 to get \u00a0dry ounces\n\u00a0\u00a0-- 500 g (1/2 kg) divide by 16 to get 31.25 grams\none American quart divide by 32 to get fluid ounces\n\u00a0\u00a0-- one liter divide by 32 to get 31.25 milliliters", "step_imgs": ["https://cdn.instructables.com/F8N/D4UG/GDTLSSUQ/F8ND4UGGDTLSSUQ.LARGE.jpg"], "step_title": "Step 2: Convert Solid Weights"}, {"step": 3, "steps_text": "Convert All Fahrenheit Temperatures to Celsius\nUse the Conversion Calculators\nQuick Review...\n0\u00b0F \u2248 -18\u00b0C\n32\u00b0F = 0\u00b0C\n150\u00b0F \u2248 66\u00b0C or round down 65\u00b0C\n175\u00b0F \u2248 79\u00b0C or round up 80\u00b0C\n300\u00b0F \u2248 148\u00b0C or round up 150\u00b0C\n350\u00b0F \u2248 177\u00b0C or round up 180\u00b0C\n475\u00b0F \u2248 246\u00b0C or round down 245\u00b0C", "step_imgs": ["https://cdn.instructables.com/FSV/GNZG/GDTLST1W/FSVGNZGGDTLST1W.LARGE.jpg"], "step_title": "Step 3: Convert Temperatures"}, {"step": 4, "steps_text": "Convert all English Length Measurements to\nCentimeters and Millimeters. Use Conversion Calculators.\nQuick Review...\n1/8 inch \u2248 3 mm\n1/4 inch \u2248 6 mm\n1/2 inch \u2248 13 mm\n3/4 inch \u2248 19 mm\n1 inch \u2248 2.5 cm\n5 inch \u2248 13 cm\n10 inch \u2248 25 cm", "step_imgs": ["https://cdn.instructables.com/FLK/WTQD/GDTLST4D/FLKWTQDGDTLST4D.LARGE.jpg"], "step_title": "Step 4: Convert Lengths"}, {"step": 5, "steps_text": "Get out your new scale and weigh all dry ingredient volumes to find the weight in Grams, but leave any dry ingredient that measures a tablespoon or less, in Milliliters. Again, there are charts out there to convert the different dry ingredients directly from volume to weight but there just too many variables. It is best to weight it yourself for accuracy.\nThis is an optional step but well worth the effort...\nYou want to use weight vs. volume measurements because of ingredients like, flour, does not matter if it is shifted, leveled, or packed. For this recipe, how many crackers does it take to make 3/4 cup? Easy, weigh it first, then crush them! Does you sugar need to be packed? NO.\nWeight to volume calculators, they already have the density value added for each ingredient\u00a0(remember these are now Metric Cups).....\nwww.onlineconversion.com/weight_volume_cooking.htm\nwww.convert-me.com/en/convert/cooking\nNot every food member are on the list of these calculators, for example, carrots is not there. To solve that issue see my\u00a0Finding the Density of Food You Eat\u00a0instructable.", "step_imgs": ["https://cdn.instructables.com/FIV/3XHQ/GDTLSTBL/FIV3XHQGDTLSTBL.LARGE.jpg"], "step_title": "Step 5: Convert Dry Volumes"}, {"step": 6, "steps_text": "America is still using Imperial Measurements in their recipes. There are 6.4 billion Metric users vs. only .3 billion Americans. So this Four step process will help you to convert your American unit recipes to Metric units. Now you can easily exchange recipes with people from Canada, Mexico, and the rest of the World.\nUse Metric\nBuy Metric\nThink Metric\nYou will need...\nan electronic scale\na Kilogram set to calibrate your scale\na 30 cm ruler\nMetric cups and spoons set\nMetric meat and candy thermometers\nTimers (Metric Time anyone?)", "step_imgs": ["https://cdn.instructables.com/FXC/MTOI/GDTLNINI/FXCMTOIGDTLNINI.LARGE.jpg", "https://cdn.instructables.com/F8S/L43O/GDTLST8O/F8SL43OGDTLST8O.LARGE.gif"], "step_title": "Step 6: "}], "channel": "No channel to show"}, {"category": "No category to show", "description": "learn to \u00a0clean pennies easliy", "title": "How to Clean Pennies 1 Easy Trick", "url": "https://www.instructables.com/id/How-To-Clean-Pennies-1-Easy-Trick/", "section": "home", "steps": [], "channel": "No channel to show"}, {"category": "No category to show", "description": "Background:\u00a0 Buoyancy can be a difficult concept to comprehend. People often ponder how a ship made of heavy steel could possibly float. Experiencing buoyancy through application can help with comprehension of this concept.Objectives: By making a penny barge from limited materials, students will learn to calculate surface area and volume, and witness buoyancy and Archimedes Principle in action as they attempt to sink the barge/container.Assignment/Design Brief: Design and construct a floating cardboard container with 144 square inches or less of surface area to hold as many pennies as possible before capsizing or sinking.\u00a0 Coat container with\u00a0one layer of masking tape on the exterior to help with water resistance.Specifications:\n* Container must support pennies as load for testing.\n* Container calculations must be completed at the start of class to be considered for competition.\n* Container must have an open top to load the pennies.\n* Container must float freely well above the bottom of the tank to be tested.Limitations:\n* Container may only be constructed of cardboard, and masking tape with tape for joints of materials.\u00a0 You may coat the container with one layer of masking tape. More that one layer will disqualify you.\n* Total surface area of all cardboard used, including flaps and tabs may not exceed 144 square inches of surface area.\n* Container may not be tall enough to rest on the bottom of the test tank.Testing: Calculate the number of pennies to sink your container. Record this number on the chart provided in class. The Container will be tested in test tank provided in class.\u00a0 Testing will consist of loading your container with half the predicted penny amount and floating your structure to load the rest until the container capsizes or sinks.\u00a0 The rest of the pennies must be counted on the way into the container.\u00a0 Retrieve pennies and dry them off. Record penny number on chart provided in class.Notes:\n* Structures not ready (not constructed, pennies not calculated) to test at the beginning of class on the due date will not be ranked and receive no higher than a \u201cC\u201d (80) when tested. This means calculations for pennies must be complete.\n* Containers that exceed the 144 square inches of material will not be disqualified and container must be reproduced. Containers that use materials other than cardboard and masking tape will be disqualified and must be reproduced. Disqualified vessels will be tested and ranked in the lower grading bracket starting with an 80 for the container that holds the most.\n* Containers may be disassembled for proof of materials after testing is completed.Teacher Notes:\u00a0 Students can use any type of cardboard but note that thicker cardboard will weigh more and require less pennies to sink.\u00a0 The tank hold enough water to test the tallest container designed by the students. Students must show their calculations to prove that they met the material or surface area criteria of the challenge. Students will calculate the volume of their container and weigh their container to then calculate the number of pennies needed to sink the container. Record the predicted penny amount for each student to reflect on why their container held more or less than predicted.\u00a0\nWhen testing, have the student testing their container put half the number of pennies in before placing the container in the test tank. With this step, the students can observe that the container is submerged halfway into the water because the container has half the weight needed to sink the container. The students observing can count stacks of ten pennies to help the process go quicker. Multiple tanks can be used to quicken the process as well. Students can also be grouped into teams so that they cheer each other on. The team total could then be ranked.\nI hold this competition with up to 21 students per class and grade them according to their rank. Students must submit 3 designs with surface area and volume calculations completed prior to selecting the container they want to build. The designs must be three different shapes so that they note that the volumes will be different even though the surface area is the same.Important Information:\nThe number of pre-1982 pennies has a mass of 3.1 grams. However, pennies made after 1982 are about 2.5 grams. So the average is about 2.78 grams.\nWater Weight = 62.4 pounds per cubic foot\n1 cubic foot = 1728 cubic inches\n1 gram = 0.035 ounces", "title": "Penny Barge Activity", "url": "https://www.instructables.com/id/Penny-Barge-Activity/", "section": "home", "steps": [{"step": 1, "steps_text": "Start designing a container:\nProvide 3 different design sketches with measurements while adhering to the material limitations. Include the top, front and side views of the container or an isometric view to show the measurements of \u00a0each design.\nProvide surface area \u00a0calculations to prove that you have not exceeded the allowable surface area. Show all math.\nProvide volume calculations for the three different penny barges to determine the largest volume. Show all math.", "step_imgs": ["https://cdn.instructables.com/F3Q/9EAQ/GY9ZIB4B/F3Q9EAQGY9ZIB4B.LARGE.jpg", "https://cdn.instructables.com/FA8/R92Q/GY4RG3B4/FA8R92QGY4RG3B4.LARGE.jpg", "https://cdn.instructables.com/FKR/DABV/GY4R90KY/FKRDABVGY4R90KY.LARGE.jpg"], "step_title": "Step 1: Container Design"}, {"step": 2, "steps_text": "Build the design with the largest volume because that one will require the most pennies to sink. Use only cardboard and masking tape. Tape the entire outside of the container to provide a water-resistant coating.", "step_imgs": ["https://cdn.instructables.com/FJN/EMSK/GY9ZIB4O/FJNEMSKGY9ZIB4O.LARGE.jpg"], "step_title": "Step 2: Build the Container"}, {"step": 3, "steps_text": "Weigh the container. Of using a balance beam scale, convert grams to ounces by multiplying by .035 ounces per gram.\nCalculate the volume of the container in inches and convert to cubic feet by dividing by 1728 cubic inches per cubic foot.\n_________ cubic inches / 1728 cubic inches per cubic foot = ___________ cubic feet\nDetermine the weight of the water that must be displaced by the container by multiplying the amount of cubic feet of the container by 62.4 pounds per cubic foot, the weight of water.\n________ cubic feet X 62.4 pounds per cubic foot = __________ pounds.\nConvert the water displacement to ounces by multiplying the pounds of water by 16 ounces per pound.\n_______ pounds X 16 ounces per pound = __________ ounces\nDetermine the amount of penny weight needed to sink container by subtracting the weight of the container from the ounces of water displacement.\n_______ ounces of water displacement - ________ ounces of container = _________ total ounces of pennies needed to sink container\nConvert penny weight to pennies needed to sink the container by dividing the ounces of total pennies by the weight of one penny, .0973 oz.\u00a0\n_______ ounces of pennies / .0973 ounces per penny = _________ pennies", "step_imgs": [], "step_title": "Step 3: Determine Number of Pennies to Sink Container"}, {"step": 4, "steps_text": "Prepare test tank by filling with enough water so that the container has enough clearance to sink.\u00a0\nCount out 1/2 to 3/4 of the pennies needed to sink the container.\u00a0\nPlace the pennies in the container prior to placing the container in the test tank.\u00a0\nNotice where the container rests in the tank with the initial penny load. If half the pennies were placed in the container, then the container should be sitting half above and half below the water line.\u00a0", "step_imgs": ["https://cdn.instructables.com/FQI/QXGM/GXUYU0NI/FQIQXGMGXUYU0NI.LARGE.jpg"], "step_title": "Step 4: Test Container"}, {"step": 5, "steps_text": "Continue to count the rest of the pennies into the container until the container sinks.\u00a0\nThe actual number and the calculated number should be pretty close if not exact.\u00a0", "step_imgs": ["https://cdn.instructables.com/FJB/J82J/GXUZMY2Y/FJBJ82JGXUZMY2Y.LARGE.jpg"], "step_title": "Step 5: Sink the Container"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "This Instructable will show you how to make old pennies look shiny and new againPlease subscribe to my channelThanks :)", "title": "Make Old Pennies Shiny!!", "url": "https://www.instructables.com/id/Make-Old-Pennies-Shiny/", "section": "home", "steps": [{"step": 1, "steps_text": "1. You will need :Vinegar Salt Old Pennies A small bowl A piece of paper towel A spoon (optional) An old pair of tweezers (optional)", "step_imgs": ["https://cdn.instructables.com/FGE/CAP9/IAJHDLCX/FGECAP9IAJHDLCX.LARGE.jpg", "https://cdn.instructables.com/F7O/BGBB/IAJHDLF5/F7OBGBBIAJHDLF5.LARGE.jpg", "https://cdn.instructables.com/F2A/L59L/IAJHDLFH/F2AL59LIAJHDLFH.LARGE.jpg", "https://cdn.instructables.com/F7R/HZHH/IAJHDMBB/F7RHZHHIAJHDMBB.LARGE.jpg"], "step_title": "Step 1: Gather Materials"}, {"step": 2, "steps_text": "1. Put a little vinegar in the bowl2. Put a little salt in the bowl3. Mix the solution togetherYou can use a spoon or your finger ", "step_imgs": [], "step_title": "Step 2: Put Vinegar & Salt in the Bowl"}, {"step": 3, "steps_text": "1. Pick up a penny2. Place the penny into the bowlYou can use an old pair of tweezers or your finger3. move the penny around for a few seconds making sure it is saturated in the solutionYou can use a spoon or your finger4. Let it sit for a minute", "step_imgs": ["https://cdn.instructables.com/FE9/OCMT/IAJHG3TL/FE9OCMTIAJHG3TL.LARGE.jpg", "https://cdn.instructables.com/FSK/UP48/IAJHG3TM/FSKUP48IAJHG3TM.LARGE.jpg"], "step_title": "Step 3: Place Penny in the Solution"}, {"step": 4, "steps_text": "1. Remove the penny from the solutionYou can use your finger or an old pair of tweezers2. Place the penny on a piece of paper towel 3. Dry it off with the paper towel", "step_imgs": [], "step_title": "Step 4: Remove the Penny"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "A simple memorization technique that I use to teach myself computer programming: 1.\u00a0 Break down what you need to memorize into small, discrete parts. 2.\u00a0 Write down those parts 50 times. 3.\u00a0 For example, the formula for volume calculation is volume = length * width * height 4.\u00a0 This can be abbreviated to: v = l * w * h 5.\u00a0 Write out the above formula 50 times.", "title": "How to Memorize/Simple Memorization Technique", "url": "https://www.instructables.com/id/How-to-memorizeSimple-memorization-technique/", "section": "home", "steps": [], "channel": "No channel to show"}, {"category": "No category to show", "description": "Here by using plotly,I just made a data visualization of my monthly fuel expenditure easily here is my plotly link... https://plot.ly/~sathish1041/25 https://plot.ly/~sathish1041/29", "title": "DATA VISUALIZATION MONTHLY FUEL EXPENDITURE", "url": "https://www.instructables.com/id/DATA-VISUALIZATION-MONTHLY-FUEL-EXPENDITURE/", "section": "home", "steps": [], "channel": "No channel to show"}, {"category": "No category to show", "description": "Suppose you wanted to find the volume of an object. For many objects this is a very intuitive process; the volume of a cube is equal to the length multiplied by the width multiplied by the height. For a cylinder the volume is equal to the area of the base (radius squared multiplied by\u00a0\u03c0) multiplied by the height of the cylinder.\u00a0 However, for more elaborate objects, you can't just find the area of the base and multiply by the height. \u00a0By placing the object along the side of a coordinate plane, you can use integration, a technique I'll cover later, to find the area of a slice of the object. This method will lead into how to find the volume of an object. In the next step, we'll explore how to find the area contained by a bowl. The same method can be used to find the area of many different objects. As with any math problem, it can take quite a bit of time to learn, but once mastered, can be done in under a minute.", "title": "Finding the Volume of an Object Using Integration", "url": "https://www.instructables.com/id/Finding-the-Volume-of-an-Object-Using-Integration/", "section": "home", "steps": [{"step": 1, "steps_text": "Let's say you have a bowl that is radially symmetrical, and you want to know the volume of the space contained with it. Imagine that you cut it right down the middle so you have two similar looking pieces of the bowl. Now we take the flat side of one of these halves and place it against a coordinate plane. By tracing the inside of the bowl, we can see that it is identical to the graph \u00a0of y=x^2, at least from the points x=0 and x=2. x=0 is where the middle of the bowl would be.\u00a0 To give an preview of how we'll find the volume of this bowl, we are going to mentally rotate this the part of the graph between x=0 and x=2 around the y-axis using a method known as the Shell Method.\u00a0", "step_imgs": ["https://cdn.instructables.com/FOB/2TN0/HLZRO4U2/FOB2TN0HLZRO4U2.LARGE.jpg", "https://cdn.instructables.com/FIB/0AOB/HLZRO4U5/FIB0AOBHLZRO4U5.LARGE.jpg"], "step_title": "Step 1: Finding the Graph of the Bowl"}, {"step": 2, "steps_text": "To describe how integrating finds the area, imagine a graph like the one shown above. By drawing a bunch of rectangles that have equal length, finding \u00a0the area of each individual rectangle and adding them all together would give a close approximation to the actual area of the graph. Obviously there is a lot of empty space, and this leaves a lot of room for error. The solution here is take make the rectangles smaller, thus reducing the error. However, no matter how many rectangles we create, there will always be some unaccounted area. So what if we were able to make infinite rectangles?\u00a0 The idea of infinite rectangles is what is the basic concept behind finding the area with integration. While this could be a whole new subject in itself, the essential idea behind integrating is that we can make each rectangle infinitely small and add each rectangle to one sum to find the total area.", "step_imgs": ["https://cdn.instructables.com/FOV/PJPG/HLZRO4UC/FOVPJPGHLZRO4UC.LARGE.jpg", "https://cdn.instructables.com/FKA/N71B/HLZRO4UE/FKAN71BHLZRO4UE.LARGE.jpg"], "step_title": "Step 2: Infinite Rectangles"}, {"step": 3, "steps_text": "With the next two steps I'm going to explain how to integrate. Be aware that in this step, integrating only find the area under the curve, not the volume, which is what we are looking for.\u00a0 We have the function y=x^2, and we know that we only want the area between x=0 and x=2.\u00a0 To integrate, we would take our function y=x^2, and put it in an integral as shown above.\u00a0 The curved line at the beginning simply lets us know that we are integrating. The 0 and 2 means we are integrating the area between x=0 and x=2. The dx at the end means we are integrating with respect to x.\u00a0 When integrating,simply increase each exponent by 1, and then divide the that whole number by the number you just wrote for the new exponent. In this case, it integrates to ((x^3)/3).", "step_imgs": ["https://cdn.instructables.com/F6V/7F1E/HLZRO4UF/F6V7F1EHLZRO4UF.LARGE.jpg", "https://cdn.instructables.com/FLK/3RIP/HLZRO4UM/FLK3RIPHLZRO4UM.LARGE.jpg"], "step_title": "Step 3: Setting Up the Integral"}, {"step": 4, "steps_text": "Now that we integrated the function, we want to find the area between two numbers, x=0 and x=2.\u00a0 Simply plug in the number on top (x=2) into x. Do the same with the lower number (x=0), and find the difference.\u00a0 The area, 8/3, is the total area under the function y=x^2 between x=0 and x=2.", "step_imgs": ["https://cdn.instructables.com/FM9/30YX/HLZRO4UQ/FM930YXHLZRO4UQ.LARGE.jpg"], "step_title": "Step 4: Calculating the Area"}, {"step": 5, "steps_text": "Now that we know how to integrate, we're going to use a method known as the Shell Method. The name Shell Method comes from the fact that you can pick any point on a graph, rotate that point around the y-axis, and it should take on the appearance of a shell. By integrating this rotation, you can find the volume of the function as if it were rotated around the y-axis. Be aware that integrating finds the volume\u00a0under\u00a0the curve, while we actually want to find the volume above the curve. The Shell Method is found by integrating the radius of an object by the height. The radius of an object represents what point you pick on any point on the graph. Usually the radius is just equal to x. The height is how high the function is at any point on the graph. After integrating, multiply the number by 2\u03c0. This will give us the volume of the function between x=0 and x=2 rotated around the y-axis. The formula is shown above.\u00a0", "step_imgs": ["https://cdn.instructables.com/FDH/74V5/HLZRO4XF/FDH74V5HLZRO4XF.LARGE.jpg", "https://cdn.instructables.com/FWC/XK6L/HLZRO4WB/FWCXK6LHLZRO4WB.LARGE.jpg"], "step_title": "Step 5: Shell Method"}, {"step": 6, "steps_text": "In the case of our problem, the radius is x. The height at any point on the graph is x^2. We can plug these numbers into the Shell Method formula from step 5. Simplifying x(x^2) equals x^3. By integrating the with the same method from Steps 3 and 4, we get the number ((x^4)/4).", "step_imgs": ["https://cdn.instructables.com/FZ2/9BXU/HLZRO4WI/FZ29BXUHLZRO4WI.LARGE.jpg", "https://cdn.instructables.com/F9R/5EAI/HLZRO4WT/F9R5EAIHLZRO4WT.LARGE.jpg"], "step_title": "Step 6: Finding the Radius and Height"}, {"step": 7, "steps_text": "We then plug in around the bounds, x=2 and x=0 and find the difference. Simplifying this number to get 8\u03c0. This video may help clarify how to integrate using the Shell Method, which is what we covered from Step 5 to Step 7.", "step_imgs": ["https://cdn.instructables.com/FJ2/4I45/HLZRO4WX/FJ24I45HLZRO4WX.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 7: Integrating With the Shell Method"}, {"step": 8, "steps_text": "If you've been following along, you've probably noticed that we've been finding the area under the curve, while what we want to find is the area above the curve, which is the volume of the bowl. Since we're looking for the volume within the bowl, simply draw a box around the relevant area and find the volume of the cylinder. Subtracting the volume of the graph from the volume of the cylinder will leave us with the volume of the bowl. Imagine carving out the the bottom part of our curve from the cylinder, leaving only the top half.", "step_imgs": ["https://cdn.instructables.com/FG2/B2UR/HLZRO4X1/FG2B2URHLZRO4X1.LARGE.jpg"], "step_title": "Step 8: Finding the Area Within the Bowl"}, {"step": 9, "steps_text": "The volume of a cylinder is calculated by the formula V=\u03c0*r^2*h. The radius is 2 and the height is 4.\u00a0 Multiplying these numbers together reveals the volume of the cylinder to be 16\u03c0.", "step_imgs": ["https://cdn.instructables.com/FAG/I9CS/HLZRO4XC/FAGI9CSHLZRO4XC.LARGE.jpg", "https://cdn.instructables.com/FXH/Q707/HLZRO4XD/FXHQ707HLZRO4XD.LARGE.jpg"], "step_title": "Step 9: Finding the Volume of a Cylinder"}, {"step": 10, "steps_text": "Now we have the volume of the entire cylinder and the area outside the curve. By simply finding the difference between the two, we can calculate the volume of the bowl. 16\u03c0 - 8\u03c0 = 8\u03c0. The volume in the bowl is 8\u03c0, or about 25.1327.", "step_imgs": ["https://cdn.instructables.com/FXW/ZSZ7/HLZRO4XE/FXWZSZ7HLZRO4XE.LARGE.jpg"], "step_title": "Step 10: Finding the Area Within the Bowl."}, {"step": 11, "steps_text": "The method we used was known as the Shell Method, since one slice can be rotated around an axis to create a shell. Other methods that could be used are the Disk Method or the Washer Method. Using these tools the will allow you to calculate the volume of many different objects. While learning this can take a significant amount time, it should be known that excellence comes with practice, and eventually problems like this can be completed in a matter seconds.", "step_imgs": ["https://cdn.instructables.com/FV8/74TG/HLZRO4XG/FV874TGHLZRO4XG.LARGE.jpg"], "step_title": "Step 11: Other Methods"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "Here's a brightly colored science experiment that not only looks cool, but allows students to develop their own understanding of density! \u00a0 \u00a0I used this experiment for a freshman Physical Science class, but it could be adapted for many ages and situations. \u00a0It's also an incredibly cheap experiment that can be done with virtually no lab equipment if necessary.Objectives: 1. Explain density using examples. 2. Identify and use laboratory equipment.Other potential objectives: 1. Measure mass. 2. Define mass. 3. Measure volume.\u00a0 4. Define volume. 5. Calculate density. 6. Explain density conceptually. 7. Compare the densities of different materials. 8. Design an experiment to test a hypothesis.", "title": "Salt Water Density Experiment", "url": "https://www.instructables.com/id/Salt-Water-Density-Experiment/", "section": "home", "steps": [{"step": 1, "steps_text": "You can make this experiment anything you like. \u00a0I used it very early in the year. \u00a0Students had measured and timed things for the velocity unit, but I was still teaching measurement and introducing them to the lab. \u00a0I usually included every skill they could possibly practice.Required: Pipets (Can be purchased online from all kinds of vendors. Example:\u00a0http://www.flinnsci.com/store/Scripts/prodView.asp?idproduct=14269 About $25 for 400)You could substitute syringes, turkey basters, or some other device that would allow you to add the liquid to the bottom of a tube but pipets are so useful you might as well buy some if you don't have them.Useful (but could substitute): 250mL beakers (4-6 of these) Food coloring Salt (about 36g = 6 Tablespoons) Stirring rod Measuring spoons Test tubeSubstitutions: Cups or bowls instead of beakers Natural dyes instead of food coloring (Think beets for pink etc.) Sugar instead of salt (This is a little messier and if not well cleaned up more likely to be a problem but works just as well.) Spoons instead of stirring rods. Any kind of spoon that you use could be substituted for measuring spoons. You just need to know that you're adding a relatively standard amount more for each additional color.Optional: Electronic Scale or Triple Beam Balance for extension Test tube rack Test tube drying rack Test tube brush (for cleaning)These optional ones are more about teaching them about these pieces of laboratory equipment.", "step_imgs": ["https://cdn.instructables.com/F29/PMZP/H2WEJL6I/F29PMZPH2WEJL6I.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "I usually demonstrate the procedure for students and then have them write a procedure and/or draw pictures of each step. \u00a0Especially since I did it early in the year, I wanted them to practice writing their own procedures and then critically analyzing what could be improved to make the procedure understandable for someone else. \u00a0You could also do this as a whole class to model what the process of writing a procedure \"looks like\" and then have them write their own later in the year.I usually rushed and did an imperfect job during the demonstration so they could \"figure things out\" but had the general idea of how to do it. \u00a0I'd start by demoing really quickly adding the first and second layers to show that they would just mix and then do one \"right\" to show the value of doing it slowly and gently. \u00a0Every student was able to do it by the end of class and it was a great way to start off their science experience with something that was a little challenging at first, but then successful.Make Salt Water Solutions: 1. Add 200mL of water to a 250mL beaker. \u00a0 2. Add 1 Tablespoon of salt to the water. (Technically you should probably add the salt first and then the water.) 3. Add 4 drops of food coloring.\u00a0(I let them add as much food coloring as they want and whatever creative colors they want to. \u00a0Buy food coloring at the dollar store and it is really cheap.) 4. Stir with a stirring rod. 5. Repeat, increasing the amount of salt added by 1 Tablespoon for each successive solution.\u00a0 6. Have one beaker of water with no salt for the least dense condition.Creating Layers: 1. Choose a volume of each color to add to the test tube. (2mL works well for small test tubes. 4 mL works well for larger ones. \u00a0I'd try this out once before hand with your supplies. \u00a0It's easier to only have to add one pipet of liquid.) 2. Add 4mL of the least dense solution any way that you want. 3. Add 4mL of the second least dense solution by very gently inserting the pipet tip into the liquid and to the very bottom of the tube. 4. Very slowly and gently release the solution. \u00a0A new layer should form. \u00a0Keep the bulb of the pipet squeezed. \u00a0Very slowly and gently \u00a0remove the pipet from the test tube. 5. Repeat with the remaining colors.", "step_imgs": ["https://cdn.instructables.com/FZK/PEYW/H2WET5TW/FZKPEYWH2WET5TW.LARGE.jpg", "https://cdn.instructables.com/FY9/8RC2/H2WEJL8K/FY98RC2H2WEJL8K.LARGE.jpg", "https://cdn.instructables.com/FZZ/RBM3/H2WEVOWF/FZZRBM3H2WEVOWF.LARGE.jpg", "https://cdn.instructables.com/FH0/UI1N/H2WEVOWG/FH0UI1NH2WEVOWG.LARGE.jpg", "https://cdn.instructables.com/F7S/4RHY/H2WESWQV/F7S4RHYH2WESWQV.LARGE.jpg", "https://cdn.instructables.com/F2N/BLXN/H2WET5UB/F2NBLXNH2WET5UB.LARGE.jpg", "https://cdn.instructables.com/FRX/X8AI/H2WESWQW/FRXX8AIH2WESWQW.LARGE.jpg"], "step_title": "Step 2: Procedure"}, {"step": 3, "steps_text": "Extension/Modification Ideas:   Use a triple beam balance of electronic scale to teach or practice that skill      Use hot and cold water instead.      Compare salt and fresh water and connect with the environment.      Have older students teach this to younger students.      Use other liquids to make density columns. (Water, oil, alcohol, etc.)      Make a much larger one as part of a science night.      Let students try making different density salt solutions and try to figure out which ones work the best and how that relates to density. Other Density Demos:   Egg in salt water or tap water      Ice in water or rubbing alcohol Attachment: I attached a Word document that is a template for a guided lab report that you feel free to modify and use.Other Ideas and Resources:These are just some ideas and alternate extensions.   Some additional references will many different versions of this same idea:DENSITY: SALTWATER COLUMN LAB TEACHER PREPARATION Explains a different way to prepare solutions and some \"discussion\" questions as a worksheet for studentsLiquid Rainbow Written from the standpoint of ocean science for elementary school.  Contains a lot of \"teacher lingo\" (e.g. key concepts, big idea, objectives, etc.)GEMS: Discovering Density book This book costs $18, but I think is where I first saw the idea for this lab.  The handouts are free online in Spanish.  So that might make this a cool activity to do with students learning Spanish too!Steve Spangler 7-Layer Density Column This link provides a video showing a different density experiment with different types of liquids to see how their relative densities are different.  They do use the word \"heavier\" instead of density.  He uses a slightly different way of layering.NOAA Lesson Plan: Hot, Cold, Fresh and Salty Another Earth Science/Oceans connection.  This lesson plan gives ideas about having students compare hot and cold water and fresh and salty water.  These are extensions that would be great to add to a simpler lesson like the one I posted.", "step_imgs": ["https://cdn.instructables.com/FJF/ZUSC/H2WET5TH/FJFZUSCH2WET5TH.LARGE.jpg", "https://cdn.instructables.com/FSF/LDMM/H2WEJL8B/FSFLDMMH2WEJL8B.LARGE.jpg", "https://cdn.instructables.com/F88/5R0Z/H2WET5TN/F885R0ZH2WET5TN.LARGE.jpg"], "step_title": "Step 3: Additional Ideas and Resources"}, {"step": 4, "steps_text": "In research labs, human blood is carefully pipetted to form a layer on top of a substance called Ficoll-Paque (made by GE).  When this tube is centrifuged, the red blood cells (the most dense) go to the bottom, the Ficoll is (the next most dense), then the white blood cells, and finally the plasma (the least dense). Labs use this technique to isolate different parts of the blood.  For instance, if you want to isolate the white blood cells, you can remove the plasma layer (yellow) and then gently extract the thin cloudy white layer that contains the white blood cells.Wikipedia's Ficoll-Paque Article This page describes the basics of FicollFicoll-Paque PLUS Manufacturer's Description A short paragraph from the manufactures that uses the word density multiple timesFicoll-Paque Instructional Video This video shows the layering of blood on top of the Ficoll very slowly and gently and the final layers that form", "step_imgs": ["https://cdn.instructables.com/F8L/TU3U/H2WEJV1T/F8LTU3UH2WEJV1T.LARGE.jpg", "https://cdn.instructables.com/F6A/7Z67/H337JHUQ/F6A7Z67H337JHUQ.LARGE.jpg", "https://cdn.instructables.com/FI6/MVJV/H2WEWGHN/FI6MVJVH2WEWGHN.LARGE.jpg"], "step_title": "Step 4: Real World Connection"}, {"step": 5, "steps_text": "Someone let me know the Word document does not open currently. I tried uploading another version but it also says forbidden. Message me and I can try to send it to you.", "step_imgs": [], "step_title": "Step 5: Graphic Organizer Word Document"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "Make Rolling Pennies!I was bored one day rolling pennies, then i thought how much better would it be if i put an O-ring on it?So I did it and here's the instuctable\u00a0: D", "title": "Rolling Pennies", "url": "https://www.instructables.com/id/Rolling-Pennies/", "section": "home", "steps": [{"step": 1, "steps_text": "\u00a0All you need is...Super Glue\u00a0A PennyAn O-ring", "step_imgs": ["https://cdn.instructables.com/FN0/4AOF/G0UPKVQR/FN04AOFG0UPKVQR.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "\u00a0Place your O-ring over your penny.Note:Whichever coin you use, make sure your O-ring fits comfortably over it.Like the picture : D", "step_imgs": ["https://cdn.instructables.com/F81/ELA7/G0UPR2TJ/F81ELA7G0UPR2TJ.LARGE.jpg"], "step_title": "Step 2: O-ring Over Penny"}, {"step": 3, "steps_text": "\u00a0Glue around the edges of the penny...", "step_imgs": ["https://cdn.instructables.com/FFP/196H/G0UPGB38/FFP196HG0UPGB38.LARGE.jpg"], "step_title": "Step 3: Glueing"}, {"step": 4, "steps_text": "... Let it dry and go roll your penny!", "step_imgs": ["https://cdn.instructables.com/FVY/T9FX/G0UPX3R1/FVYT9FXG0UPX3R1.LARGE.jpg"], "step_title": "Step 4: Done!"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "Target Audience:\nThis is aimed toward those who have taken or are currently taking Intermediate Microeconomics.\nNeed to understand how to plot the Total Product of Labor Curve, Average Product of Labor Curve, and the Marginal Product of Labor Curve.\nBackground:\nCharacteristics of Perfect Competition:\n1. Many producers\n2. Homogenous product (perfect substitutes)\n3. Free entry and free exit.\nNecessary Conditions:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Profit = Total Revenue \u2013 Total Cost\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u03c0 = TR - TC\nWe want to look at how profit changes with respect to quantity, meaning we want to look at the slope. We want to change the equation above to look at the change in profit divided by the change in quantity. (\u03c0 = Profit) These slopes are referred to as marginals.\n\u00a0\u00a0 Quantity = Q\n\u00a0\u00a0 \u0394 = the change in\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u0394\u03c0/\u0394Q=\u0394TR/\u0394Q-\u00a0 \u0394TC/\u0394Q\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MNR = MR \u2013 MC\nMNR \u2013 Marginal Net Revenue\nMC \u2013 Marginal Cost\nMR \u2013 Marginal Revenue\nThe firm will continue to produce if Marginal Revenue is greater then the Marginal Cost. This means that we have a positive marginal profit.\u00a0 For perfect competition in order to maximize profit the MNR must equal zero.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MNR = MR \u2013 MC = 0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MR = MC\nMR = MC is a necessary condition for perfect competition.\nWe want to begin by starting with revenue. Total Revenue (TR) is equal to the Price (P) multiplied by the Quantity (Q).\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TR = P*Q\nNext we want to observe the average value of the revenue and to do this we must divide the total revenue by the quantity. This will give us our Average Revenue (AR)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 AR=\u00a0 TR/Q=(P*Q)/Q=P\nWe substitute P*Q into the equation and we come to see that AR = P because the Q cancels in the numerator and denominator.\nNext we want to look at the change in Revenue, which is the slope and also known as the Marginal Revenue (MR.) We must divide the change in Total Revenue by the change in Quantity.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MR=\u00a0 \u0394TR/\u0394Q=\u00a0 (\u0394(P*Q))/\u0394Q=(P* \u0394Q)/\u0394Q=P\nWe substitute P*Q again into the equation and can pull out the P because it is constant. From this the \u0394Q\u2019s cancel leaving only P. From this we see MR = P\nNext we combine all of the information we just found.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ***AR = MR = P\u00a0\n***This equation only holds for perfect competition\nThis last equation is incredibly important to understand. It means that at some price you will have a horizontal AR and MR curve and this coincides with the demand curve. For a perfectly competitive market to maximize profits MR must equal Marginal cost and in the long run this profit will be equal to zero.", "title": "How to Find the Maximum Profit for a Perfectly Competitive Firm", "url": "https://www.instructables.com/id/How-to-find-the-Maximum-Profit-for-a-Perfectly-Com/", "section": "home", "steps": [{"step": 1, "steps_text": "*Begin with previous knowledge of the Production Theory.\n\u00a0\u00a0\u00a0\u00a0 The Total Product of a variable factor of production identifies which outputs are possible using various levels of the variable input.\nThe Total Product Curve is shown in the first graph.\u00a0\nAXES\nQ = Quantity\nL = Labor\nThe first graph is the Total Product of Labor Curve (TPL)\nThere are three characteristic points that have been pointed out:\n\u00a0\u00a0\u00a0\u00a0 A = Inflection Point\n\u00a0\u00a0\u00a0\u00a0 B = Point of Maximum Slope\n\u00a0\u00a0\u00a0\u00a0 C = Slope of zero\nPreviously known information:\nTPL = Total Product of Labor\nAPL = Average Product of Labor\nMPL = Marginal Product of Labor\nTC = Total Cost\nw*L =wage rate* Labor\nr*K = wage rate * Capital\nAPL=\u00a0 TPL/Q=\u00a0 Q/L\nMPL=\u00a0 \u0394TPL/\u0394L=\u00a0 \u0394Q/\u0394L\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 TC=w*L+r*K\nThe average product is the TPL/Q and the MPL is the slope of the TPL curve.\nAt point B the slope reaches its maximum and this is where the Average will reach its maximum as well. At the inflection point (A) the MPL reaches its maximum and continues to decline from that point and intersects the maximum of the APL. At point C the slope is zero meaning that the MPL is as well zero. From this point MPL declines and has a negative slope meaning that the MPL will be negative. This is shown in the\u00a0 second graph.\n***It is important to note that between point B and C the MPL is positive and declining. In the firm this in the only range in which it will produce output.", "step_imgs": ["https://cdn.instructables.com/FV7/XAGF/H1Y0H087/FV7XAGFH1Y0H087.LARGE.jpg", "https://cdn.instructables.com/FTW/4W20/H1Y0EHWO/FTW4W20H1Y0EHWO.LARGE.jpg"], "step_title": "Step 1: Begin With Previous Knowledge of Production Theory"}, {"step": 2, "steps_text": "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Total Cost = Variable Cost + Fixed Cost\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TC = VC + FC\nTo find the average you must divide by the quantity.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TC/Q=TVC/Q+TFC/Q\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AC=AVC+AFC\nTo find the Average of the variable cost we must divide by Q. From previous knowledge we know that TVC =wL. We can now manipulate the equation and we know that Q/L = APL from above. This is also previously known.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 AVC=\u00a0 TVC/Q=\u00a0 wL/Q=w/(Q/L)=\u00a0 w/APL\nAs average product of labor (APL) increases the AVC decreases and as the APL decreases the AVC increases.\nNext we find the slope of the cost curve. We divide the change in Total Cost by the change in Quantity\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MC=\u00a0 \u0394TC/\u0394Q=\u00a0 \u0394TVC/\u0394Q=\u00a0 \u0394(w*L)/\u0394Q=\u00a0 w\u0394L/\u0394Q=\u00a0 w/(\u0394Q/\u0394L)=\u00a0 w/MPL\nThe change in Total Cost is equal to the change in total variable cost because the fixed cost is not changing.\nAs the MPL increases the MC decreased and as the MPL decreases the MC increases. This is shown in the graph.\nAs the marginal product of labor increases the MC decreases and when the marginal product of labor decreases the MC increases. This is how we will derive the MC and AVC curve. The AC curve will be above the AVC curve and the MC will intersect at the minimum of the AVC and AC curve.", "step_imgs": ["https://cdn.instructables.com/F8U/Y9HQ/H1Y0CHHE/F8UY9HQH1Y0CHHE.LARGE.jpg"], "step_title": "Step 2: Derive the Cost Curve From the APL/MPL Curves"}, {"step": 3, "steps_text": "We will begin with the definition of profit.\nThese equations were defined and explained in the Background.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Profit = Total Revenue \u2013 Total Cost\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u03c0=TR-TC\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u0394\u03c0/\u0394Q=\u0394TR/\u0394Q-\u00a0 \u0394TC/\u0394Q\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 MNR = MR \u2013 MC = 0\nThe firm will continue to produce if Marginal Revenue is greater then the Marginal Cost. This means that we have a positive marginal profit.\u00a0 We want for our marginal net revenue to equal 0.\nMR = MC is a necessary condition for perfect competition\nRevenue = Price * Quantity\nAR=\u00a0 TR/Q=(P*Q)/Q=P\nMR=\u00a0 \u0394TR/\u0394Q=\u00a0 (\u0394(P*Q))/\u0394Q=(P* \u0394Q)/\u0394Q=P\nAR = MR =P\nThis means we will have a horizontal line at the chosen price which is shown on the graph.", "step_imgs": ["https://cdn.instructables.com/F4R/M1P9/H1Y0BR4T/F4RM1P9H1Y0BR4T.LARGE.jpg"], "step_title": "Step 3: Profit, Average Revenue, Marginal Revenue Curve"}, {"step": 4, "steps_text": "First we will look at when Price is greater then the Average Cost.\nP>AC\nWe want to first identify where our TR is on our graph. TR = P*Q So we must find where MC =MR and draw a vertical line down to the Quantity axis and find the Quantity which correlates to the Price chosen. As you can see this forms a rectangle and the area of the rectangle is the TR.\u00a0 The shaded box represents the TR.\nTR = Q*P\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = P0Q0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = Shaded areaThe Second Graph\nNext we have to find the TC. We have our necessary quantity marked and now we must look at the area under the AC curve. We draw a straight line from the price axis to where the price lays tangent to the AC curve where the Q = AC and use this new price to find the Area under the curve. It should be noticeable from the graphs that the TR area is larger than the TC area.\nTC = P1Q\nNow we can find the profit. The TR \u2013TC will be the shaded region below.\nTR was greater than TC and therefor the profit was positive.The Third Graph\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u03c0=TR-TC\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u03c0=ABCD=positive profit", "step_imgs": ["https://cdn.instructables.com/FAZ/19LO/H1Y0CHI4/FAZ19LOH1Y0CHI4.LARGE.jpg", "https://cdn.instructables.com/F1N/OD0O/H1Y0EI0V/F1NOD0OH1Y0EI0V.LARGE.jpg", "https://cdn.instructables.com/FM0/S2BW/H1Y0CHIB/FM0S2BWH1Y0CHIB.LARGE.jpg"], "step_title": "Step 4: Combine Graphs: P Is Greater Than AC"}, {"step": 5, "steps_text": "AVC<P<ACThe First Graph\nWe want to first identify where our TR is on our graph. TR = P*Q So we must find where MC =MR and draw a vertical line down to the Quantity axis and find the Quantity which correlates to the Price chosen. As you can see this forms a rectangle and the Area of the rectangle is the TR.\u00a0 The shaded box represents the TR.\nTR = PQ\nNext we have to find the TC. We have our necessary quantity marked and now we must look at the area under the AC curve. We draw a straight line from the price axis to where the price lays tangent to the AC curve where the Q =AC and use this new price to find the Area under the curve. It should be noticeable from the graphs that the TC area is larger than the TR area.Second Graph\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 TC = P0QThird Graph\nProfit is negative. The firm will continue to operate as long as it covers its variable cost, which is does.\u00a0 When AVC<P<AC the profit is negative but the firm will continue to produce because it will lose more if it shuts down.", "step_imgs": ["https://cdn.instructables.com/FFO/ZYYT/H1Y0H0B1/FFOZYYTH1Y0H0B1.LARGE.jpg", "https://cdn.instructables.com/F37/G88K/H1Y07J6A/F37G88KH1Y07J6A.LARGE.jpg", "https://cdn.instructables.com/FZY/R466/H1Y097AQ/FZYR466H1Y097AQ.LARGE.jpg"], "step_title": "Step 5: P Is Greater Then Average Variable Cost and Less Than Average Cost"}, {"step": 6, "steps_text": "The First Graph\nWe want to first identify where our TR is on our graph. TR = P*Q So we must find where MC =MR and draw a vertical line down to the Quantity axis and find the Quantity which correlates to the Price chosen. As you can see this forms a rectangle and the Area of the rectangle is the TR.\u00a0 The shaded box represents the TR.\nTR = PQ\nNext we have to find the TC. We have our necessary quantity marked and now we must look at the area under the AC curve. We draw a straight line from the price axis to where the price lays tangent to the AC curve where the Q = AC and use this new price to find the Area under the curve. It should be noticeable from the graphs that the TC area is larger than the TR area.The Second Graph\nTC = P0QThe Third Graph\nLoss is greater then the variable cost therefor the firm will shut down.", "step_imgs": ["https://cdn.instructables.com/FDW/ZU6B/H1Y0BRI3/FDWZU6BH1Y0BRI3.LARGE.jpg", "https://cdn.instructables.com/FTH/ISXP/H1Y0H0E4/FTHISXPH1Y0H0E4.LARGE.jpg", "https://cdn.instructables.com/F6D/JC87/H1Y097H5/F6DJC87H1Y097H5.LARGE.jpg"], "step_title": "Step 6: AVC Is Greater Than P"}, {"step": 7, "steps_text": "\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 P=AVC\nP = AVC which is the point at which the firm is not sure whether is should shut down or continue producing. As we have seen when P>AVC the firm continues to produce and when P<AVC the firm will shutdown. At this point P =AVC the firm must make decisions as to whether it should continue to produce or shut down. ", "step_imgs": ["https://cdn.instructables.com/FTP/JRRB/H1Y0BRH9/FTPJRRBH1Y0BRH9.LARGE.jpg"], "step_title": "Step 7: The Shutdown Point: P = AVC"}, {"step": 8, "steps_text": "First Graph\nFrom the TR and TC curves we will now find the maximum profit.\nTC is always above TVC. Between TC and TVC the distance is TFC.\nTC = Total Cost\nTVC = Total Variable Cost\nTFC = Totao Fixed Cost\nThe TC curve from above is incorporated in the graph below. The TC and TR are combined. TR is P*Q which is a linear relationship and increases as Price and Quantity increase.Second Graph\nAs we can see from the graph above we can observe profit by looking at the change in TR and TC.\nA) TC >TR : profit is negative\nB) TR = TC : profit is zero\nC) TR >TC : profit is positive\nD) TR > TC : profit is maximized", "step_imgs": ["https://cdn.instructables.com/F95/2JPC/H1Y07J8R/F952JPCH1Y07J8R.LARGE.jpg", "https://cdn.instructables.com/FO7/I3OI/H1Y04RR7/FO7I3OIH1Y04RR7.LARGE.jpg"], "step_title": "Step 8: Look at Profit From TC and TR Curves"}, {"step": 9, "steps_text": "When Profit is maximized and minimized the MC = MR. When the TC = TR the AC = MR. As we stated above when the total revenue is greater then the total cost we have positive profit and when the TC is greater then the TR the profit is negative. From this we can Combine the TR,TC curve with the MC, AC, and the Profit graphs to find the point at which the firm maximizes profit.\nAs we can see the firm maximizes profits when the profit graph reaches its maximum. This is when on the TC, TR curve the TR is greater and the vertical distance between the TC is at is maximum. This is also the point where our MC = MR.", "step_imgs": ["https://cdn.instructables.com/F8E/KX0H/H1Y0CHL4/F8EKX0HH1Y0CHL4.LARGE.jpg"], "step_title": "Step 9: Combine Graphs to Find Max Profit"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "In this Instructable, I will show you how to find some surprisingly good, and mostly inexpensive, samples of the elements. Many can be found in second hand shops, coin shops, superstores like Wal-Mart, or broken things that you take apart. You just have to know where to look. Scroll down and see for yourself!Some of the things we will be looking for are:Coins     Batteries     Spark plugs     Fishing sinkers     Light bulbs     Jewelry    Electronic devices \u2013 cell phones, computers, etc.Why collect? Element collections are not just the playthings of wealthy eccentrics. Whether you are a lover of science, just curious, or want to make a collection of the elements, possessing samples is a great way to bring the periodic table to life. Even a partially completed element collection makes a wonderful educational tool, and can help to spark interest in science and chemistry in children. In fact, I think that every school should have at least a basic one. Collecting elements presents its own unique challenges. For one, collecting them all is actually impossible! Also:Many  are nearly unobtainable due to their high cost.     Some  are toxic, radioactive, or won\u2019t stick around long because they  have short half-lives (they decay into more stable elements).     Ownership  of some is prohibited by law.     Others  are highly reactive, and must be stored under oil or in a vacuum.    My advice is to enjoy collecting, whether you have two samples or twenty. Take your time; element collecting is a long-term project. Also, if you are unsatisfied with one of your samples, keep in mind that you can always buy a better sample later on. Finally, don't forget to tell people about your collection! That way, when other people run across good samples they will tell you about them or maybe even donate them to you.How To Go About It Obviously, you could use the internet and a credit card to buy samples of the elements. Searching for them offline, however, is much more fun, and is a great way to get your feet wet in the hobby. Unfortunately, there are very few resources to help with this kind of collecting. Starting out, I was discouraged by the seemingly vast amount of research and expense involved, and I think many others probably are as well. I hope this little guide will help you join in the fun, even if you are only casually interested. As with all great hobbies, you can learn a lot from element collecting. Here I will share my findings with you.Going further As your collection grows, you can build a shelf in the shape of the periodic table like the one pictured above to display it. People will instantly recognize the shape of the periodic table, and be drawn to it. To build one like mine, which cost me about $16, check out my instructable. Notice that the samples are not labeled, so people have to guess as to their identity! People who don\u2019t care much about science may be impressed when you hand them an element they have never seen before, or have only seen in photographs.A few notes before we begin: The density, or specific gravity, of the elements is measured in grams per cubic centimeter (abbreviated g/cm3 or g/cc). This is useful for comparing the elements to each other or to water, which has a density of one gram per cubic centimeter. The density of aluminum, for example, is 2.7 g/cm3. This means that aluminum is 2.7 times as dense asan equal volume of water. Heavier iron comes in at 7.874 g/cm3, while even heavier lead is 11.35 g/cm3. The author takes full responsibility for the content of this instructable, and has made every effort to ensure its accuracy. However, due to the difficulty of backing up his findings with references to primary sources, he cannot guarantee the absence of errors. Sorry! If you are new to this site, you should know that if you see boxes around things in the pictures, hover your cursor inside them to display additional information. Also, you can click on pictures to see them full size. I anxiously await any questions, comments, and/or constructive criticism you may have. Also, let me know if you have anything to add (links to resources are helpful); you may be able to help me make this instructable more comprehensive!", "title": "Start an Element Collection - How to Find Samples in Everyday Places", "url": "https://www.instructables.com/id/Start-an-Element-Collection-How-to-Find-Samples-in/", "section": "home", "steps": [{"step": 1, "steps_text": "Did you know the U.S. one cent piece (penny) is no longer made of solid copper? Since 1982, it has been composed of a core of 99.2% zinc and 0.8% copper, plated with a layer of pure copper (Please note that not all pennies minted in 1982 have a zinc alloy core, as member lbrewer42 pointed out. If you go with 1983 or later you will be safe).This makes zinc an easy one. Simply sanding off the copper plating of a post 1982 penny reveals the core of bluish zinc underneath, a sample that is greater than 99% pure.All you need is:A U.S. one cent piece (penny) minted 1982 or later      sandpaper or a flat metal file Be patient! It may take you 10-20 minutes to scratch off all the copper on a penny (without power tools), as you will have to file away all of the coin\u2019s embossed details.What about other samples of zinc?Corrosion-resistant zinc plating of steel (hot-dip galvanizing) is the major application for zinc. Zinc plated items you might easily obtain include:Nuts, bolts, washers, and other mechanical fasteners      Acidic fruit and fruit juices often come in galvanized cans ( the galvanization is on the inside)Zinc is used in batteries; here is a link to a tutorial showing you how to take the zinc from one. The zinc you get from a battery will probably be brittle and corroded, as the ammonium chloride inside the battery reacts with the zinc. See the picture above.Picture note: pieces of zinc from a carbon-zinc battery. Zinc oxide is white, and I presume that is what we are seeing here.Pure zinc is rather brittle, so other metals are added to make it more durable. A predominantly zinc alloy, used for small non-structural castings, is found in things like:Die cast toys like matchbox cars.      Some garden hose fittings.Brass is an alloy of zinc and copper.Fun with zinc!Zinc works well for metal casting, as its melting point (787\u00b0F, 420\u00b0C) is relatively low. This means you can sand a bunch of pennies and place them in a stainless steel ladle, then use a torch to melt them. Working with molten metal is dangerous, so take the proper precautions. Other metals that you can melt include aluminum, tin, and lead.On the other hand, if you do not have a torch, you can still melt the little zinc disks by placing them in an empty steel vegetable can, then putting the can on hot coals like those of a campfire. The can is made of steel so it won\u2019t melt, and it\u2019s thin so it won\u2019t draw much heat away from your zinc. In addition, everybody has one! Because I wanted a larger sample of zinc, I melted down 22 pennies this way, though I did get a fair amount of slag (the scum of oxidization that forms on molten metals) floating on top. This was somewhat due to the fact that I didn\u2019t remove all of the copper plating before melting: I only sanded the edges of the coins. See the picture.Zinc, or even just a piece of zinc-plated steel, makes a good electrode when building a battery out of a vegetable or lemon.", "step_imgs": ["https://cdn.instructables.com/FUD/PY3L/IMNOGTB5/FUDPY3LIMNOGTB5.LARGE.jpg", "https://cdn.instructables.com/F8N/3Y0N/IMNOGSRM/F8N3Y0NIMNOGSRM.LARGE.jpg", "https://cdn.instructables.com/FXZ/1RBN/IMDOELTG/FXZ1RBNIMDOELTG.LARGE.jpg"], "step_title": "Step 1: Let's Start With Zinc!"}, {"step": 2, "steps_text": "Many people have a few foreign coins hidden in a drawer somewhere, and this is a great place to start looking for nickel. Nickel has been widely used in coins, though its rising price has led to some replacement with cheaper metals in recent years. U.S. coins have never been made of pure nickel, but rather a copper-nickel alloy. The U.S. five cent piece, for example, is made of 25% nickel, 75% copper. Canada, on the other hand, struck their five-cent coins in 99.9% pure nickel during the non-war years from 1922\u20131981 (during the wartime period of 1942\u201345, most or all nickel was removed from Canadian and U.S. coins, due to nickel's war-critical use in armor). Canada also used 99.9% nickel in its higher-value coins from 1968 - 2000.These are just a few of the pure nickel coins out there:Canadian nickels minted between 1922 \u2013 1941 and 1946 \u2013 1981      Canadian quarters minted 1968 \u2013 2000It would be nice to have a more complete list, but it would require a lot of research. If you don\u2019t have any foreign coins lying around, you can always go to a coin shop. My coin shop had a basket of assorted foreign coins on their counter, for sale at 10 cents apiece. When I found a Canadian nickel minted in 1940, the owner of the shop kindly donated it to me. What could be a better sample of nickel than an actual nickel? Nickel, like iron, is attracted to a magnet. This means that nickel coins will be attracted to a magnet, though coins made of copper-nickel alloy and nickel-plated steel will as well. The color of nickel has a very slight yellowish tinge, but this is often only readily apparent when you are comparing its color to that of another metal.What about other samples of nickel?About 6% of world nickel production is still used for corrosion-resistant pure-nickel plating, like on the toenail clippers pictured above.Many electric guitar strings are nickel wire wound around a central steel core, although some cheaper strings are wound in nickel-plated steel wire.Side Note: At one time Canada was the world\u2019s leading producer of the metal. The nickel was mined in the Sudbury Basin, and the nickel is believed to have been deposited (I think the magma thrown out by the impact contained a lot of nickel anyway)by a large nickel-iron meteorite that created the basin.", "step_imgs": ["https://cdn.instructables.com/F29/3NQW/IMNOGT9A/F293NQWIMNOGT9A.LARGE.jpg", "https://cdn.instructables.com/FJK/NGUI/IMDOELGG/FJKNGUIIMDOELGG.LARGE.jpg", "https://cdn.instructables.com/FH3/AQFP/IMNOGSJM/FH3AQFPIMNOGSJM.LARGE.jpg"], "step_title": "Step 2: Nab Some Nickel"}, {"step": 3, "steps_text": "Sadly, most things referred to as tin, including tin cans and tin toys, are not made out of pure tin. Tin cans are, at best, only steel that is plated with tin. The toys are some kind of alloy that may or may not contain much tin. The best sample I have ever found are the tin fishing sinkers pictured above. As you can see, tin has a very bright, shiny white color.You can find tin fishing sinkers anywhere fishing gear is sold. I found mine at Wal-Mart, and paid 1.78 USD for six removable split shot sinkers, the biggest ones they had. If you haven\u2019t been fishing, you should know that you crimp this type of sinker onto your fishing line by placing the string in the sinkers\u2019 jaws and closing it with pliers. This type can also be removed by squeezing the back of the sinker with pliers; this opens the jaws back up. The sinkers are very soft, and I believe them to be commercially pure tin (99.8%).What about other samples of tin?The primary application of tin is solder. One of the most common solders is 60/40, and is about 60% tin, 40% lead. Some lead free solders can contain as much as 90% tin.Tin cans usually have an extremely thin layer of tin on the outside, and other things like the leads of electronic components are coated in tin.Fun with Tin!When a bar of tin is bent, a crackling sound known as the tin cry can be heard due to the twinning of the crystals. You can hear a very small version of the tin cry, at least a tin whimper, with a tin fishing sinker of the split shot variety. While holding the sinker close to your ear, gently (it will take very little effort!) squeeze the back of the sinker with pliers. The sinker will make little pinging or twinkly noises as it bends and the mouth of the sinker opens. Try to convert it to grey tin:If you put tin sinkers in a freezer that hovers near zero degrees Fahrenheit, they should slowly undergo a transformation. The sinkers are made of tin, in the form of metallic or \u2018white\u2019 tin, but in cold temperatures, the atoms will slowly rearrange themselves into a different crystal structure and the sinker will become \u2018grey\u2019 tin. This transformation is often called \u2018tin pest\u2019, as it is undesirable for something made of tin to transform into grey tin. Grey tin has properties similar to a metalloid (for more about metalloids, see the next step, silicon). Commercial grades of tin (99.8%) resist transformation because of the inhibiting effect of the small amounts of bismuth, antimony, lead and silver present as impurities. I put one of my sinkers in my freezer, which is hovering around five degrees. It has been a month and so far no visible change.Even if you get a sinker to transform into grey tin, keep in mind that it is still tin; the atoms are just aligned differently. It may still make an interesting sample.", "step_imgs": ["https://cdn.instructables.com/F36/M6CX/IMDOELRG/F36M6CXIMDOELRG.LARGE.jpg", "https://cdn.instructables.com/FYB/UZI9/IMDOF7CG/FYBUZI9IMDOF7CG.LARGE.jpg", "https://cdn.instructables.com/FU1/KM28/IMNOGSN0/FU1KM28IMNOGSN0.LARGE.jpg"], "step_title": "Step 3: Take Hold of Tin"}, {"step": 4, "steps_text": "Silicon is a dark grey metalloid. Most elemental silicon lives inside electronic devices, making up the heart and soul of such semiconducting devices as diodes, transistors, and integrated circuits. To see the silicon inside these devices, all you have to do is smash them with a hammer. Sadly, though, the silicon portion of these components can be surprisingly small. The picture above shows how much silicon you can expect to find inside a large rectifier diode. These are black cylindrical devices with a white or silver band at one end. They have two leads, or legs. They are easy to find in many kinds of electronics, and microwave ovens usually contain one large one.To open a diode, you will need:A rectifier diode, the biggest one you can find. They are designated by a cr or d on circuit boards. A hammer      A hard surface you can hammer on      Safety glasses      Pliers      Wire cutters or soldering ironOnce you have found a diode, either de-solder the leads from the printed circuit board (if it\u2019s attached to one) or cut the diode free with wire cutters. Then, while holding one of the leads of the diode in the pliers, rest the body of the diode against a hard surface and strike it with the hammer. Make sure you put on safety glasses to protect your eyes from flying diode fragments. Trust me they\u2019ll be flying. It probably won\u2019t take more than a few hits to pulverize the diode\u2019s casing, and then you can pull the broken pieces away to reveal the silicon junction. If the junction hasn\u2019t broken by now, you will have to hit it with a hammer to break it open, revealing two broken hexagonal surfaces of silicon like you see in the picture. The silicon is not pure; pure silicon is not very useful. Silicon makers spice up their silicon with phosphorus, boron, or other goodies. This is called \u2018doping\u2019 the silicon, and doped silicon has very useful (and fascinating) semiconducting properties.Transistors:A similar technique to what we used with the diode can be used when opening large transistors. Transistors always have three leads, or legs. Integrated circuits:Integrated circuits today mostly come in black plastic packages, though in the past they could be found in ceramic packages or even round metal cans. The case of an integrated circuit can be opened (or more often smashed) to expose the chip inside, though the brittle chip is usually broken to bits in the process. I have had the most luck with old ceramic ICs (some computer processors are still made with ceramic cases) and with the old metal can type. With the can type you can simply cut around, and then pop off, the top of the can. What you will see inside is:In common integrated circuits, a wafer of monocrystalline (cut from a large single crystal) silicon (often refined to an extremely high purity of 99.9999999%) serves as a mechanical support for microscopic circuits: thousands of individual diodes, transistors, or even resistors are created in the top few thousandths of an inch by doping. They are insulated from each other by thin layers of glasslike silicon oxide, an insulator that is easily produced by exposing parts of the wafer to oxygen under the proper conditions. The \u201cwires\u201d that connect the components together are then layered onto the surface of the chip.What about other samples of silicon?Photo-voltaic cells (solar panels) are made with thin layers of silicon. A small panel from a calculator or solar stake light might make a good sample, but I am not sure what you are actually seeing when you look at a solar cell.Silicon is not a metal, but rather a metalloid. Metalloids conduct electricity like the metals, although not as well. They are also more crystalline than the metals, making them hard and brittle. The silicon you will find in semiconductors is brittle and chips easily. In nature, silicon is primarily found combined with oxygen, forming silica. Silica is the main ingredient of sand, quartz, and glass.There are ways reduce silica, or sand, into elemental silicon. They involve fiery chemical reactions. Search for them!Fun with Silicon!The broken halves of the diode\u2019s silicon junction might make a nerdy pair of earrings.", "step_imgs": ["https://cdn.instructables.com/FQ8/0ED5/IMDOELM2/FQ80ED5IMDOELM2.LARGE.jpg", "https://cdn.instructables.com/FK8/W9CO/IMDOELJL/FK8W9COIMDOELJL.LARGE.jpg", "https://cdn.instructables.com/FNK/TZJD/IMDOELMM/FNKTZJDIMDOELMM.LARGE.jpg", "https://cdn.instructables.com/FC9/6S7G/IMDOELKS/FC96S7GIMDOELKS.LARGE.jpg"], "step_title": "Step 4: Snatch Some Silicon"}, {"step": 5, "steps_text": "Carbon is essential to all known living systems; without it life as we know it could not exist. Pictured above are my carbon samples. The four carbon rods are from batteries that I took apart. At the bottom is a section of carbon fiber arrow shaft, cut from a broken arrow. Both represent carbon in the form of graphite. Graphite and diamond are both carbon, the carbon molecules are simply connected to each other differently. This gives graphite and diamond very different properties. For example, graphite is opaque and black, while diamond is highly transparent. Graphite is soft enough to form a streak on paper, while diamond is the hardest naturally-occurring material known. Densities:graphite: 2.267 g/cm3     diamond: 3.515 g/cm3To remove a carbon rod from a battery:Carbon rods form the positive electrodes inside common zinc-carbon dry cell batteries. These kinds of batteries do not have the word \u201calkaline\u201d on the case, but usually say something like heavy-duty, extra-heavy-duty, or even super-heavy-duty. The rods shown came out of a dead 6-volt lantern battery, and their extraction is detailed in the other pictures. For more detailed instructions on battery disassembly, see this tutorial. Once you get the carbon rod out of the battery, it may have a sticky tar-like substance on one end; this can be removed with a solvent (I used gasoline) on an old rag. Any residual black powder (manganese dioxide mixed with carbon, moist with electrolyte) still sticking to the rod can be wet sanded off, using a piece of wet-or-dry sandpaper and running water. A final scrub with warm soapy water makes the rods ready for direct handling and display.Safety Tip: Disassembling this kind of battery is not exactly dangerous, but you will have to protect yourself from the caustic electrolyte inside. Despite being called \u201cdry cells\u201d, the compounds inside are moist with an electrolyte that is hard on skin and will corrode anything metal it meets. You must wear rubber gloves (or at the very least a few layers of plastic grocery bags) over your hands. Another guide to taking apart a lantern battery.Neat Fact: The carbon rod in the battery is chemically inert, and is used here because carbon is a non-corrodible conductor. Every common metal would quickly be corroded away by the electrolyte. Carbon fiber arrow shafts:Graphite can be formed into strong fibers. The fibers are lightweight, owing to carbon\u2019s low density (in this form, which is graphite) of 2.2 g/cm3.My arrow shaft is made of these fibers, with the fibers running perpendicular to each other in layers. Very cool. My shaft says 100% carbon, but I am unsure what this actually means. You can buy arrow shafts, at least around archery season, at Wal-Mart for 3-4 dollars. Other things made of carbon fiber include ski poles, fishing rods, and other high end sporting equipment.What about other samples of carbon?Don\u2019t forget other forms of carbon, like diamonds.Pencil lead is graphite, mixed with a binder, usually a clay or wax-like substance.Fun with carbon!Carbon can be used as an electrode, like in a DIY mini arc furnace.You can also use it to stir molten metals.", "step_imgs": ["https://cdn.instructables.com/F5F/WCJZ/IMCFCTSS/F5FWCJZIMCFCTSS.LARGE.jpg", "https://cdn.instructables.com/FB1/RJ04/IMNOGSUT/FB1RJ04IMNOGSUT.LARGE.jpg", "https://cdn.instructables.com/FI4/NGOW/IMNOGSV9/FI4NGOWIMNOGSV9.LARGE.jpg", "https://cdn.instructables.com/FYK/5BDT/IMNOGSVL/FYK5BDTIMNOGSVL.LARGE.jpg", "https://cdn.instructables.com/FBV/AQ0E/IMNOGSVW/FBVAQ0EIMNOGSVW.LARGE.jpg"], "step_title": "Step 5: Collect Some Carbon"}, {"step": 6, "steps_text": "Believe it or not, you probably have some gold on you right now. Not wearing any jewelry, you say? How about your cell phone? Inside just about every phone is maybe 50 cents to a dollars worth of gold, in the form of a very thin sheet layered onto the circuit board inside. The gold forms the tiny conductive circuit pathways that connect the many different components on the board to each other, a job more commonly performed by copper.Many people have a few old cell phones hiding in their closet. Circuit boards with gold can also be found in computers, portable mp3 players, and many other miniaturized electronic devices. If you are ambitious, you can extract some of the gold from a circuit board, and then possibly melt it into a little nugget with a torch. The amount of gold on a circuit board is very small though, and is probably not worth all the extra effort. If you want to try it, here\u2019s the link.Gold is also used as plating on electrical connectors. The theory is that because gold won\u2019t corrode, it will always form a good connection. Gold plated connectors can be found on some of the more expensive electronics cables, such as audio, video and USB cables. Quality ear buds and headphones often feature gold plated plugs. The gold plating is not very durable however, and will wear off if the connector is plugged and unplugged enough times. For these applications, a more durable nickel plating is often better. Also, keep in mind that not all gold plating is created equal. Some are thin and look like gold, can be advertised as gold, but are actually so thin that they don\u2019t do a whole lot of good except color the object yellow.Gold plated fuses can be bought, and these may be a small and inexpensive way to get a sample of gold. Or you could just clip the plug off of your beats headphones (ha ha).There is also gold plated jewelry.Next we move on to jewelry, and other fine things that are made of gold.24 karat gold is pure gold. As far as I know it is only available as bullion or bullion coins. These are really expensive, however, so we won\u2019t talk about them here. All the other gold you see in jewelry and other luxury items is mostly not pure because pure gold is too soft to make into anything practical. Other metals are added to make it harder and more durable. A karat is one 24th part. That means:20 karat gold is 20 parts gold, 4 parts other metals, or 83% pure gold.      18 karat gold is 18 parts gold, 6 parts other metals, or 75% pure gold.      12 karat gold is 12 parts gold, 12 parts other metals, or 50% pure gold.      10 karat gold is 10 parts gold, 14 parts other metals, or 42% pure gold.            Keep in mind that the karat system is not precise, and the percentages can be fudged a little bit. For example, a 99% gold alloy can be marketed as 24 karat. If you look at the inside of a gold band or ring, a karat mark, usually a number and the letter K, should be visible.", "step_imgs": ["https://cdn.instructables.com/FRW/PBZQ/IMDOEUQT/FRWPBZQIMDOEUQT.LARGE.jpg", "https://cdn.instructables.com/F8Q/PHYN/IMCFCTT0/F8QPHYNIMCFCTT0.LARGE.jpg", "https://cdn.instructables.com/FWW/XW4F/IMCFCTSY/FWWXW4FIMCFCTSY.LARGE.jpg"], "step_title": "Step 6: Grab Some Gold"}, {"step": 7, "steps_text": "Want an inexpensive sample of silver? Look no further than your coffee maker. Yup, you heard right. Your coffee maker. If you open up a coffee maker, you will find two small thermal fuses that have silver plated cases and lead wires. Thermal fuses are also found in other heat-producing electrical appliances such as hair dryers, water heaters, hot plates, and space heaters. They function as safety devices to disconnect the current to the heating element in case of a malfunction (such as a defective thermostat) that would otherwise allow the temperature to rise to dangerous levels, possibly starting a fire.What about other samples of silver?We have:Silver plated articles     Silver bearing solder     \u2018junk\u2019 silver coins     Sterling Silver articles     Silver bullion coins and barsCoins are a good representative of silver, as it has been a widely used coinage metal for thousands of years. U.S. quarters, dimes, and half dollars minted before 1965 are all composed of 90% silver, 10% copper. Pure silver is soft, so the copper increases the coin\u2019s durability and helps it resist the wear and tear of circulation. Most of these coins are not in circulation any more, but if you are extremely fortunate, you may still find one in your change. Always check your change! First look at the year on the coin, the silver ones are minted 1964 or earlier. Next, look at the edge of the coin. A silver coin is made of one solid alloy, whereas these coins today visibly consist of a sandwich of different metals. Note: The Morgan and Peace silver dollars are 90% silver as well, but you will never find these in your pocket change. All the 90% silver coins, unless they are in very good condition and therefore have some numismatic value, are called \u2018junk\u2019 silver.To get pure silver you have to buy silver bullion, which is mostly sold in the form of coins, rounds, or bars. One example is the $1 silver eagle, a 1 oz. silver bullion coin issued by the U.S government that is 99.93% silver and only 0.07% copper. These coins are never circulated, and each contains an ounce of pure silver. Although the face value is $1, this is not the coin\u2019s actual value. Silver coins and bullion can both be bought at coin shops. Sometimes you will find the junk silver coins at flea markets or pawnshops. The price of silver, which goes up and down, will dictate how much you pay for them. However, keep in mind that you will not be paying the spot price per ounce that is shown on the precious metal exchange. You have to pay a premium on top of the spot price, and this premium may be large or small depending on what form the silver takes. For example, the U.S. silver eagle mentioned above commands a high premium. Before buying silver, make sure you are an educated buyer so you don\u2019t end up paying too much. If you are new to silver, I recommend reading this article on silver investing. It will show you all the different options.Approximate prices as of January 2016, when the spot price hit a five-year low, and was trading around $14 an ounce, at my local coin shop:a junk silver dime goes for about 1.25a junk silver quarter for 3.13, a silver eagle $18.Silver can be a little pricey for some collectors, but remember that silver will retain its value so you can sell it and regain some of your investment if you want to. You might even make a few bucks if you bought low and sold high. Or, when the zombie horde is approaching you can trade your silver for a hatchet and a case of beer. Cheers!Most silver in jewelry is an alloy called Sterling Silver. Sterling Silver is 92.5% silver and 7.5% copper, meaning it is slightly more pure than junk silver coins. If you have something made of sterling silver, it will have usually had the word Sterling stamped on it somewhere. The only exceptions would be if the Sterling Silver article is too small to have a word stamped on it, or the article does not have an inconspicuous place for the stamp (where the stamp would not ruin the article\u2019s appearance). If it doesn\u2019t say Sterling on it, but it has the appearance of silver, it may be silver plate. Silver plated articles are common, and can be found rather easily in second had shops or at yard/garage sales. There you may also find silver plated flatware. A silver plated trinket or piece of jewelry makes a good sample, or even just a plated fork or spoon.It is a good idea for you to familiarize yourself with the appearance of silver. The most distinctive face is a tarnished surface; silver tarnishes black, sometimes with rainbow hues and other colors mixed in. Silver is actually a slightly better conductor than copper, but is rarely used for electrical purposes because of its price.Note: Oneida and W.M.A. Rogers are manufacturers of silver plated articles.Fun with silver!One way I know to test if something is silver is to place it in the yolk of a hardboiled egg. The sulfur in the yolk is supposed to make the silver blacken. I tried this, and it worked, but it took a while and got kind of gross in the process.Element enthusiast Theodore Gray has made silver bullets, presumably for killing werewolves.", "step_imgs": ["https://cdn.instructables.com/FQC/36PS/IMNOGSH6/FQC36PSIMNOGSH6.LARGE.jpg", "https://cdn.instructables.com/FYJ/2GWU/IMDOELNJ/FYJ2GWUIMDOELNJ.LARGE.jpg"], "step_title": "Step 7: Score Some Silver"}, {"step": 8, "steps_text": "Platinum is expensive, even more so than gold. You would think this would put it out of reach of the humble collector, but you will be surprised to learn that it doesn\u2019t.To look for platinum, we turn to automobiles. Platinum is the least reactive metal. It has a remarkable resistance to corrosion, even at high temperatures. Because of this, it is used to make electrodes for some automobile spark plugs and oxygen sensors. The spark plugs are now common, and can be bought in auto parts stores and often in superstores like Wal-Mart. They are expensive though, so a better option would be to get used ones the way I did. For most people this might mean talking to a mechanic and asking for old spark plugs that come out of vehicles, but I took mine out of junk cars destined for the salvage yard. The plugs by themselves are cool samples, as they have the word platinum printed right on the side. I was unsatisfied with the visibility of the actual platinum, however, so I cut away part of the plug so I could see it better. To replicate what I did, you will need:Platinum Spark plug     Hacksaw     Bench grinder     Hammer     Small flathead screwdriver     Safety glasses and gloves     Bench viseMy samples are Bosch Platinum plugs, which boast on the package that the center electrode is comprised of a slender 99.9% pure platinum rod. I first donned gloves and protective eyewear. Then, using a bench vise to hold the plug horizontally, I used a hacksaw to cut around the outside of the plug and remove the outer electrode. Next, I cleaned up my rough hacksaw cut on a bench grinder. Afterwards, I rested the ceramic insulator against a hard surface and struck it with a hammer, fracturing it. Finally, I was able to pick off the chunks of broken ceramic around the center electrode with a small screwdriver and reveal the platinum. Once again, you can clean up the possibly sharp edge of the ceramic on the bench grinder. To look at a sample prepared this way, people have the body of the plug to hold onto. What about other samples of platinum?I haven\u2019t done much research on other sources of platinum, as I was satisfied with my sample. However, there is still:Jewelry:Platinum finds use in jewelry, usually as a 90\u201395% alloy, due to its inertness and shine.Catalytic converters:Catalytic converters are vehicle emissions control devices, found on the underside of cars. They look a little like a small muffler, and are mounted just behind the engine with the exhaust manifold feeding directly into them. The platinum (or other platinum group metal or metals) helps complete the combustion of the residual unburned hydrocarbons in the engine exhaust. More research is needed, as converters may not contain platinum in a form that is sample worthy.  Oxygen sensors:Oxygen sensors are mounted very close by the converter, also on the exhaust system. They sense the level of oxygen in the exhaust, and tell the engine\u2019s computer controller if the fuel is being burned properly. Some of them have platinum electrodes.Fun with platinum!Want to record a message that will be readable an eon from now? Scratch it into a piece of platinum and bury it in the desert!", "step_imgs": ["https://cdn.instructables.com/FN5/9WDS/IMDOELHE/FN59WDSIMDOELHE.LARGE.jpg", "https://cdn.instructables.com/FVO/EEZJ/IMDOELGZ/FVOEEZJIMDOELGZ.LARGE.jpg", "https://cdn.instructables.com/FSP/Q2MC/IMDOELHC/FSPQ2MCIMDOELHC.LARGE.jpg"], "step_title": "Step 8: Procure Platinum"}, {"step": 9, "steps_text": "Have an old tackle box in the garage? Maybe some old fishing equipment that no one uses? This is a good place to look for lead. Fishing sinkers have been made out of lead for a long time, due to lead\u2019s high density (70% more dense than iron). Even if you don\u2019t have any lead sinkers lying around, they can still be bought cheaply at any retailer that sells fishing equipment. The package will probably have the word \u2018lead\u2019 printed on it, or at least something like, \u201cthis product contains lead, a substance known to the state of California to cause birth defects or other reproductive harm\u201d. Sinkers are good samples; they often come in convenient plastic baggies.What about other samples of lead?Lead is a common enough metal, and (as you probably already know) can also be found in:Tire balances     Automotive battery clamps     Lead bullets and shotThe small weights attached to the wheel rims of most cars, called tire balances, are lead, cast around a piece of steel that allows the weight to be clipped onto the rim. You might be able to pry one off an old wheel rim, as long as it doesn\u2019t have a tire mounted on it.90% of the world market for lead is in storage batteries, because nearly all cars use lead-acid batteries for their electrical needs. Inside these batteries, which are big black plastic boxes, are plates of lead hardened with antimony. Also, the battery posts and clamps are often made of lead. The clamps can be purchased in retail stores that carry automotive parts, and make for sizable samples.Lead bullets and shot, which are alloyed with antimony for hardness, are also a good source of lead. Since it is dangerous to remove the lead slug from a live round, or to remove lead shot from a shotgun shell, I recovered bullets for my collection by digging them out of a hillside. The hillside had been used to back a target. As an extra bonus, I was taking lead out of the environment. Fun with lead!Lead is not very fun, a fact that was brought to the public\u2019s attention recently by a water toxicity crisis in Flint, Michigan. Keep in mind that lead is a potent toxin, and can be absorbed through your skin. To limit your exposure, here are a few guidelines to keep you safe:Always wash your hands after handling anything lead, or anything that contains lead - this will keep it from being absorbed into your skin or finding its way onto things that you touch (or worse, into your mouth). The best idea is to handle lead objects with gloves, or put them in plastic baggies so you don\u2019t have to touch them (this is how I keep my samples).Never sand or grind on a piece of lead \u2013 this is the worst thing you could do, because it puts small lead particles into the air that you could breathe.", "step_imgs": ["https://cdn.instructables.com/FEW/YACP/IMCFCTT2/FEWYACPIMCFCTT2.LARGE.jpg"], "step_title": "Step 9: Locate Some Lead"}, {"step": 10, "steps_text": "The element tantalum is indispensable for making electronic components called capacitors. This is because capacitors made with tantalum can be made smaller than other kinds of capacitors, while still performing the same function. They are mostly found inside miniaturized electronic devices, including cell phones, computers, mp3 players, key fobs, and countless others. Tantalum capacitors are also more rugged than other kinds of capacitors, making them reliable even in extreme environments like the one found inside the engine compartment of your car.More than 90% of all tantalum electrolytic capacitors are manufactured as surface mounted chip capacitors like the yellow-orange rectangular ones in the picture. Less common are the epoxy-dipped radial-lead \"pearls\", followed by the very rare axial lead variety. Remember that capacitors always have two leads, or legs. They are designated by the letter C, which is often printed on the circuit board right near the capacitor along with that particular capacitor\u2019s number. Again, see the picture.Placing a tantalum capacitor in your collection is a good representative of tantalum, because it is the prime commercial application of the metal. They can be robbed from circuit boards or bought at electronics stores like Radio Shack. To see tantalum metal, however, you will have to burn off the epoxy or plastic case of one of these capacitors. To do this, you will need:Tantalum capacitor - I suggest the biggest one you can find.     Candle, and something to light it with     Needle nose pliers     Wire cutters or soldering iron (to remove a capacitor from a circuit board)     A good work surface, preferably one that cannot be damaged by heat, in a place where you will be able to find something small if you accidentally drop it.            First, clip or de-solder the tantalum capacitor from the circuit board (if attached to one). Then, while holding it in the jaws of needle nose pliers, hold it in the flame of a candle. The goal is to burn off the insulation on the capacitor. As the insulation burns and turns to ash, you can knock a layer of it off and continue burning. At some point the core of the capacitor will be only covered by a black powdery substance. Don\u2019t confuse this layer as insulation, it won\u2019t burn away. This is manganese dioxide. You should stop heating the capacitor core now, otherwise:If you continue to heat the capacitor after most of the insulation has burned away, you can trigger a rapid exothermic reaction similar to the thermite reaction. The manganese oxide will give up its oxygen atoms, which form new bonds tantalum, burning it to create tantalum oxide. The core of the capacitor will ignite, burning with a small flame of its own for a second or two until it glows white hot. It won\u2019t melt though, as tantalum has a very high melting point (5,463\u00b0F). The reaction only lasts for a few seconds, and it scared me the first time it happened. I wasn\u2019t hurt, but handling anything that hot even for a short time is very dangerous. If you can get all the insulation off without triggering the reaction and fusing your sample, you have a sample of tantalum.The core of the capacitor is made of tantalum powder that has been sintered into a nugget around a tantalum wire. The tantalum nugget is then coated with manganese dioxide, a black powdery substance. The leads are then attached and the whole thing is coated in epoxy.Wet tantalum capacitors:\u201cWet\u201d tantalum capacitors, like the ones on the left side of the picture at the top of this step, are rarely seen. Mostly they are used in industrial, military, or even aerospace applications. They have a wet electrolyte, but still contain a sintered tantalum pellet like the epoxy dipped kind, hence they are sometimes called wet slug tantalum capacitors. Some have silver cases, while others have tantalum casings. The ones I found I robbed offof a circuit board, but I can't remember what the board came out of. I googled the number on the case (109D) and found they are the \u201c109D Commercial Style\u201dwith a \u201csilver case, elastomer seal\u201d. Primary applications of this style are \u201cindustrial, automotive, and telecommunication applications where a superior quality, reliable design is required\u201d. I got all my information about them from a PDF put out by the Vishay Corporation. I haven't opened any of mine, but I have three so maybe I will sometime \u2013 I bet the tantalum nugget inside is much bigger than the ones I got from the epoxy dipped tantalum caps.", "step_imgs": ["https://cdn.instructables.com/FCU/PBC4/J34PM80C/FCUPBC4J34PM80C.LARGE.jpg", "https://cdn.instructables.com/FNF/VCB1/J34PM80D/FNFVCB1J34PM80D.LARGE.jpg", "https://cdn.instructables.com/F7L/M6RM/IMDOELPH/F7LM6RMIMDOELPH.LARGE.jpg", "https://cdn.instructables.com/FJA/E1W6/IMNOGST2/FJAE1W6IMNOGST2.LARGE.jpg", "https://cdn.instructables.com/FFA/A3HF/IMNOGSJN/FFAA3HFIMNOGSJN.LARGE.jpg", "https://cdn.instructables.com/F78/XMFZ/IMDOELQH/F78XMFZIMDOELQH.LARGE.jpg"], "step_title": "Step 10: Take Hold of Tantalum"}, {"step": 11, "steps_text": "Matchboxes are cheap, and a great way to represent phosphorous!According to Wikipedia, the striking surface of a typical modern matchbox is composed of:50% red phosphorous,25% powdered glass or other abrasive material (to increase the friction during striking),16% binder (glue),5% neutralizer,and 4% carbon black.I assume other striking surfaces are of a similar composition. You could maybe try to scrape the phosphorous off and try to purify it, but for now I am happy with just putting a striking surface in my collection.", "step_imgs": ["https://cdn.instructables.com/FYH/ZMMD/INUJOGJH/FYHZMMDINUJOGJH.LARGE.jpg", "https://cdn.instructables.com/FVS/FD6V/INUJOGEE/FVSFD6VINUJOGEE.LARGE.jpg"], "step_title": "Step 11: Find Phosphorous"}, {"step": 12, "steps_text": "See the woolly filament inside these flash bulbs? I believe this is zirconium. When the bulb is connected to the current from a battery, the electricity flows through the filament just as it would in a regular light bulb. The difference here is that the filament is a flammable metal (early flash bulb filaments were made of magnesium, later replaced by brighter zirconium) and the bulb is filled with oxygen (rather than an inert gas like regular light bulbs). The filament ignites in a brilliant flash, burning to ash in an instant. The glass bulb contains this violent process, and is plastic coated to help keep the bulb from shattering. The plastic coating on these bulbs is clear, whereas many you will see are tinted a blue color.I found these bulbs tucked away in an old box in my workshop; you might find them in antique stores. Most commercially available zirconium metal still contains 1-3% hafnium, so this sample is probably 98% pure. Zirconium is resistant to corrosion, but is reactive with oxygen at high temperatures.", "step_imgs": ["https://cdn.instructables.com/FGF/ZA03/IMNOGSVZ/FGFZA03IMNOGSVZ.LARGE.jpg", "https://cdn.instructables.com/FUU/12YT/IMNOGSXF/FUU12YTIMNOGSXF.LARGE.jpg", "https://cdn.instructables.com/FTR/MWZF/IMNOGT05/FTRMWZFIMNOGT05.LARGE.jpg"], "step_title": "Step 12: Don't Forget Zirconium!"}, {"step": 13, "steps_text": "Rhodium is used as a plating on jewelry. I found this little giraffe in my friend's jewelry collection. Very shiny.", "step_imgs": ["https://cdn.instructables.com/F6C/2JX1/IN7QRG6N/F6C2JX1IN7QRG6N.LARGE.jpg"], "step_title": "Step 13: Rhodium"}, {"step": 14, "steps_text": "Ruthenium is used as a plating to give jewelry a dark shine. Some have compared its appearance to pewter, but because I am unfamiliar with pewter, I think it resembles polished hematite. The necklace is from my sister\u2019s jewelry collection, she let me photograph it. I found the tassel on the floor in Wal-Mart.Other things that might be plated in Ruthenium would be fishing hooks or lures (I think).", "step_imgs": ["https://cdn.instructables.com/FZU/QQHF/IMDOELIM/FZUQQHFIMDOELIM.LARGE.jpg", "https://cdn.instructables.com/FGP/3N10/IMDOELJ2/FGP3N10IMDOELJ2.LARGE.jpg"], "step_title": "Step 14: Ruthenium"}, {"step": 15, "steps_text": "See the dark spot on the vacuum tube in the photograph? When I first saw it, I thought it indicated that the tube had failed, or \u2018burned up\u2019. However, this is not the case. Barium metal has been evaporated onto the inside of the glass envelope, forming something called a getter spot. The getter helps to maintain a vacuum, because the highly reactive barium metal combines with or absorbs unwanted gases. While the color of barium metal is silvery-white, this rapidly vanishes upon oxidation, giving way to a dark gray oxide layer, which I assume is most of what we are seeing here. Newer getter spots may appear more shiny and mirror like. If the getter is exposed to atmospheric air (for example, if the tube breaks or develops a leak), it turns white and becomes useless. Barium\u2019s reactivity means that it must be stored in a vacuum or under oil.Manufacture of this type of getter:A look underneath a getter spot will reveal a metal trough, usually semicircular, that contained the barium metal during the tube\u2019s manufacture. After the air was pumped out and the tube sealed, the trough was heated with an induction heater (which was held near the trough, outside of the tube). The trough got red hot and the barium became vaporized, instantly reacting with any residual gas, then condensing on the cool walls of the tube in a thin coating, the getter spot or getter mirror, which continues to absorb gas. This is the most common type, used in low power vacuum tubes. Specialized tubes may use a more exotic getter material like zirconium.I found vacuum fluorescent displays in old microwaves. Vacuum fluorescent displays have getter spots, though LED displays are more common nowadays. I found my vacuum tube inside an old TV, which was in an old dump. The transistor was invented in 1947, and by the late 1960\u2019s had almost completely replaced the vacuum tube.A look around a flea market or antique shop may yield old electronics that contain vacuum tubes, or even just the tubes themselves (I have seen both).Vacuum tubes are still used in high-end audio equipment, notably guitar amplifiers.Note: Keep in mind that not all getters use barium. A functioning phosphorus getter looks very much like an oxidized metal getter, although it has an iridescent pink or orange appearance which oxidized metal getters lack. Phosphorus was frequently used before metallic getters were developed; they didn\u2019t continue to absorb gas after they were fired.Picture note: A white deposit indicates total failure of the seal on the vacuum system.", "step_imgs": ["https://cdn.instructables.com/FWT/IL7R/IMNOGVYY/FWTIL7RIMNOGVYY.LARGE.jpg", "https://cdn.instructables.com/FO0/E12Q/IMCFCTR1/FO0E12QIMCFCTR1.LARGE.jpg", "https://cdn.instructables.com/FGM/4ZDW/IMCFCTRA/FGM4ZDWIMCFCTRA.LARGE.jpg"], "step_title": "Step 15: Bag Barium"}, {"step": 16, "steps_text": "Tungsten is synonymous with light bulb filaments, and a filament makes a good sample. A big filament is best, and these come from high wattage light bulbs. Light bulbs used in automobiles can also have large diameter filaments, because they use the lower voltages provided by car batteries. The drawbacks of filament samples are that they are small, and to remove one from a bulb you have to deal with the potential hazard of broken glass. When braking light bulbs, I recommend wrapping the bulb in a piece of cloth like material, then smashing it with a hammer. If you do it right, the glass bits will be contained by the material. Then, you can separate the filament from the bulb. Alternatively, leave the filament in and use the base of the bulb as a holder of sorts.Tungsten is quite heavy, just slightly less dense than gold. It would be cool to have a sample big enough that would allow you to feel this property.What about other samples of tungsten?Wikipedia states that:High-density alloys of tungsten with nickel, copper or iron are used in high-quality darts (to allow for a smaller diameter and thus tighter groupings) or for fishing lures (tungsten beads allow the fly to sink rapidly). Some types of strings for musical instruments are wound with tungsten wires. I have a golf club that advertises copper-tungsten weighting. I can\u2019t see it though; I think it is inside the club head.My wal-mart sells tungsten fishing weights, though they cost around 6-7 USD for four and are no doubt an alloy of some kind.TIG (tungsten inert gas) welding utilizes tungsten electrodes. From what I understand, during welding electricity jumps an arc from the tip of the tungsten electrode to the metal to be welded. At the same time another rod, a filler rod, is placed in the heat of the arc, melting it to form the weld puddle. Tungsten\u2019s high melting point (the highest of any metal, 6129 degrees F) means the electrode can withstand the high temperatures of the arc without melting, though the welding process does slowly consume it. Some TIG electrodes have other metals added, as indicated by colored paint on the end of the electrode:2% thoriated (with thorium) - red tip     Pure tungsten - green tip     Lanthanated tungsten (with lanthanum) - gold tip     Ceriated tungsten (with cerium) - orange tip     Zirconiated tungsten (with zirconium) - brown tipI have yet to get to a welding shop to ask about TIG electrodes, but they are probably expensive and only sold in a full box of ten.", "step_imgs": ["https://cdn.instructables.com/FS8/ZO5G/IMDOELRI/FS8ZO5GIMDOELRI.LARGE.jpg"], "step_title": "Step 16: Take Hold of Tungsten"}, {"step": 17, "steps_text": "Inside every ionization type smoke detector is a small amount of the radioactive element americium. These smoke detectors are very common; you probably have a few in your home. It\u2019s actually quite easy to tell if you do, because they all have the words \u201ccontains radioactive substance Am 241\u201d molded into the plastic. The americium, in the form of americium dioxide, is plated onto a small metal button inside, mounted in a small enclosure known as the ionization chamber. You can open the smoke detector and take the little button out; it isn\u2019t that hard and there is a great instructable on how to do it. What about the radiation, you ask? The radiation emitted is relatively benign, but to be safe I recommend the following:Keep the americium button in a safe place away from kids, preferably in a small childproof container of some kind. Never touch the face of the button that the americium is plated on. If you do accidentally touch the face of the button, wash your hands.Americium is a synthetic or manmade (not naturally occurring) element, the only such element to have found its way into peoples\u2019 homes. Most ionization smoke detectors contain a maximum of one micro curie (abbreviated 1.0 uC) of americium.One curie = 37 billion spontaneous nuclear transformations per secondmicro = one millionth part, so 1 micro curie is equal to 37 thousand spontaneous nuclear transformations per second.Sometimes this same figure is given in becquerels, and One becquerel = one spontaneous nuclear transformation per second.Therefore, each smoke detector contains a maximum of 37,000 becquerels (abbreviated 37kBq)Every second, about 30,000 of the americium atoms decay. When they do this, a chunk of the atomic nucleus breaks off and goes flying through the air. Primarily this is an alpha particle, which is two neutrons and two protons stuck together (the equivalent of the nucleus of a helium atom). This leaves behind a nucleus with two less protons, meaning the atomic number of the decaying atom drops by two: Americium, element 95, becomes Neptunium, element 93. Alpha particles, because they are large and positively charged, only travel a few inches in air and are easily absorbed by a few sheets of writing paper.The half life of Americium 241 is 432.2 years.The older a smoke detector is, the more Neptunium atoms it will contain. Neptunium-237 has a half-life of 2.14 million years. This means that you can use americium buttons to fill both the americium and neptunium places in an element display. Why radiation in a smoke detector? Inside the detector\u2019s ionization chamber, there are two metal plates sitting opposite each other. Attached to one of them is the americium button, which is emitting a constant stream of alpha particles that cross a small air gap and are then absorbed by the other plate. Because alpha particles each contain two protons, which are positively charged particles, a tiny potential difference (and a tiny current flow) is created between the two metal plates. This current can be sensed by the smoke detector\u2019s circuitry. When smoke particles enter the chamber, they absorb the alpha particles and become ionized, breaking the circuit and triggering the alarm.            I bought my smoke detectors in second hand shops, both for fifty cents. You can find them sometimes with the hardware. Just make sure it says it contains a radioactive element. If you buy one this way, you will probably be keeping a radioactive substance out of a landfill.Another way to get a smoke detector is to buy one in a store, though they may be a bit pricey.", "step_imgs": ["https://cdn.instructables.com/FIO/BQOK/IMCFCTS9/FIOBQOKIMCFCTS9.LARGE.jpg"], "step_title": "Step 17: The Twofer: Americium and Neptunium"}, {"step": 18, "steps_text": "Unfortunately most things, including cast iron and wrought iron, are not iron but in fact steel, an alloy of iron and carbon. As far as I know, you will not come across pure iron anywhere. It is too soft for any practical use. Crude iron metal is produced in blast furnaces, where ore is reduced by coke to pig iron, which contains 3.5\u20134.5% carbon. Further refinement with oxygen reduces the carbon content to the correct proportion (between 0.002% and 2.1%) to make steel.My advice is to not lose any sleep over the purity of your iron sample, but just place a piece of mild (low-carbon) steel in your collection and be done with it. No one is going to look twice at your sample of iron anyway. As with any of the elements, you can always buy a purer sample online later. ", "step_imgs": ["https://cdn.instructables.com/FZU/EHJ8/IMNOGSR9/FZUEHJ8IMNOGSR9.LARGE.jpg"], "step_title": "Step 18: Include Some Iron"}, {"step": 19, "steps_text": "Above is a picture of a chromium plated robe hook.Although it would be cool to have a chunk of chromium metal, you will only find it as a thin plating on metal objects like:hood ornaments and other automobile parts    bathroom fixturesAlso, stainless steel contains chromium.", "step_imgs": ["https://cdn.instructables.com/FRO/9M9U/IN7QRFS3/FRO9M9UIN7QRFS3.LARGE.jpg"], "step_title": "Step 19: Chromium"}, {"step": 20, "steps_text": "In most electrical applications, copper is greater than 99% pure. This is because even slight impurities in the copper can drastically lower its conductivity. Copper is an easy metal to find a good sample of, especially because its distinctive peachy color makes it easily identifiable. The challenge, then, is to find a sample of copper that is interesting.For myself, I wanted a heavy sample so that people lifting it could get an idea of copper\u2019s mass. It also had to be compact enough to fit into my collection, and be interesting to look at. A magnetron, the vacuum tube that produces the microwaves that heat food in a microwave oven, provided me with just the sample I needed. Robbed from a dead microwave, I cut out the copper center portion with a hacksaw. The inside of the tube is evacuated, so the copper surfaces inside are untarnished by air and very peachy, at least for a while. Warning: Some magnetrons have beryllium oxide ceramic insulators, which are dangerous if crushed and inhaled, or otherwise ingested. Whatever you do, never break the ceramic insulators of the magnetron. Broken ceramic insulators or magnetrons should not be directly handled. Also, opening a microwave can be dangerous because they contain high voltage capacitors that can store a lethal charge for some time even after the microwave has been unplugged. To be safe I usually let my microwaves sit around for several months. To be extra safe you can:use tools with insulated handles to do the disassembly    Work using only one arm at a time.    Never touch the leads of the capacitor.A really awesome sample would be a piece of native, or naturally occurring copper. I saw some beautiful samples of native copper from the Upper Peninsula of Michigan in a Flea Market, but they wanted 15-20 USD for each of them.Pennies are easy to come by, but pre 1982 U.S. pennies are only 95% copper, the other 5% being zinc.", "step_imgs": ["https://cdn.instructables.com/FNM/V6JM/IMCFCTSV/FNMV6JMIMCFCTSV.LARGE.jpg", "https://cdn.instructables.com/FUS/N1OR/IMNOGT35/FUSN1ORIMNOGT35.LARGE.jpg", "https://cdn.instructables.com/FFC/ES90/IMNOGSUA/FFCES90IMNOGSUA.LARGE.jpg", "https://cdn.instructables.com/F8B/PS60/IMNOGSTU/F8BPS60IMNOGSTU.LARGE.jpg"], "step_title": "Step 20: Copper"}, {"step": 21, "steps_text": "A friend gave me this sample. He was working in an old house and came upon a thermostat with a mercury switch. Mercury like all metals conducts electricity, and will slide to one end or the other of the glass tube, connecting the electrical contacts to open or close different circuits. I have seen mercury thermometers for sale in antique/junk places, but samples like mine are cool. The mercury slides around freely inside its sealed ampoule, and it is really fun to play with. By far one of my coolest samples. Handle with care. The switch was part of a dial thermostat, and was fastened to the end of a coiled bimetallic strip. I had a picture of the inside of the thermostat, but the computer it was on died. I imagine that thermostats like this may not be available to buy new, but you could check your local hardware or home improvement store.If you have a sample of mercury, it wouldn\u2019t be a bad idea to educate yourself on how to clean up a spill if your sample ever gets broken.Mercury is known for being the only metal that is a liquid at room temperature. It is also known for being toxic. Mercury is sometimes called quicksilver, from the fact that it can glide very quickly across a surface. This is because mercury atoms like very much to stick to each other, but they don\u2019t like sticking to most other substances.", "step_imgs": ["https://cdn.instructables.com/F4O/KMKI/IMDOELG1/F4OKMKIIMDOELG1.LARGE.jpg"], "step_title": "Step 21: Mercury"}, {"step": 22, "steps_text": "The picture above shows the guts of a \u2018dead\u2019 3-volt lithium coin cell (the kind that say lithium on them). On the inside of the negative half of the cell is a little bit of lithium metal. I was able to open the cell with:Two pairs of pliers    A small flathead screwdriverFirst I held the cell in one pliers, negative side up. Then using the other pliers I grabbed the edge of the positive side, pulling the edge of it down and away. It was a bit difficult for the pliers to grab the edge, but I was able to wrench the coin cell open on one side this way. These batteries can be sealed pretty tight! Next, I was able to grab the edge of the positive half with one pliers and the edge of the negative half with the other, then wrench the two apart. Now that you have the cell open, you will encounter four things:A small piece of wire mesh.    A cake of black powder (manganese dioxide) moist with electrolyte.    A thin layer of cardboard.    A plastic ring that made the seal between the two halves of the cell.All of these stayed with the negative half of the battery I took apart. I removed them, by picking at them with the screwdriver, in the order they are listed above. When I peeled the cardboard layer off, some of the lithium, most of which had corroded into a white flaky substance, came off with it. I accidentally scarred some of the soft lithium metal that was still sticking to the inside of the metal cup with my screwdriver, exposing a fresh grey surface, and then watched in awe as the damaged area corroded before my eyes. It immediately started to turn brown, and after about fifteen seconds it had turned a dull, very dark grey color. Later that afternoon it was a bluish grey, and by the next day it had turned white. You will almost certainly find one of these 3V lithium coin cells if you open a computer; they are a popular choice for providing power to the CMOS (complimentary metal-oxide semiconductor), a battery-powered memorychip in your computer that stores startup information. Your computer's basic input/output system (BIOS) uses this information when starting your computer.Lithium(an alkali earth metal), is highly reactive and quickly corrode away if left out in the air for very long. With a density of only .534 gm/cm3, it is the least dense solid element, and rods of the metal are said to have a heft more similar to that of wooden dowels than any metal normally encountered. What about other samples of lithium?My dad found a lithium AA battery in a parking lot. I could cut it open to obtain about a gram of thin lithium foil. It wont last long, however, unless you store it under oil. You could use a hacksaw to open these batteries, but I think a small manual tubing cutter would be the best way. There are various how-tos on how to do it, search for them!You can buy lithium batteries in stores, they are usually about $5 for a pack of two. The most common ones are Energizer Ultimate Lithium, the \u201clongest lasting AA battery\u201c. They are not to be confused with the rechargeable types of lithium battery, like the lithium-ion or lithium-polymer.Mineral oil is the best oil to store samples under because it is very clear and is non-flammable. You can buy it in stores, I think in the health and beauty department.", "step_imgs": ["https://cdn.instructables.com/FID/WVOL/IMNOGSO3/FIDWVOLIMNOGSO3.LARGE.jpg", "https://cdn.instructables.com/F62/95F9/IMCFCTT5/F6295F9IMCFCTT5.LARGE.jpg", "https://cdn.instructables.com/F5Z/L4FN/IMNOGTC9/F5ZL4FNIMNOGTC9.LARGE.jpg", "https://cdn.instructables.com/FT7/5SBV/IMNOGSKF/FT75SBVIMNOGSKF.LARGE.jpg", "https://cdn.instructables.com/FNX/2Z04/IMCFCTTH/FNX2Z04IMCFCTTH.LARGE.jpg", "https://cdn.instructables.com/FC7/GHAE/IN7QRGAC/FC7GHAEIN7QRGAC.LARGE.jpg", "https://cdn.instructables.com/FKB/O3D7/IN7QRGFA/FKBO3D7IN7QRGFA.LARGE.jpg"], "step_title": "Step 22: Lithium"}, {"step": 23, "steps_text": "I don\u2019t have any bismuth yet, but I know where to look now:In the early 1990s, researchers began to evaluate bismuth as a nontoxic replacement for lead in various applications. The density difference between lead (density 11.32 g\u00b7cm-3) and bismuth (density 9.78 g\u00b7cm-3) is small enough that for many ballistics and weighting applications, bismuth can substitute for lead. For example, it can replace lead as a dense material in fishing sinkers.The next time you are in Wal-Mart, wander over to the aisle where they sell fishing gear. See if you can find bismuth fishing sinkers. If you don\u2019t see them, you can always try a different Wal-Mart (not all stores carry the same products) or a retailer that sells fishing and outdoor merchandise. I haven\u2019t found them yet, but I only recently started looking! Keep in mind that some are a bismuth-tin alloy.What about other samples of bismuth?The pink product pepto bismol contains bismuth, in the form of bismuth subsalicylate. You can extract the bismuth metal from Pepto bismol, and Theodore Grey has done it with the tablets. Here is the link. It may or may not be fiscally practical. If it costs you ten or twelve bucks to get enough tablets, you may be able to buy a big chunk of bismuth online for less. Bismuth has been used as a replacement for lead in shot and bullets. Bismuth-tin alloy shot is one alternative that provides similar ballistic performance to lead. Many bismuth alloys have low melting points and are found in specialty applications such as solders, as a replacement for traditional tin-lead solders, like in electronics.Many automatic sprinklers, electric fuses, and safety devices in fire detection and suppression systems contain the eutectic In19.1-Cd5.3-Pb22.6-Sn8.3-Bi44.7 alloy that melts at 117 \u00b0F (47 \u00b0C ) Fun with bismuth!High-purity bismuth can form distinctive, colorful hopper crystals. Run an image search for bismuth crystals and see for yourself! The variations in the thickness of the oxide layer that forms on the surface of the crystal causes different wavelengths of light to interfere upon reflection, thus displaying a rainbow of colors. Bismuth is relatively nontoxic and has a low melting point just above 520\u00b0F (271 \u00b0C) , so crystals may be grown using a household stove. Sometimes you will see these crystals in places where rocks and minerals are sold for collectors.", "step_imgs": ["https://cdn.instructables.com/FNG/V1I1/J34PM803/FNGV1I1J34PM803.LARGE.jpg"], "step_title": "Step 23: Bag Some Bismuth"}, {"step": 24, "steps_text": "Because of its flammability, magnesium is used to make magnesium fire starters, often called metal matches. They are basically chunks of magnesium with a Ferro cerium rod (lighter flint) embedded on one side for making sparks. To light a fire, you take a knife and shave some of the magnesium onto your tinder. Then, you use the back of your blade and the flint to shoot sparks at your tinder, igniting it. The burning magnesium flakes can reach 5,610 \u00b0F (3,100 \u00b0C), and can ignite even wet tinder. These fire starters are usually available in the camping area of Walmart and other stores that carry camping equipment, even some hardware stores. The ones I have seen cost between six and eight dollars. I haven\u2019t bought one because I have another sample, a magnesium plate (pictured) out of an old Nokia cell phone from 1998. The plate was inside the phone, visible if you removed the battery, and the main circuit board was fixed to it with small screws. This was the sample that captured my interest and was the first metal in my collection.            What about other samples of magnesium?Magnesium\u2019s low density of 1.738 gm/cm3 (aluminum is 2.7gm/cm3) makes it ideal when a high strength-to-weight ratio is required. This makes it suitable for numerous applications.Some car manufacturers, notably Volkswagen, experimented with magnesium or magnesium alloy engine blocks. Many car and aircraft manufacturers have made engine and body parts from magnesium.Because of low weight and good mechanical and electrical properties, magnesium is widely used for manufacturing of mobile phones, laptop and tablet computers, cameras, and other electronic components. It is usually used in the chassis of such devices, an example being laptops with magnesium roll cages.Magnesium is sometimes used in the Magnesium- aluminum alloys are sometimes used for baseball bats, often called \u2018mag\u2019 bats.The alloys are used for high-end wheel rims, known as \u2018mag\u2019 wheels.Dow Metal is a 80% magnesium alloy, used for various applications like piston arms in high end engines. I found some in a dump, and I think it was used for to hold the glass insulators atop a utility poll.Seawater contains about .13% magnesium.    Fun with magnesium!Light magnesium on fire and watch it burn.", "step_imgs": ["https://cdn.instructables.com/F34/3WSE/J34PM804/F343WSEJ34PM804.LARGE.jpg", "https://cdn.instructables.com/F83/3ACG/IMDOELE8/F833ACGIMDOELE8.LARGE.jpg", "https://cdn.instructables.com/FD9/394X/IMNOGWSX/FD9394XIMNOGWSX.LARGE.jpg", "https://cdn.instructables.com/F3H/2RWO/IMNOGSM6/F3H2RWOIMNOGSM6.LARGE.jpg"], "step_title": "Step 24: Magnesium"}, {"step": 25, "steps_text": "Bags of 90% sulfur can be bought in stores, sold in the gardening section. You may be able to purify it by adding it to water - sulfur is insoluble in water so it wont dissolve, but hopefully the other ingredients will. Sulfur is known for being smelly stuff, but in reality it is the compounds of sulfur (like hydrogen sulfide, the smell of rotten eggs) that are largely responsible for this. In fact, sulfur in its elemental form has only a faint odor, one which I don't find particularly offensive. It smells something akin to matches. This is great for us element collectors. Or if you ever find the need to rub the stuff on your skin, which is what the medical sulfur I have is for (it says to mix one part sulfur to seven parts petrolatum). I found this little jar of sulfur, actually 'flowers of sulfur'.The sulfur I found has an expiration date on the bottle, which appears to read 9/89. The cap has 50 cents written on it in permanent marker, so presumably someone bought it at a yard sale or the like. The sulfur is an ultra-fine powder, and in this form bears the pleasant name \"flowers of sulfur\". This comes from the fact that the fine grains where formed when sulfur vapor condensed, forming flowery shapes. I imagine this also means it is very pure.", "step_imgs": ["https://cdn.instructables.com/FL3/IKYL/IMNOGTF5/FL3IKYLIMNOGTF5.LARGE.jpg", "https://cdn.instructables.com/FQF/XPH9/IMNOGSTH/FQFXPH9IMNOGSTH.LARGE.jpg", "https://cdn.instructables.com/FZS/BECM/IMNOGSNY/FZSBECMIMNOGSNY.LARGE.jpg"], "step_title": "Step 25: Sulfur"}, {"step": 26, "steps_text": "I don\u2019t have any uranium yet, but:I do know that it was used, in oxide form, as an additive to glass. The most typical color of uranium glass is pale yellowish-green, which in the 1920s led to the nickname \u201cvaseline glass\u201d (based on a perceived resemblance to the appearance of petroleum jelly as formulated and commercially sold at that time). You will see it labeled as \u201cVaseline glass\u201d in flea markets and antique stores, and you can usually ask for it by that name. The amount of uranium in the glass varies from trace levels to about 2% by weight, although some 20th-century pieces were made with up to 25% uranium! This must have been before they knew much about radiation and it\u2018s effects. You can confirm the uranium content of the glass with a blacklight (ultraviolet light), as all uranium glass fluoresces bright green regardless of the color the glass appears under normal light (which can vary widely). You could take a blacklight flashlight with you to look for uranium glass.I wondered why they could afford to use uranium as a glass additive, and the answer is:The discovery and isolation of radium in uranium ore (pitchblende) by Marie Curie sparked the development of uranium mining to extract the radium, which was used to make glow-in-the-dark paints for clock and aircraft dials. This left a prodigious quantity of uranium as a waste product, since it takes three tons of uranium to extract one gram of radium. I have seen numerous pieces of uranium glass in antique shops and flea markets, and almost bought a very interesting piece. It was an art deco toothpick holder, and it looked soooo cooool.Uranium glass is only very slightly radioactive, and I don\u2019t think it\u2019s at all dangerous to handle.", "step_imgs": [], "step_title": "Step 26: Uranium"}, {"step": 27, "steps_text": "Aluminum (or aluminium, to English speaking folks outside the U.S.) is almost always found in alloy form, sometimes with as much as 15% other elements mixed in. These added elements greatly improve aluminum\u2019s mechanical properties. It is used as pure metal only when corrosion resistance, workability, and/or heat and electrical conductivity is more important than strength or hardness. This means that the following are usually relatively pure:decorative things like trim on old automobiles, medallions    heat sinks and wires    Aluminum foilHeat sinks can make good samples, and can come in all shapes and sizes and often interesting looking designs. They can be found in electronic devices, notably computers, audio/video receivers, and many others. They are usually used to cool the transistors inside, or the microprocessor in the case of computers. You just have to open stuff up and start looking. ", "step_imgs": ["https://cdn.instructables.com/FB9/GY2P/IMNOGTFE/FB9GY2PIMNOGTFE.LARGE.jpg", "https://cdn.instructables.com/F8N/1HGC/IMCFCTS8/F8N1HGCIMCFCTS8.LARGE.jpg"], "step_title": "Step 27: Aluminum"}, {"step": 28, "steps_text": "These little neon indicator lights glow a bright orange/red, and can be found ( usually with a 60-100 thousand ohm resistor in series) in devices like outlet testers, power strips, electric heating blankets and pads, waffle irons, temperature controlled pans, and old style coffee percolators, to name a few. They run directly off of 120 volts AC, though they might run off a lower voltage without the resistor. Since I don't want to have to plug in my element collection to light up my neon bulb, I am working on a DC to DC voltage booster so that I can run one off a battery.", "step_imgs": ["https://cdn.instructables.com/FMG/6X8X/IPPPCP4K/FMG6X8XIPPPCP4K.LARGE.jpg", "https://cdn.instructables.com/FLE/44K7/IPPPCP3S/FLE44K7IPPPCP3S.LARGE.jpg", "https://cdn.instructables.com/FPJ/2BEU/IPPPCP4A/FPJ2BEUIPPPCP4A.LARGE.jpg"], "step_title": "Step 28: Thar She Glows! Neon!"}, {"step": 29, "steps_text": "Named after Thor, the Norse god of thunder, Thorium metal is silvery and tarnishes black when exposed to air, forming the dioxide ThO2, also called thoria or thorina.For a sample of thorium we turn to magnetrons, as all magnetrons contain a small amount of thorium (mixed with tungsten) in their filament.according to user dominikK20: \"it actually contains tungsten bits with 2% thorium dioxide. You can add  some 30% H2O2 to them and let that sit for 2 weeks so that all the  tungsten dissolves, then you can get your ThO2 out and reduce it with  magnesium or whatever.\"Why thorium in a magnetron? To understand why, we must understand a little about how a magnetron works.Inside the magnetron, which is evacuated of air to form a vacuum, there are two electrodes. One is the thoriated tungsten center electrode, and the other one is the big cylindrical chunk of copper that has spokes radiating inward from the outside (my copper sample). When a high voltage is applied to both electrodes, the center electrode  becomes very hot and electrons start to \u201cboil\u201d off into the vacuum. Normally the center electrode would have to reach a very high temperature for the electrons to \u201cboil\u201d off like this, but the addition of thorium lowers this temperature. Simply put, the electrons are more willing to make the leap into the vacuum if they get to jump off of thorium atoms! The rest of the filament is tungsten, as tungsten's high melting point prevents it from melting in this instance.Once these electrons are moving freely in the vacuum, they are attracted to the relatively positive outer electrode. However, two big ring magnets located on the outside of the magnetron are generating a mangetic field inside the magnetron that runs parallel to the filament. This causes the electrons to spiral outward from the center electode in a circular path. Now let's consider the outer electrode for a second. See the copper spokes that jut in toward the center? Between them are cavities, and as the electrons spiral outward they brush past the openings of these cavities. Similar to when you blow across the top of a bottle and create a whistling noise, the electrons in the cavities begin to resonate, which causes the electrons to bunch into groups and form waves. These are picked up by an antenna wire attached to the outer electrode and directed through the top of the magnetron tube and into the cooking chamber of your microwave. Thorium-232 is the most stable isotope of thorium (half-life of 14.05 billion years) and accounts for nearly all natural thorium, with the other five natural isotopes occurring only as trace radioisotopes. Thorium-232 decays very slowly through alpha decay to radium-228, starting a decay chain named the thorium series that ends at lead-208. Because thorium decays slowly and only emits alpha particles, it is only weakly radioactive. This makes owning it and even handling small amounts quite safe. The risk of cancer is low, as it never gets airborne in normal usage. Only if the filament is taken out of the magnetron, finely crushed, and inhaled can it pose a health hazard.Other sources of thorium: Thorium is still widely used as an alloying element in TIG welding electrodes (at a rate of 1%\u20132% mix with tungsten)Thorium oxide used to be used in mantles for gas lamps.One question I'd like to know...ARE THE WIRES LEADING INTO THE MAGNETRON MADE OF TUNGSTEN? They are really hard to cut with a wire cutters!", "step_imgs": ["https://cdn.instructables.com/FRO/OIIV/IQLI5QE1/FROOIIVIQLI5QE1.LARGE.jpg", "https://cdn.instructables.com/F24/NOOD/IQLI5QG0/F24NOODIQLI5QG0.LARGE.jpg"], "step_title": "Step 29: Thorium Anyone?"}, {"step": 30, "steps_text": "Neodymium magnets contain, as the name would suggest, neodymium. One common source of large ones? Computer hard disk drives. Like any computer technology, advancements in the field (they keep getting faster, more spacious, and more reliable) have left many drives obsolete, making them perfect candidates for scavenging. Most computer hard drives cannot be opened with normal screwdrivers, however. Most are held together with screws that have a five-point star-shaped recess in the head, and require a star bit screwdriver (I have heard them called torx or pentalobe screwdrivers as well).  The magnets themselves are coated in nickel, as the iron and neodymium in the magnet are both susceptible to corrosion. The best way to remove the coating it is to break the magnet with a few light taps of a hammer, as this will usually present edges of the nickel plating that you can grab onto, allowing you to peel it off. Caution while handling! Pinching hazard!", "step_imgs": ["https://cdn.instructables.com/FRI/KFPZ/J34PM7ZW/FRIKFPZJ34PM7ZW.LARGE.jpg", "https://cdn.instructables.com/FLP/S1CV/J34PM800/FLPS1CVJ34PM800.LARGE.jpg", "https://cdn.instructables.com/FNX/1K4G/J34PM80A/FNX1K4GJ34PM80A.LARGE.jpg", "https://cdn.instructables.com/FY4/1G0C/J34PM807/FY41G0CJ34PM807.LARGE.jpg"], "step_title": "Step 30: Neodymium Magnets"}, {"step": 31, "steps_text": "Germanium diodes, though in modern electronics have mostly been replaced by the silicon variety, can still be found in older TVs and radios. Instead of containing a sandwich-like junction like silicon diodes, they have a small chunk of germanium that is contacted by a small wire called a 'cat's whisker'. You can see this setup inside the diode through its glass tube.", "step_imgs": ["https://cdn.instructables.com/FMM/0EAR/J34PM7ZT/FMM0EARJ34PM7ZT.LARGE.jpg", "https://cdn.instructables.com/F7T/L3DY/J34PM7ZU/F7TL3DYJ34PM7ZU.LARGE.jpg"], "step_title": "Step 31: Germanium Diodes"}, {"step": 32, "steps_text": "Most modern cameras use flashtubes filled with xenon. Inside the camera is a battery that charges a high-voltage capacitor. When the shutter button is pressed, this capacitor dumps a large amount of current (for a very short time) into the flashtube. The surge of electricity heats the xenon gas into a plasma.  If you open a camera to extract the flashtube, you will have to avoid being shocked by the high-voltage capacitor. One way to do this is to discharge the capacitor once you have the camera open. I like to place the blade of a screwdriver across the two leads of the capacitor (while holding onto the plastic or wooden handle, of course). Another probably safer way is to hold the body of a resistor in the jaws of a pliers and then bridge the two leads of the capacitor with the resistor. Use caution! Always insulate yourself.", "step_imgs": ["https://cdn.instructables.com/FAK/8TWY/J34PM80G/FAK8TWYJ34PM80G.LARGE.jpg"], "step_title": "Step 32: Xenon Flashtubes"}, {"step": 33, "steps_text": "Here are a few ideas that I need to research:niobium is used in jewelry, the kind used in body piercings.hydrogen, obtainable through the electrolysis of water.phosphorous, matchbox sides.argon, light bulb.", "step_imgs": [], "step_title": "Step 33: In the Works..."}, {"step": 34, "steps_text": "How you display your collection will largely depend on the size of your samples. I currently house mine in two bead-organizing trays from Hobby Lobby, bought for $2 apiece. Plastic organizer boxes, like the ones sold to organize fishing hooks, lures, sinkers, and other fishing doodads might work too. Many collectors build a sort of shadow box shaped like the periodic table, with a little alcove for each of the element samples to sit in. This gives the satisfaction of placing each element collected into its proper place in the table. Some elements, like the man made ones that have half lives of only a few seconds, can be represented by a picture of the person they are named after, like Albert Einstein for Einsteinium. Other examples of element displays include:Theodore Gray built an actual wooden table shaped like the periodic table, upon which he places samples.Member Kutluhan keeps his in hollowed out pill capsules.If you made it this far, thank you for reading! As you can imagine, I worked hard on this instructable! Here\u2019s how I got started collecting:I first started collecting elements in early 2007, at the age of 14. I was taking apart a cellular phone from 1998, a big black Nokia. Inside I found a piece of magnesium, a metal unlike any I had seen before. It was lightweight, even lighter than aluminum! I looked up magnesium in the encyclopedia and learned that it is highly flammable. Yes, that\u2019s right. Metals can burn, which is something I hadn\u2019t fully realized. Magnesium powder or ribbon is much easier to ignite than a big solid chunk, but once you get it going it burns with an intense white flame that can exceed 5000\u00b0F (3000\u00b0C), as witnessed by a friend of mine that once lived in the southwestern United States. \u201cVolkswagen used to make engines out of magnesium,\u201d he said when I showed him my sample. \u201cWe were out in the desert one night, and some people pulled the engine out of an old Volkswagen and threw it on the fire. It lit up the whole canyon.\u201d Whoa. The elements, as it turns out, are more diverse and interesting than I had originally thought. I began to wonder what other metals I might find by taking things apart. Here are a few that I have found.Taking things apart:Computers:   Aluminum (heat sink, like the one that cools the processor)Gold (circuit board with gold substrate, like RAM cards)Lithium (3V coin cell that powers the CMOS)Microwaves:Barium (getter spot in vacuum fluorescent display, if present)Copper (core section of cavity magnetron)Silicon (large rectifier diode)Coffee Makers, Hair Dryers, Hot Plates, Etc.:Silver (thermal cut off w/ silver plated case and lead wires)Ionization Smoke Detector: Americium and Neptunium (small radioactivebutton inside ionization chamber)I am still working on this instructable! Hulkbuild out.", "step_imgs": ["https://cdn.instructables.com/FLH/7GK7/IN7QRT0J/FLH7GK7IN7QRT0J.LARGE.jpg", "https://cdn.instructables.com/FEK/GJ81/IN7QRT30/FEKGJ81IN7QRT30.LARGE.jpg"], "step_title": "Step 34: Elements, Assemble!"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "This is a simple rain gauge made from a plastic bottle. My father tought me how to do it. We always use it for deciding if and when we should water our fruit trees. (keep in mind that on a hot summer day 4 or 5 mm of water a day evaporated from the ground, so if it rained 50 mm, you don't need to water your trees for about 10/12 days).", "title": "\u267b PLASTIC BOTTLE RAIN GAUGE \u267b", "url": "https://www.instructables.com/id/PLASTIC-BOTTLE-RAIN-GAUGE/", "section": "home", "steps": [{"step": 1, "steps_text": "MATERIALS:\n_plastic bottle (conic or funnel shaped);\n_strong tape;\n_stick or cane.\nTOOLS:\n_cutter;\n_permanent marker;\n_scales or capacity measure for liquids;\n_ruler.", "step_imgs": ["https://cdn.instructables.com/F2J/7HD8/H9X3IVXH/F2J7HD8H9X3IVXH.LARGE.jpg"], "step_title": "Step 1: WHAT YOU NEED"}, {"step": 2, "steps_text": "remove labels\u00a0 with warm water, and cut away the bottom of the bottle with cutter.", "step_imgs": ["https://cdn.instructables.com/F1N/EFTE/H9T4QR69/F1NEFTEH9T4QR69.LARGE.jpg"], "step_title": "Step 2: PREPARE BOTTLE"}, {"step": 3, "steps_text": "_measure the open AREA of the bottle opening:\u00a0 r \u2022 r \u2022 3.14 (measure the diameter, divided it in 2 and find the radius, then\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0 do\u00a0 radius by radius by 3.14);\n_now, knowing that if it rain 1l of water on 1 square meter it will correspond at 1 mm of water, we need to find out how many ml in your bottle that mm of rain fall on the ground will correspond\u00a0 (x).\u00a0 We need to use this formula:\n\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0 1m2 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 bottle open area \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1liter\u00a0\u00a0 \u2022\u00a0 bottle open area\n\u00a0 \u00a0\u00a0 --------\u00a0\u00a0 =\u00a0\u00a0\u00a0 ---------------------\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 so:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x= ----------------------------------\n\u00a0\u00a0\u00a0\u00a0 1 liter\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1m2\nthis is an example using the measurement of my bottle, my bottle diameter was 8.6 cm ( than 4.3 cm of radius)\n4.3cm\u20224.3cm\u20223.14=58cm2\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\u00a0 ( 58cm2=0.0058m2)\n\u00a0\u00a0\u00a0\u00a0\u00a0 1m2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0.0058m2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1 liter \u2022 0.0058 m2\n\u00a0\u00a0\u00a0\u00a0 ---------\u00a0 = ------------------\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 so:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x= ---------------------------\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 so:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x=5.8 ml\n\u00a0\u00a0\u00a0\u00a0\u00a0 1 liter\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1m2\nanother way to find your x\u00a0 is: calculate the volume of 1 mm of water on the area of open surface of your water bottle, and use that number to make the measurements on your bottle:\nr\u2022r\u20223.14\u20220.1cm2=x\u00a0\u00a0\u00a0 (than transform it: 1cm2=1ml)", "step_imgs": ["https://cdn.instructables.com/F0Z/IGBZ/H9T40YTE/F0ZIGBZH9T40YTE.LARGE.jpg", "https://cdn.instructables.com/F59/ZVR6/H9X3IVYN/F59ZVR6H9X3IVYN.LARGE.jpg"], "step_title": "Step 3: MAKE MESUREMENT"}, {"step": 4, "steps_text": "now you have found x. \u00a0 \u00a0\n_x is the corresponding measure on your bottle of 1 mm of rain fallen on the ground, so we need to use it to mark the measurement on the bottle.\n_because the number you will find is so small I will multiplied it by 5 times (so it will correspond to 5 mm of rain fallen on the ground).\n_pour in the bottle the milliliters of water you just measured (5x) and mark it with permanent marker (write 5 mm). you can use a capacity measure for liquids or a scales (1l of water weigh one kilo).\n_keep adding milliliters and marking until you mark the whole bottle.\nexample of my bottle:\n_my x were 5.8 ml\u00a0\u00a0\n_5.8 ml\u20225= 29 ml (corresponding at 5 mm of rain fallen on the ground)\n_I signed the 5, 10, 15, 20,30,40,50,70,100 and 150 mm of rain on my bottle.\n\u00a0", "step_imgs": ["https://cdn.instructables.com/FR0/HXPJ/H9X3IW1W/FR0HXPJH9X3IW1W.LARGE.jpg", "https://cdn.instructables.com/FQY/LYOS/H9T44SOY/FQYLYOSH9T44SOY.LARGE.jpg", "https://cdn.instructables.com/FGA/IDSV/H9T4FC5I/FGAIDSVH9T4FC5I.LARGE.jpg"], "step_title": "Step 4: MARK NOTCH ON BOTTLE"}, {"step": 5, "steps_text": "place the stick on the bottle (like in the photo) and stick it with tape.", "step_imgs": ["https://cdn.instructables.com/FXV/6GIK/H9X3IWLR/FXV6GIKH9X3IWLR.LARGE.jpg"], "step_title": "Step 5: MAKE THE PEDESTAL"}, {"step": 6, "steps_text": "you 're done! place the pluviometer (rain gauge) in your garden (stick the cane in the dirt), far from trees or roofs.\nempty after every rain: you just need to unscrew the cap of the bottle.", "step_imgs": ["https://cdn.instructables.com/FYV/EYRC/H9T4LPEH/FYVEYRCH9T4LPEH.LARGE.jpg", "https://cdn.instructables.com/FL1/UT5L/H9T4QS31/FL1UT5LH9T4QS31.LARGE.jpg"], "step_title": "Step 6: DONE"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "These are various small hacks that I've come up with over the years, they might be handy for other people: if not directly, then they may give others an idea for something similar.", "title": "Small Hacks That Might Be Useful #1", "url": "https://www.instructables.com/id/Small-Hacks-That-Might-Be-Useful-1/", "section": "home", "steps": [{"step": 1, "steps_text": "Sausages cook quicker and more evenly if you cut them in half lengthways before frying or grilling. Bonus: they don\u2019t roll all over the pan so that some bits get overcooked while other bits are still underdone.  There\u2019s really only two sides to be cooked on a cut sausage!", "step_imgs": [], "step_title": "Step 1: Cook Sausages Quicker "}, {"step": 2, "steps_text": "It can be a pain to have to find oven temperature tables to convert from degrees C to gas mark. [] Download a conversion table or make your own, using a larger font size than usual so that you can read it from a small distance. [] - Print it on thin card \u2013 lasts longer than paper. [] Stick it to a convenient wall, or wall- cupboard door, inside or outside.  If on the inside, it will only be visible when you need it, just by opening the cupboard door Extra: Can be done with metric/imperial/cup measurement conversions too.", "step_imgs": ["https://cdn.instructables.com/FBB/S7K1/JJ8UE33S/FBBS7K1JJ8UE33S.LARGE.jpg"], "step_title": "Step 2: Handy Oven Temperature Guide"}, {"step": 3, "steps_text": "I NEVER put kitchen knives in with ordinary cutlery, whether clean or dirty \u2013 I once had a collision with a bread-knife that a chum had helpfully put into the washing-up water while my back was turned: my hand found it blade first.  This is not something you want to do twice!  Or even once if you can help it. I have a small bar magnet on the door of the wall cupboard closest to the sink, and all kitchen knives go there to be washed, and after they've been washed: dirty ones go blade-down, and clean ones go blade-up, as they hang on the normal knife rack. Kitchen  scissors in need of washing or just washed go there, too \u2013 so everything with a sharp edge or point is kept securely out of the way.", "step_imgs": ["https://cdn.instructables.com/F6T/U2EL/JJ8UE357/F6TU2ELJJ8UE357.LARGE.jpg"], "step_title": "Step 3: Knife-rack Near the Kitchen Sink"}, {"step": 4, "steps_text": "I always had a problem storing my food bags; partly in the actual storage (close to hand but out of the way), and partly in knowing which bag was what (all the boxes look alike) \u2013 I\u2019d have to pull out two or three to find the one I was looking for. Need: [] Drawing pins- thumb tacks \u2013 2 per bag. (I originally tried using double-sided sticky pads, but, as the photo shows, some of them didn\u2019t want to know.) I put each type of bag into a bag of that same type; a large Ziploc bag will only have large Ziploc bags in it; the one-use sandwich bag will only have its own kind in it. This way, I can see at a glance what\u2019s where. I offset them slightly to make it a bit easier to get bags out and to put others back in, but not so much as to make the bottoms sag.", "step_imgs": ["https://cdn.instructables.com/FHO/BK75/JJ8UE36V/FHOBK75JJ8UE36V.LARGE.jpg"], "step_title": "Step 4: Food Bag Door Storage "}, {"step": 5, "steps_text": "I\u2019ve got one of those metal mesh trays that cooks oven chips (and a lot more besides) on both sides at once, which saves having to turn them halfway through cooking. Getting the tray into the oven is easy enough; the metal is cold and therefore fairly rigid and you can  use bare hands.  But getting it out again!  When it\u2019s hot and a lot bendier,  and you have to wear oven gloves so you can\u2019t really get a good grip on it \u2026  Need: [] wire coat hanger [] wire cutters How: Cut the coat hanger into sections Thread the sections through the tray along the short sides in an over-and-under weaving pattern (I didn\u2019t rigidly count how many meshes I went over or under each time; it was enough that the wire went over and under several times) Now the tray will be rigid \u2013 across its width, at least.  It still bends in the middle, and I might put another couple of wire sections in to make it fully rigid.   But at least I drop a lot less food on the floor now", "step_imgs": ["https://cdn.instructables.com/FQP/XHZ7/JJ8UE38A/FQPXHZ7JJ8UE38A.LARGE.jpg"], "step_title": "Step 5: Oven Chip Tray Stiffeners "}, {"step": 6, "steps_text": "Whether frying or cooking or baking, break an egg into a cup first. Three reasons: [] I once saw someone break an egg on the edge of a frying pan.  They hit the edge of the pan rather firmly \u2013 and the whole pan tilted.  It didn\u2019t actually topple over or spill hot oil, but it might have done. [] If an egg is off, it\u2019s better to find out *before* you\u2019ve added it to other ingredients!  (And yes, I\u2019ve seen this happen, too. The whole batch had to be thrown away.) [] You can fish out any shell fragments that might have fallen in with it.", "step_imgs": [], "step_title": "Step 6: Break an Egg Into a Cup Before Using "}, {"step": 7, "steps_text": "Keep a pint of milk in the freezer as a backup in case you unexpectedly run out and it\u2019s late at night and the shops are shut, or it\u2019s absolutely chucking it down outside  You\u2019ve got a reserve to last you till the shops open or the rain eases off. (I did try powdered milk for dire emergencies, but after trying it a few times I found that I\u2019d rather go up the shop in a blizzard than use it!) Always leave an air-gap for the frozen liquid to expand. If it\u2019s late at night and you won\u2019t need milk till first thing in the morning, it can thaw gradually in the fridge overnight.   If you need it sooner, it can be thawed in a microwave: but make sure your container will fit!  I once froze a 2-pint bottle and then found it wouldn\u2019t fit; I had to leave it out to thaw naturally and go to the shop to get some to use now. (I did try freezing milk in ice-cube bags; the idea was that I could tear off one cube and drop it into my tea.  It melted fast enough, but maybe too fast, as it tainted the flavour.) Change the milk every now and then; thaw out the old and freeze a fresh supply in its place, so that the milk isn\u2019t kept for too long.  I don\u2019t know how long \u201ctoo long\u201d is, but I don\u2019t want to find out the hard way. And, when you use the reserve, remember that you need to replace it! I\u2019ve done that, too; forgotten that I\u2019d used it and found none when I ran out of fridge milk, so I had to trudge up to the shop despite it being half a gale outside.", "step_imgs": [], "step_title": "Step 7: Keep a Pint of Milk in the Freezer"}, {"step": 8, "steps_text": "Keep a small airtight container of teabags in the fridge, again for backup purposes. The times I\u2019d emptied my tea caddy and gone to the cupboard and not found a new box! Now I keep a dozen or so teabags in a small airtight food container \u2013 enough to keep me going overnight till the shops open or the rain eases. As with frozen milk, change the backup every now and then so they don\u2019t get stale. I don\u2019t know if this would work with coffee, as it has a much stronger aroma than tea.", "step_imgs": [], "step_title": "Step 8: Keep Some Teabags in Fridge"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "The first couple times you brew your own beer or wine, you're more concerned about the end product - delicious, delicious alcohol. The exact amount is only a secondary concern.As you start getting more and more into the hobby, knowing the percent alcohol can be useful. Both for knowing what to expect in your final product, but also for monitoring progress in the fermentation process.In this Instructable, I will go over how to use a hydrometer to take density measurements of your brew, and how to transform these density measurements into a more familiar percent alcohol.You will need:A Hydrometer  Sterilizing Equipment  Something to Measure  Pipette or Baster to Take a Sample", "title": "Measuring Alcohol Content With a Hydrometer", "url": "https://www.instructables.com/id/Measuring-Alcohol-Content-With-a-Hydrometer/", "section": "food", "steps": [{"step": 1, "steps_text": "A hydrometer is a tool used for measuring density. Hydrometers used for brewing will tell you the specific gravity of a liquid - a ratio of the liquid's density to that of water. Something with a SG of less than 1 is less dense than water (and will float), and something with a SG of above 1 is more dense and will sink.The hydrometer is essentially a specially weighted bob - you place it in a liquid, and it will sink to a certain depth, which depends on the density of the liquid. My seeing how far it sinks, you can determine the liquid's density.Since alcohol has a different density than the sugar/water mixture you started with, you can calculate the percent alcohol by measuring the initial SG and the final SG.", "step_imgs": ["https://cdn.instructables.com/FFJ/F5Q9/IP8K2Z8S/FFJF5Q9IP8K2Z8S.LARGE.jpg"], "step_title": "Step 1: Your Hydrometer"}, {"step": 2, "steps_text": "As with any homebrewing project, sanitation is critical. There's nothing worse than an infected brew.Before beginning, mix up some sanitizer. I personally use Easy Clean, and mix up a one gallon batch following the instructions on the back (one tbsp per gallon warm water). Easy Clean is a no-rinse sanitizer, meaning that it isn't necessary to rinse your equipment after cleaning them (which could potentially reintroduce bacteria).Sanitize all the equipment you'll be using - the hydrometer, the hydrometer tube, and whatever you'll be drawing your sample with. And of course, thoroughly wash your hands before continuing.", "step_imgs": ["https://cdn.instructables.com/FNQ/RNZM/IP8K2Z2N/FNQRNZMIP8K2Z2N.LARGE.jpg"], "step_title": "Step 2: Sanitizing"}, {"step": 3, "steps_text": "First, place the freshly sanitized hydrometer in its tube. Using your sampler, draw off a small sample of your brew from the middle.Begin filling the hydrometer tube until the hydrometer begins to float freely, and then stop filling. If your equipment was properly sanitized, it is safe to return the excess liquid.Place the hydrometer on a flat, level surface, and gently spin the hydrometer back and forth to release any bubbles that may have formed on its surface. Ensure the hydrometer is floating freely, and is not touching the sides of the hydrometer tube.From eye-level, read the hydrometer's measurment from the bottom of the meniscus. The meniscus is the curved surface caused by surface tension - and can make a significant difference in your results if you are not consistent.Note down your reading, and the date the measurement was taken.From here, you can return the sample to the larger brew, assuming all the equipment was properly handled and sanitized.", "step_imgs": ["https://cdn.instructables.com/FXC/GI01/IP8K2Z39/FXCGI01IP8K2Z39.LARGE.jpg", "https://cdn.instructables.com/FRB/GTAH/IP8K2Z5H/FRBGTAHIP8K2Z5H.LARGE.jpg"], "step_title": "Step 3: Measuring"}, {"step": 4, "steps_text": "Now, it's time to turn the specific gravity readings into a useful number.For an approximate estimation, the magic number is 131.25. Your percent alcohol can be given by the formula:ABV(%) = (Initial Gravity - Final Gravity) * 131.25.So if your initial gravity was 1.108, and your final gravity was 1.041, your beer is approximately 8.79% alcohol by volume.Once again, this is only an approximation, and loses accuracy as the alcohol content goes up. For a more precise number, or if you're brewing something particularly strong, there exist a number of online calculators that can do the heavy lifting for you.Thanks for reading, brew and enjoy responsibly!", "step_imgs": [], "step_title": "Step 4: Calculation"}], "channel": "No channel to show"}, {"category": "No category to show", "description": "Looking for a highly impractical desert that's both delicious and  educational? Look no further! This instructable details how to create a periodic table out of frosted sugar cookies, complete with a background mat to serve them off of and to help keep them in order.  ", "title": "Cookie Periodic Table Aka. &quot;The Periodic Table of Aliments&quot;", "url": "https://www.instructables.com/id/Cookie-Periodic-Table-aka-quotThe-Periodic-Tabl/", "section": "food", "steps": [{"step": 1, "steps_text": "Though it's possible to create the background at any time because it's separate from the actual baking, do this first so you get a feel for what you're getting into and just what it's like to make 110 tiles of anything. Also, making the mat first will help you check the size of the overall outcome before you get too far into the process.To start, first lay out the 50\" x 25\" butcher paper sheet that will serve as the background. Use a ruler and pencil to lightly mark a 2.5\" grid across the whole sheet. You're going to erase the guide lines later, so don't use a pen or draw too darkly. Sanity check to be sure you haven't mis-measured and that the grid is at least 18 squares across to be sure that your table will fit.Once the grid is ready, using a pencil lightly outline the shape of the periodic table and each of the groups to make sure it will be correctly positioned. Once you've verified the layout, color in the groups with different colors of marker and outline the table grid with heavy black lines. After the final colors are in place, erase the pencil lines to create a finished look.Select a separate color of paper for each periodic table group and and cut it into 2\"x2\" squares. The square will sit on top of the marker color so pick something that contrasts a little.  Letter and number the paper squares to match the elements on the table, and after each tile is lettered glue it in position. The nice thing about doing the lettering on separate tiles is that if you mess up the lettering alignment you can do it over easily.Once the colors and tiles are all complete, coat the whole table in contact paper to create a surface that will stand up to buttery cookies without getting stained with grease and chocolate. At first I wasn't sure that contact paper would be robust enough, but upon actually completing the project I found that contact paper (I bought paper labeled as \"book covering\" at an office supply store) is perfect. After it's been covered the whole table can stand up not only to holding cookies, but to being washed vigourously with a sponge with no ill effects. The one catch is that contact paper strong and water resistant, but it isn't particularly sticky, meaning that it will tend to peel off at the edges. This is great when you're trying to align big sheets of contact paper over the table without getting wrinkles in it, but a real problem when you're trying to wash it. To deal with this, once the contact paper was in place square up the edges of the table and coat the edge with scotch tape folded onto both sides of the table. This creates a nice edge and prevents the contact paper from coming unstuck.", "step_imgs": ["https://cdn.instructables.com/FDQ/Z23D/FMEGGYTI/FDQZ23DFMEGGYTI.LARGE.jpg", "https://cdn.instructables.com/FPN/UWD3/FMEGGYTM/FPNUWD3FMEGGYTM.LARGE.jpg", "https://cdn.instructables.com/F62/USAR/FMEGGYTF/F62USARFMEGGYTF.LARGE.jpg", "https://cdn.instructables.com/FGP/UMEK/FMEGGYTD/FGPUMEKFMEGGYTD.LARGE.jpg", "https://cdn.instructables.com/FX6/U6JA/FMEGGYTE/FX6U6JAFMEGGYTE.LARGE.jpg", "https://cdn.instructables.com/FSD/HNH1/FMEGGYTC/FSDHNH1FMEGGYTC.LARGE.jpg", "https://cdn.instructables.com/F6B/BHYD/FMEGGYTN/F6BBHYDFMEGGYTN.LARGE.jpg", "https://cdn.instructables.com/F1P/MHM3/FMEGGYT8/F1PMHM3FMEGGYT8.LARGE.jpg", "https://cdn.instructables.com/FR3/3D2N/FMEGGYTK/FR33D2NFMEGGYTK.LARGE.jpg", "https://cdn.instructables.com/FBP/49CN/FMEGGYTB/FBP49CNFMEGGYTB.LARGE.jpg", "https://cdn.instructables.com/FWE/4CMA/FMEGGYT9/FWE4CMAFMEGGYT9.LARGE.jpg", "https://cdn.instructables.com/FYD/C3CM/FMEGGYTL/FYDC3CMFMEGGYTL.LARGE.jpg", "https://cdn.instructables.com/FJ7/NTTM/FMEGGYTH/FJ7NTTMFMEGGYTH.LARGE.jpg", "https://cdn.instructables.com/FBS/NROY/FMEGGYTG/FBSNROYFMEGGYTG.LARGE.jpg", "https://cdn.instructables.com/F52/NX0U/FMEGGYTJ/F52NX0UFMEGGYTJ.LARGE.jpg"], "step_title": "Step 1: Make Cookie Presentation Background"}, {"step": 2, "steps_text": "\n          This project requires 110 cookies but the quantities will vary a little depending on how precise you are with the cookie rolling and cutting stage and how many mistakes you make. The following is the recipe for ONE batch. I made 7x the recipe and had some extra. When making the dough, mix it in double batches; if you more than double the recipe it will be hard to evenly distribute everything. Sugar Cookie Recipe:   1 cup butter   1.5 cups confectioners sugar   1 eggs   2.5 cups flour   1 tsp baking powder   1 tsp cream of tartar   1 tsp vanilla extract   1 tsp almond extract   Pinch of saltCream salt, powdered sugar, butter, vanilla, and almond togetherAdd egg and mixSift in baking soda, cream de tartar, and flour, mixOnce the dough is made it will need to be chilled for 4-5 hours (or preferably over night) before it's ready to be worked with. This both provides time for the egg to be absorbed into the flour and for the dough to get nice and cold so it won't stick to everything.   ", "step_imgs": ["https://cdn.instructables.com/F9Q/S470/FMEGGYVB/F9QS470FMEGGYVB.LARGE.jpg", "https://cdn.instructables.com/FD1/XKI0/FMEGGYVC/FD1XKI0FMEGGYVC.LARGE.jpg", "https://cdn.instructables.com/FI1/KZTO/FMEGGYVG/FI1KZTOFMEGGYVG.LARGE.jpg", "https://cdn.instructables.com/FJP/NZ23/FMEGGYVA/FJPNZ23FMEGGYVA.LARGE.jpg", "https://cdn.instructables.com/F42/MSIZ/FMEGGYV9/F42MSIZFMEGGYV9.LARGE.jpg", "https://cdn.instructables.com/FHA/5MHI/FMEGGYV8/FHA5MHIFMEGGYV8.LARGE.jpg", "https://cdn.instructables.com/FZO/L1U7/FMEGGYV7/FZOL1U7FMEGGYV7.LARGE.jpg", "https://cdn.instructables.com/F2Z/S2Q2/FMEGGYV6/F2ZS2Q2FMEGGYV6.LARGE.jpg", "https://cdn.instructables.com/FOS/ER1R/FMEGGYV5/FOSER1RFMEGGYV5.LARGE.jpg", "https://cdn.instructables.com/FDK/TVU4/FMEGGYVF/FDKTVU4FMEGGYVF.LARGE.jpg", "https://cdn.instructables.com/FI6/ED33/FMEGGYVE/FI6ED33FMEGGYVE.LARGE.jpg", "https://cdn.instructables.com/FFV/OF82/FMEGGYVD/FFVOF82FMEGGYVD.LARGE.jpg"], "step_title": "Step 2: Mix the Dough, Store and Chill"}, {"step": 3, "steps_text": "When you remove the dough from the refrigerator it will no longer be sticky, but it will have the opposite problem: it will be too hard. For rolling you want the dough pliant and soft, but not sticky. When it's too cold it will crack and crumble when you try to squish it, so the first thing to do is to \"wake\" the dough by working it like clay.Using a metal spoon dig chunks out of the storage container and work them in your palms a bit until they warm up enough to feel like clay. Take clay-like chunk and work it into a pancake shape. Make several handful-sized balls into pancakes and stack them, then squish the whole stack together by pushing down on it. This process is both warming the dough and making it homogeneous, attempting to work out any air bubbles between chunks.Pull combined dough into a sphere, compressing it into the center as you work with it. Once you have a nice ball, begin flattening it with your hands. Alternate squishing downwards and pinching the edges in to prevent cracks at the circumference. Flip the dough and add more flour to the work surface as often as you need to to prevent sticking. Gradually work the dough into a rectangle shape by pushing and pulling it as you squish. Flattening with your hands this way instead of using a roller provides more control over the shape the dough forms.Once the hand-flattened rectangle is about .75 inches thick,  move it onto baking parchment and get your rolling pin. Flatten to a height of .5 inches with the roller, attempting to maintain the rectangular shape as much as possible as you do so. Once baked the dough will be cut into 2\" tiles, so the final unbaked dough rectangle should measure an odd number of inches to allow .5\" of clearance around the edges during the cutting process. Measure and cut off the excess dough to make an odd-number-of-inches by odd-number-of-inches rectangle and throw the scraps back into the dough pool. Use the parchment paper to pull the dough gently onto a lip-less cookie sheet without deforming it. Because the dough is being baked in big sheets, the parchment paper is vital for being able to get it on an off the cookie sheet without cracking or bending the product. ", "step_imgs": ["https://cdn.instructables.com/FQK/2RSJ/FMEGGYZ7/FQK2RSJFMEGGYZ7.LARGE.jpg", "https://cdn.instructables.com/F6Y/SW95/FMEGGYZ9/F6YSW95FMEGGYZ9.LARGE.jpg", "https://cdn.instructables.com/FK8/OVVE/FMEGGYZ4/FK8OVVEFMEGGYZ4.LARGE.jpg", "https://cdn.instructables.com/F1D/KQNJ/FMEGGYZ3/F1DKQNJFMEGGYZ3.LARGE.jpg", "https://cdn.instructables.com/FE9/UCWM/FMEGGYZA/FE9UCWMFMEGGYZA.LARGE.jpg", "https://cdn.instructables.com/FOU/WD0E/FMEGGYZ2/FOUWD0EFMEGGYZ2.LARGE.jpg", "https://cdn.instructables.com/F59/4F8Y/FMEGGYZ8/F594F8YFMEGGYZ8.LARGE.jpg", "https://cdn.instructables.com/FGD/7A43/FMEGGYZ5/FGD7A43FMEGGYZ5.LARGE.jpg", "https://cdn.instructables.com/FQP/LQQO/FMEGGYZ6/FQPLQQOFMEGGYZ6.LARGE.jpg"], "step_title": "Step 3: Roll the Dough Flat"}, {"step": 4, "steps_text": "Once the dough is on the cookie sheet, it's ready to bake. Preheat oven to 375 and bake for 5 minutes then turn 180 degrees and bake another 5 minutes. Don't be alarmed if the dough is still pasty white at the end of the baking. As a frequent chocolate chip cookie baker but first time sugar-cookie baker I ruined my first batch by letting them cook until they were browned. Also, the more you bake the cookies the more stiff, crumbly, and difficult to cut they become. The bottom edge should be just beginning to turn golden when the cookie comes out.Once the dough is out of the oven, carefully use the parchment to slide the dough off onto a clear flat space where it can rest and cool while you start your next sheet of dough baking.", "step_imgs": ["https://cdn.instructables.com/FEJ/LDNL/FMEGGZ01/FEJLDNLFMEGGZ01.LARGE.jpg"], "step_title": "Step 4: Bake the Dough, Let It Cool"}, {"step": 5, "steps_text": "Each group on the periodic table is topped with a different flavor of icing or melted chocolate. Before you go whole hog you should experiment with a couple of flavors and find out what you like. The table groups are of wildly differing sizes, so choose your color / flavor combinations wisely. Here are my choices:   (38) Transition metals:  white chocolate, peach     (28) Rare earth metals:  bourbon spice, green   (15) Halogens: vanilla, blue   (10) Poor metals:  chocolate, brown   (6) Alkalai metals:  almond, orange   (6) Alkalai earth metals:  lemon, yellow   (6) Noble gasses:  maple, redBoth the icing and melted chocolate will become hard in a few hours, so don't prepare them until your cookie rectangles are cooled and ready to use. Work with flavors one at a time rather than attempting to prepare multiple toppings in advance.Icing Recipe: 2 cups sifted powdered sugar About 3 tbs of cream Flavoring of choiceIcing is really just powdered sugar wet with a tiny bit of liquid until it forms a paste. To make just sift powdered sugar into a bowl (some powdered sugar brands come quite lumpy and you definitely want a smooth icing), add flavorings, then add cream by the tablespoon full until you get a nice gooey mixture. Be cautious with the addition of cream or it will take a long time to harden up. The finished icing should hold peaks but slowly ooze towards flatness. If you are using melted chocolate melt chocolate chips in a double boiler, then just apply like icing. One of the most difficult parts of this project was attempting to stack and store all the cookies without damaging the finish, so the time it took the toppings to dry was a huge unexpected problem. Chocolate dries up fastest and hardest, so is by far the easiest to work with. If I was doing it again, I might try using white chocolate as a base for more of the flavors.", "step_imgs": ["https://cdn.instructables.com/FU9/IJDX/FMEGGZ0N/FU9IJDXFMEGGZ0N.LARGE.jpg", "https://cdn.instructables.com/F60/B88C/FMEGGZ0Q/F60B88CFMEGGZ0Q.LARGE.jpg", "https://cdn.instructables.com/FW4/VZ3H/FMEGGZ0U/FW4VZ3HFMEGGZ0U.LARGE.jpg", "https://cdn.instructables.com/FKU/GEAB/FMEGGZ0T/FKUGEABFMEGGZ0T.LARGE.jpg", "https://cdn.instructables.com/FWD/QBEP/FMEGGZ0S/FWDQBEPFMEGGZ0S.LARGE.jpg", "https://cdn.instructables.com/FF1/3JXL/FMEGGZ0R/FF13JXLFMEGGZ0R.LARGE.jpg", "https://cdn.instructables.com/FMW/ML1U/FMEGGZ0P/FMWML1UFMEGGZ0P.LARGE.jpg", "https://cdn.instructables.com/FC9/JFCB/FMEGGZ0O/FC9JFCBFMEGGZ0O.LARGE.jpg"], "step_title": "Step 5: Prepare the Toppings"}, {"step": 6, "steps_text": "Take each of the baked cookie rectangles and spoon a generous quantity of icing onto its center. Work to spread the icing from the middle out, being careful not to scrape the surface and pull up crumbs. Once the cookie square is completely covered let it sit until the topping hardens (should be 2-5 hours depending on how liquid your topping was, how warm the dough was, and the temperature of your kitchen).If you have problems leaving delicate projects out without them being disturbed by cats or other household pests, then carefully use the parchment paper (still under the cookie rectangle) to slide the iced cookie onto a hard flat surface such as a cutting board and refrigerate until the topping is set. Keep the cookie as supported and flat as possible while moving so that it doesn't bend or crack.", "step_imgs": ["https://cdn.instructables.com/FLU/G29J/FMEGGZ7H/FLUG29JFMEGGZ7H.LARGE.jpg", "https://cdn.instructables.com/F96/BT1M/FMEGGZ7B/F96BT1MFMEGGZ7B.LARGE.jpg", "https://cdn.instructables.com/F8K/E3SM/FMEGGZ7A/F8KE3SMFMEGGZ7A.LARGE.jpg", "https://cdn.instructables.com/FVK/S620/FMEGGZ79/FVKS620FMEGGZ79.LARGE.jpg", "https://cdn.instructables.com/FV2/WZFH/FMEGGZ7I/FV2WZFHFMEGGZ7I.LARGE.jpg", "https://cdn.instructables.com/F88/Y1BA/FMEGGZ7G/F88Y1BAFMEGGZ7G.LARGE.jpg", "https://cdn.instructables.com/FNW/9DY2/FMEGGZ7C/FNW9DY2FMEGGZ7C.LARGE.jpg", "https://cdn.instructables.com/FQW/BSNG/FMEGGZ78/FQWBSNGFMEGGZ78.LARGE.jpg"], "step_title": "Step 6: Apply Toppings to the Cookie Rectangles"}, {"step": 7, "steps_text": "Once the icing is completely hard it's time to make cookie tiles. Take each iced cookie rectangle and cut the edges square using a good sharp knife. Measure a 2\" grid, scoring the icing with a knife or a pin to create guide lines. If you are cutting through one of the chocolate topped cookie rectangles then be careful not to let the chocolate break into uneven pieces as you cut (cutting through cold chocolate is hard). To prevent cracks let it warm up a bit before you try to cut it and use more of a sawing motion to whittle through the top layer of cold chocolate. However while cutting sugar icing or the cookie itself use firm downward strokes to minimize crumbs and tearing.If you store the cookie tiles at this point, be sure to insert layers of wax paper between the cookies! If the icing is at all tacky the cookies will stick together and ruin the shiny finished look of the topping.", "step_imgs": ["https://cdn.instructables.com/F57/NFD9/FMEGGZ8L/F57NFD9FMEGGZ8L.LARGE.jpg", "https://cdn.instructables.com/FDT/8NIL/FMEGGZ8K/FDT8NILFMEGGZ8K.LARGE.jpg", "https://cdn.instructables.com/FV8/3C89/FMEGGZ8J/FV83C89FMEGGZ8J.LARGE.jpg"], "step_title": "Step 7: Cut Cookies to Size"}, {"step": 8, "steps_text": "Though this ice-a-big-cookie-and-cut-to-size method has the advantage of making it easy to mass-produce cookie tiles, it has the disadvantage of creating crumbly unfinished cookie edges. To fix this and to make the tiles a little bit fancier, the edges are finished with a coating melted chocolate. At the end of the project I found the chocolate edges to be a mixed blessing, but all things considered I think I'd do it again. On the one hand they add chocolate to the otherwise plain cookie (yum!) and create a nice visual grid for the look of the table. On the other hand, as the chocolate warms the cookies can be really messy to handle. No kidding. *Really* messy. However if you're keeping the cookies in the fridge and taking them out to eat, the chocolate is pure win.My first plan for coating the edges was to make a pot of melted chocolate and dip them. However I found that even when melted and kept over warm water the chocolate was too gloppy to make the results of dipping look neat. The better solution I came up with was to use a knife to spread molten chocolate across the edges in the manner of peanut butter. To give the chocolate edging time to harden first do one edge of all the cookies, then the opposite edge, etc. Elevate each newly coated edge while it dries to prevent sticking and smudging. If you finish one set of edges and no cookies are ready for their next edge, you can pop the cookies into the freezer for 5 minutes to harden up the chocolate quickly. Be prepared to make an awesomely huge chocolate mess. At the end of this step my apron and all my dish towels were practically rigid with chocolate, and there was a coating of sugar across the table, all the chairs, and one of the cats. ", "step_imgs": ["https://cdn.instructables.com/F7F/63WI/FMEGGZ9S/F7F63WIFMEGGZ9S.LARGE.jpg", "https://cdn.instructables.com/F25/ULHW/FMEGGZ9Q/F25ULHWFMEGGZ9Q.LARGE.jpg", "https://cdn.instructables.com/F3F/M8V4/FMEGGZ9I/F3FM8V4FMEGGZ9I.LARGE.jpg", "https://cdn.instructables.com/FVY/5RD0/FMEGGZ9H/FVY5RD0FMEGGZ9H.LARGE.jpg", "https://cdn.instructables.com/FAA/JROY/FMEGGZ9G/FAAJROYFMEGGZ9G.LARGE.jpg", "https://cdn.instructables.com/FAO/EIMJ/FMEGGZ9F/FAOEIMJFMEGGZ9F.LARGE.jpg", "https://cdn.instructables.com/F3N/PH6K/FMEGGZ9W/F3NPH6KFMEGGZ9W.LARGE.jpg", "https://cdn.instructables.com/FTY/U3EN/FMEGGZ9U/FTYU3ENFMEGGZ9U.LARGE.jpg", "https://cdn.instructables.com/FQN/K0KC/FMEGGZ9T/FQNK0KCFMEGGZ9T.LARGE.jpg", "https://cdn.instructables.com/F7H/1L0H/FMEGGZ9R/F7H1L0HFMEGGZ9R.LARGE.jpg", "https://cdn.instructables.com/FVF/7CNA/FMEGGZ9P/FVF7CNAFMEGGZ9P.LARGE.jpg", "https://cdn.instructables.com/FY9/OWVX/FMEGGZ9O/FY9OWVXFMEGGZ9O.LARGE.jpg", "https://cdn.instructables.com/FV4/TO8G/FMEGGZ9N/FV4TO8GFMEGGZ9N.LARGE.jpg", "https://cdn.instructables.com/F40/R3AW/FMEGGZ9K/F40R3AWFMEGGZ9K.LARGE.jpg", "https://cdn.instructables.com/F19/LL9Q/FMEGGZ9L/F19LL9QFMEGGZ9L.LARGE.jpg", "https://cdn.instructables.com/F22/DF2V/FMEGGZ9X/F22DF2VFMEGGZ9X.LARGE.jpg", "https://cdn.instructables.com/FKA/VXJG/FMEGGZ9Y/FKAVXJGFMEGGZ9Y.LARGE.jpg"], "step_title": "Step 8: Finish the Cookie Edges"}, {"step": 9, "steps_text": "Lay the completed cookie tiles on the background provided. This is both gratifying as it will be the first time the project starts to look complete, and is a good way to check you've got enough of all the colors. Melt semi sweet chocolate in double boiler and spoon into an icing bag or ziplock freezer bag with a tiny corner cut off. Test writing on a piece of wax paper to get a feel for it before you try writing on one of the real tiles. Work your way across the table, moving each row of cookies off of their space in turn so that you can see both the cookie and the underlying guide. Pipe chocolate into the appropriate letters on each cookie and then return it to position.", "step_imgs": ["https://cdn.instructables.com/F7B/YKT0/FMEGGZC6/F7BYKT0FMEGGZC6.LARGE.jpg", "https://cdn.instructables.com/FTS/97XP/FMEGGZCE/FTS97XPFMEGGZCE.LARGE.jpg", "https://cdn.instructables.com/F5M/GNSZ/FMEGGZCF/F5MGNSZFMEGGZCF.LARGE.jpg", "https://cdn.instructables.com/FHV/O7A0/FMEGGZCG/FHVO7A0FMEGGZCG.LARGE.jpg", "https://cdn.instructables.com/F45/R6R4/FMEGGZCD/F45R6R4FMEGGZCD.LARGE.jpg", "https://cdn.instructables.com/FMW/AYBL/FMEGGZCC/FMWAYBLFMEGGZCC.LARGE.jpg", "https://cdn.instructables.com/FKI/U2PZ/FMEGGZC5/FKIU2PZFMEGGZC5.LARGE.jpg", "https://cdn.instructables.com/FA2/8SLQ/FMEGGZC4/FA28SLQFMEGGZC4.LARGE.jpg"], "step_title": "Step 9: Letter the Cookie Tiles"}, {"step": 10, "steps_text": "Step back, take a break, take some pictures to show off to your friends! Then enjoy your cookies!", "step_imgs": ["https://cdn.instructables.com/FB8/N62X/FMEGGZE3/FB8N62XFMEGGZE3.LARGE.jpg", "https://cdn.instructables.com/F8N/1SN4/FMEGGZE2/F8N1SN4FMEGGZE2.LARGE.jpg", "https://cdn.instructables.com/F7Z/XIWO/FMEGGZE1/F7ZXIWOFMEGGZE1.LARGE.jpg", "https://cdn.instructables.com/F1R/XVMU/FMEGGZE0/F1RXVMUFMEGGZE0.LARGE.jpg", "https://cdn.instructables.com/FBQ/F3TT/FMEGGZDZ/FBQF3TTFMEGGZDZ.LARGE.jpg", "https://cdn.instructables.com/FJZ/YKQS/FMEGGZDY/FJZYKQSFMEGGZDY.LARGE.jpg"], "step_title": "Step 10: Enjoy the Cookies!"}], "channel": "No channel to show"}, {"category": "technology", "description": "This an instructable on how to do an Analysis of Variance test, commonly called ANOVA, in the statistics software R. ANOVA is a quick, easy way to rule out un-needed variables that contribute little to the explanation of a dependent variable. It is acessable and applicable to people outside of the statistics field. This instructable will assume no prior knowledge in R and will give basic software commands that may be trivial to an experienced user. If you are familiar with R I suggest skipping to Step 4, and proceeding with a known dataset already in R. R is a free, open source, and ubiquitous in the statistics field. R has all-text commands written in the computer language S. It is helpful, but by no mean necessary, to have an elementary understanding of text based computer languages. If you can not stand working with text-based software I suggest that you try the statistics software JMP.What You need: -Access to a computer -A data set to analyze Estimated time to complete an ANOVA Test: -15 minutes for a new user. -5 minutes for an experienced user.", "title": "Analysis of Variance (ANOVA) in R", "url": "https://www.instructables.com/id/Analysis-of-Variance-ANOVA-in-R/", "section": "technology", "steps": [{"step": 1, "steps_text": " If R isn't on your computer already it can be downloaded for free from the official website at: \t\thttp://cran.r-project.org/bin/windows/base/ (Windows) \t\thttp://cran.r-project.org/bin/macosx/ (Mac) \t\thttp://cran.r-project.org/ (Linux) Choose the version (32bit/64bit) that is of the operating system\u2019s natural base. Open R: You will see the basic command counsel open. This is a log and output of commands executed. However, it can\u2019t be edited making it hard to work with, instead open a Script window with the following: \t\tFile >> \t\tNew Script This window acts as a basic word processor (close to notepad)from which commands can be written, edited, and executed by right-clicking a line or selection and running it. Alternatively the shortcut Control+r will also execute a line or selection.Note: You can write comments in R by putting a pound sign (#) at the start of the comment. an example of this is shown in Step 3.\n        ", "step_imgs": ["https://cdn.instructables.com/FFV/FV9S/GU63A47A/FFVFV9SGU63A47A.LARGE.jpg", "https://cdn.instructables.com/FUO/STSQ/GU63Y21W/FUOSTSQGU63Y21W.LARGE.jpg"], "step_title": "Step 1: Getting Started:"}, {"step": 2, "steps_text": "\n          .csv is perhaps the most prevalent file type when dealing with data files. .csv Files can be made easily from excel. Alternatively you can enter your data directly into R by naming and pointing variables (see the secondary image for help) If you have a .csv file, great! Read it in using one of the following commands:  \t\tdata name = read.csv(\"appropriate web page or file directory\") \t\tdata name = read.csv(file.choose()) Once this is done, explore your data with the following commands:  \t\tdim(data name) \t\tstr(data name) \t\thead(data name) \t\tattach(data name)Note: You will need to run attach, or else R will not know what data set you are referring to.\n        ", "step_imgs": ["https://cdn.instructables.com/F7S/XHOE/GU7FA4ND/F7SXHOEGU7FA4ND.LARGE.jpg", "https://cdn.instructables.com/FZI/ZI61/GU63Y21U/FZIZI61GU63Y21U.LARGE.jpg"], "step_title": "Step 2: Reading Data:"}, {"step": 3, "steps_text": " You\u2019re doing great! You are close to being done with a single independent variable ANOVA test already. Run the Analysis of Variance with the following R command: name=aov(y variable~x variable) #runs the ANOVA test. ls(name) #lists the items stored by the test. summary(name) #give the basic ANOVA output. The example in the images compare Calories as the dependent variable, y, compared to one independent variable (Sugars in this example).Note:  If R cannot find the variable specified make sure the punctuations match and that you have executed the \u2018attach(data)\u2019 command.", "step_imgs": ["https://cdn.instructables.com/FUU/YREQ/GU7FA4NF/FUUYREQGU7FA4NF.LARGE.jpg", "https://cdn.instructables.com/FE9/01IY/GU7F32SS/FE901IYGU7F32SS.LARGE.jpg"], "step_title": "Step 3: Running the ANOVA Test:"}, {"step": 4, "steps_text": " The case with multiple independent variables x1,x2 to xn is a simple change. Modify the code such the independent variables are a product with an asterisk (*) in-between them: \t\tname=aov(y~x1*x2*xn)", "step_imgs": ["https://cdn.instructables.com/F4B/ZVFS/GU7FA4NC/F4BZVFSGU7FA4NC.LARGE.jpg"], "step_title": "Step 4: More Then One Independent Variable"}, {"step": 5, "steps_text": "Lets us the multivariate model from step 4. Here we are trying to describe Calories in terms of Sugars, Calories from Fat, Protein, and their interactions with each other (Sugar*CalFat, Sugars*Protein, CalFat*Protein, and Sugars*CalFat*Protein) Focus on the column: the probability that F is greater then the listed value from the previous column. This is often called the p value. In most cases you put significance at the alpha=.05 level, or we require the P value to be less then .05 to be considered statistically significant. Immediately we can see that the terms Sugars, Sugars*CalFat, and CalFat*Protein are not significant at the .05 level. Alternatively we see that CalFat and Sugars*CalFat*Protein are the best terms respectively with P values much less then .05. From this we can conclude that if your goal is to describe Calories you only need to do a regression on CalFat or potential Sugars*CalFat*Protein. If you plan to take more samples and all you care about its predicting or describing Calories you now only have to gather Calories from Fat and forgo gathering all the other variables. Congratulations! You just completed and are now able to interpret your very own data set with the analysis test. This handy tool can save you and your company untold amounts of time, effort and money!", "step_imgs": ["https://cdn.instructables.com/FMD/RU9C/GU8MZ8TJ/FMDRU9CGU8MZ8TJ.LARGE.jpg"], "step_title": "Step 5: Interpreting the Data:"}], "channel": "Software"}, {"category": "technology", "description": "Hi! Thanks for checking out our spirometer design! Spirometers are used in the clinical setting to measure the amount of air inspired and expired by a person's lungs. This data can be used to determine normal lung function, as well as diagnose a variety of pulmonary conditions.This project was completed in a Biomedical Instrumentation class at Vanderbilt University. The spirometer uses a differential pressure sensor to calculate the flow rate and volume of air blown through the tube over a given time. We used the principle of the Venturi tube, where a difference in pressures sampled at two different tube diameters can be used to calculate flow rate with Bernoulli's principle. Arduino interface: We chose to interface with the Arduino using MATLAB's Arduino Simulink package so that we could keep all programming within MATLAB and show output on the computer screen with an easy-to-use graphical user interface (GUI). The GUI allows us to modify the time interval over which to record and save the data in a variety of formats. An alternative to this would be to use an Arduino-compatible LCD screen and do all necessary computations completely within the Arduino platform. This approach would allow for greater portability, but a more complex interface would be needed to save the data and adjust recording parameters.  Materials: Arduino Uno      Arduino Project Enclosure      Honeywell ASDXRRX005NDAA5 Differential Pressure Transducer     Wires and USB-A to USB-B cable      Venturi Tube: (note: a single diameter tube will not work for this design!)       1.5 inch inner diameter (ID) PVC pipe     0.5 inch ID PVC pipe      1.5 inch to 0.5 inch ID PVC Reducer     3/38 inch ID fuel line tubing ", "title": "Venturi Tube Spirometer", "url": "https://www.instructables.com/id/Venturi-Tube-Spirometer/", "section": "technology", "steps": [{"step": 1, "steps_text": "A Venturi meter is an apparatus that can be used to measure the volumetric flow rate of a fluid. The principle of the Venturi meter is derived from the Bernoulli principle, which is derived from the conservation of the energy of a fluid. The Bernoulli equation for incompressible fluids is as follows:(v^2)/2+gz+P/\u03c1=CWhere v = velocity (m/s), g = acceleration due to gravity (m/s^2), P = pressure (Pa), \u03c1 = density (kg/m^3), and C is equal to some constant. This equation tells us that the sum of kinematic, potential, and internal energy must stay the same, or that a change in one would cause a change in the others such that the net change in energy is zero. The tube that we built for our spirometer was comprised of two pieces of PVC pipe: one with a diameter of 1.5 inches and the other with a diameter of 0.5 inches. As the fluid (air in this case) flows from the pipe of larger diameter to the pipe of smaller diameter, its velocity must increase, due to the principle of mass continuity. When the spirometer is held level, there is no change in the height of the fluid, so there must be a pressure drop to account for the increased velocity. All of these concepts combine to create an equation for the volumetric flow rate (V):V = A*v(P1- P2)/\u03c1+(v1^2-v2^)/2 = 0V = A2*sqrt((2*(P1-P2))/(\u03c1*(1-(A2/A1)^2)))Where A1 = cross sectional area of larger pipe, A2 = cross sectional area of the smaller pipe, and P1 - P2 can easily be measured by a differential pressure transducer. ", "step_imgs": ["https://cdn.instructables.com/FU1/D03Z/IN2337WR/FU1D03ZIN2337WR.LARGE.jpg"], "step_title": "Step 1: Venturi Tube Principle"}, {"step": 2, "steps_text": "We used a Honeywell ASDX series differential pressure transducer for this project. This transducer worked very well for the project, and we have attached the data sheet for reference. Differential pressure transducers typically contain a mechanical diaphragm, with a pressure input on either side. The difference in the two input pressures will deflect the diaphragm, and this deflection can be converted into an electrical signal. In our case, the pressure differential was related to the percentage of the supply voltage that was transmitted.", "step_imgs": ["/assets/img/pixel.png"], "step_title": "Step 2: Pressure Sensor"}, {"step": 3, "steps_text": "Because the pressure transducer was the only circuit element for this project, assembly was relatively straightforward. We began by putting the Arduino into the project case, then soldering the pressure transducer onto a circuit board. We cut the circuit board down to a small size so that it would fit into the project case, then we used hot glue and some plastic standoffs to secure the circuit board at an angle, so that the pressure sensor inlets would be pointed toward the opening in the top of the project case. To connect the pressure transducer to the Arduino: - PIN 1 --> Arduino 5V- PIN 2 --> Arduino A0 - PIN 3 --> Arduino GND To connect the Venturi tube to the pressure transducer, we have configured it so that the small diameter section of the tube connects to the top input on the pressure transducer, although either way will work as long as you account for the absolute value of the pressure difference in your code. ", "step_imgs": ["https://cdn.instructables.com/FC6/U9JV/IN233870/FC6U9JVIN233870.LARGE.jpg", "https://cdn.instructables.com/F2W/QPIM/IN4TR00O/F2WQPIMIN4TR00O.LARGE.jpg"], "step_title": "Step 3: Putting It All Together"}, {"step": 4, "steps_text": "As we mentioned earlier, we opted to write a custom GUI for the spirometer. Because everyone reading this may not have access to MATLAB, we will simply provide the general equations, and leave out the messy details of the GUI in this guide. We will outline the basics of the code in a few steps. Within a for loop that iterates over the sample time, where ii is the iteration: Read voltage from A0, and apply a moving average filter to reduce noise  voltage(ii) = *read voltage from pin (implementation will depend on whether you are using MATLAB or Arduino* Using the equation from the pressure transducer's datasheet, convert the voltage into a pressure difference (psi).  dP_psi(ii) = (14.6959 / 2) * (voltage(ii) - V_reference)Convert the pressure to Pascals for easier computations  dP_Pa(ii) = dP_psi(ii)*6894.76Using the equation for the volumetric flow rate through a Venturi tube, (IDs is the inner diameter of the small portion of the tube, and beta is the ratio of the two diameters. Rho is the density of air at a given temperature)  V(ii) = A2*sqrt((2*(P1-P2))/(\u03c1*(1-(A2/A1)^2)))See step 2 for more info on this equation If you want to calculate the total volume of air expired in your sample range, we can use a simple numerical integration:VolTotal += V(ii) * dt Where dt is the sample rate ", "step_imgs": ["https://cdn.instructables.com/FMY/BXAK/IN2337OY/FMYBXAKIN2337OY.LARGE.jpg"], "step_title": "Step 4: Writing the Code "}, {"step": 5, "steps_text": "The only thing left to do now is to try out your spirometer! We found that this design gave a pretty reasonable rough estimate of the flow rate and total volume of air expired in one expiration.Notes on performance:  We found that when compared to normal forced expiratory volumes (FEVs) and flow rates, our equations were off by around a factor of 10, which also skewed the numerical integration step. Although we did not have the time to do this in our short development period, a calibration would be required, where a known flow rate and volume of air is applied to the spirometer, and the equations adjusted accordingly. Also of note, I suspect that when using the MATLAB interface, the sample rate is determined by the speed at which each iteration of the for loop is executed, since an explicit sample rate cannot be set through the MATLAB interface. As a result, a better approach may be to sample the data using the Arduino code directly, then processing using any preferred method. ", "step_imgs": [], "step_title": "Step 5: Try It Out! "}], "channel": "Arduino"}, {"category": "technology", "description": "MaterialsPencil or pen Sheet of paperTime Required5-10 minutesExperienceBasic understanding of atoms and inorganic molecules Basic multiplication skillsIntroductionChemical equations provide a formula for a chemical reaction between molecules that may include a single element or multiple elements. Generally, they follow the format of reactants to products, where \"reactants\" are the starting materials of your reaction and \"products\" are the end result. Abbreviations of element names are used to facilitate the equations. Abbreviations can be found in a periodic table of elements.It is important to balance chemical equations in order to follow the Law of the Conservation of Mass. In simplified terms, the law states that there must be an equal number of atoms of each element in the reactants as in the products.The instructions will examine balancing simple equations that contain 2 molecules for reactants and for products. The examples will only use whole numbers and will not discuss equations that involve complex ions, which is a molecule that has a charge.", "title": "How to Balance Chemical Equations", "url": "https://www.instructables.com/id/How-to-Balance-Chemical-Equations/", "section": "technology", "steps": [{"step": 1, "steps_text": "When approaching a chemical equation, it is important that you understand the difference between coefficients and subscripts. The coefficient is placed in front of a molecule, while the subscript follows certain atoms as shown in the first picture. In a molecule, the coefficient denotes the amount of that molecule present. The subscript of an atom indicates the amount of that atom in the molecule. For example, in the first picture the coefficient for the second term indicates that 3 molecules of H2 are present, and the subscript of the first term signifies that 2 atoms of nitrogen (N) are present per molecule of N2. If there is not a subscript present on an element, you can infer there is only one atom of that element.Adding a coefficient in front of a molecule multiplies all atoms within that molecule by the number of the coefficient. If an atom has a subscript, the coefficient and the subscript multiply to yield the total amount of that atom in the molecule. For example, in the second picture, the coefficient for ammonia (NH3) on the products side is 2. The 2 is multiplied by the subscript of hydrogen which is 3, yielding a total number of hydrogen atoms equal to 6. The coefficient is the part that can be changed and added when balancing an equation. Changing the coefficient changes the total number of that molecule. The subscript, however, cannot be changed. Altering a subscript would change the molecule itself.", "step_imgs": ["https://cdn.instructables.com/FQQ/NKZM/IMDZBTJ3/FQQNKZMIMDZBTJ3.LARGE.jpg", "https://cdn.instructables.com/FRF/SECV/IMDZBTNW/FRFSECVIMDZBTNW.LARGE.jpg"], "step_title": "Step 1: Coefficients Versus Subscripts"}, {"step": 2, "steps_text": "Create a chart for the reactant and product sides of the equation  Count the number of atoms for each element on both sides of the equation  Fill in the charts with the appropriate atom counts", "step_imgs": ["https://cdn.instructables.com/FXM/UIGU/IMDZBDFE/FXMUIGUIMDZBDFE.LARGE.jpg"], "step_title": "Step 2: Sum the Atoms"}, {"step": 3, "steps_text": "Choose an element with which to begin   Add a coefficient to the start of the molecule containing this element on one side   Choose a number for the coefficient that would cause the atom count to equal the atom count of that element on the other side of the equation   Alter the chart based on the change caused by the coefficientIn the above example, Fe was chosen as the element to start. A coefficient of 2 was added to the first term so that the new reactant atom count of Fe would be 2 in order to equal the atom count of 2 for the product Fe.", "step_imgs": ["https://cdn.instructables.com/FX1/IXHY/IMF65NDW/FX1IXHYIMF65NDW.LARGE.jpg"], "step_title": "Step 3: Balance the First Element"}, {"step": 4, "steps_text": "Add coefficients for the other elements as done in step 3   Alter the chart as the coefficients change the atom counts   It might be necessary to go through the process more than once as changing a coefficient can alter the atom count for an element that has already been balanced   Continue until the atom counts for each element on one side is equal to the atom counts on the other sideIn the example, Cl was the next atom chosen. In order to equal the new atom count of 6 for the reactant Cl, the molecule containing Cl in the products must have a coefficient of 3. The coefficient brings the product atom count of Mg up to 3. In order to compensate for this change, the reactant molecule containing Mg was given a coefficient of 3.", "step_imgs": ["https://cdn.instructables.com/FTC/4NTO/IMF5Y2EW/FTC4NTOIMF5Y2EW.LARGE.jpg", "https://cdn.instructables.com/F4K/XBN0/IMF5Y2GO/F4KXBN0IMF5Y2GO.LARGE.jpg"], "step_title": "Step 4: Repeat for the Other Elements"}, {"step": 5, "steps_text": "1. Begin with an atom that appears in one molecule on either side of the equation. As shown in the picture, oxygen appears in 3 different molecules on the product side. As oxygen will be involved in several molecules that must be given a coefficient to accommodate the other atoms, it is simpler to save it until the end when all other atoms have been balanced.2. It is best to balance oxygen and hydrogen last. These atoms are typically involved in more than one molecule per side, as explained in the previous tip. ", "step_imgs": ["https://cdn.instructables.com/FM2/UB6S/IMDZBC9Z/FM2UB6SIMDZBC9Z.LARGE.jpg"], "step_title": "Step 5: Tips"}, {"step": 6, "steps_text": "For more information about chemical equations:http://www.visionlearning.com/en/library/Chemistry/1/Chemical-Equations/56For a website tool that automatically balances chemical equations:http://www.webqc.org/balance.php", "step_imgs": [], "step_title": "Step 6: More Resources"}], "channel": "Science"}, {"category": "technology", "description": "Warning: Math!Sometimes someone just needs to know how much of a compound it will to take to produce another substance or just to know how much of an element is in a compound . For example if you have 1kg of CuO waste and want to reclaim the copper from it, it would be helpful to know that CuO is 79.88645477928328% Copper and 20.113545220716722% oxygen by weight which amounts to 798.8645477928328 g copper and 201.13545220716722 g oxygen/ kg CuO. Now obviously only processing 1kg of material wouldn't warrant such a crazy decimal so rounding is pretty handy here which would bring it to a much more manageable and practical 798.9g copper and 201.1g oxygen per kilogram of CuO. I will also be doing an example with the combustion of sugar as well to show a little better of how it can be used in chemical reactions.", "title": "Determining Mass of Elements in a Compound", "url": "https://www.instructables.com/id/Determining-Mass-of-Elements-in-a-Compound/", "section": "technology", "steps": [{"step": 1, "steps_text": "According to wikipedia, an atomic mass unit (unified) is equal to 1/12 of a carbon 12 atom and is denoted with the letter \"u\" which stands for units. Incidentally, 1u can also be written as 1 g/mol in the same way that 1 g/ml can be written as 1 kg/L, they are obviously completely different but the numbers are the same. For example in the element oxygen, the atomic mass is 15.9994u so that would also mean that 1 mol of oxygen weighs 15.9994g. In 1mole of a substance there is a set number of atoms or molecules (6.022140857\u00d710^23). Now, in 1 mol CuO there is 1 mol Copper and 1 mol Oxygen, in 1 mol of sugar (C6H12O6) there are 6 mol of carbon, 12 mol of hydrogen, and 6 mol of oxygen. See a pattern yet? Hahafor more information on moles-https://en.wikipedia.org/wiki/Mole_(unit)One important thing to remember is atomic mass is an average. For a better explanation refer to this page-https://en.wikipedia.org/wiki/Unified_atomic_mass_unit", "step_imgs": ["https://cdn.instructables.com/FDV/382J/J8UH2F8G/FDV382JJ8UH2F8G.LARGE.jpg"], "step_title": "Step 1: Find Your Atomic Masses"}, {"step": 2, "steps_text": "First we need to calculate the total atomic mass of our compounds, copper (II) oxide (CuO) and sugar (C6H12O6).The atomic masses go as follows-Cu- 63.546u O- 15.9994u C- 12.0107u H-1.00794uAnd now to dive into the actual math and calculate the molar massesmass(CuO) = (1(mol) * 63.546 (Cu)) + (1(mol) * 15.9994(O)) or if its less confusing-mass(CuO) = (1 * 63.546) + (1 * 15.9994)mass(CuO) = 79.5454u or g/molmass(sugar) = (6(mol) * 12.0107(C)) + (12(mol) * 1.00794(H)) + (6(mol) * 15.9994(O)) ormass(sugar) = (6 * 12.0107) + (12 * 1.00794) + (6 * 15.9994)mass(sugar) = 180.15588u or g/molIn the case of the copper oxide we would like to know just how much copper is in the oxide so we can find the percentage by-percentage(Cu) = ( (1(mol) * 63.546(Cu)) / (79.5454(mass(CuO))) ) * 100percentage(Cu) = ((1 * 63.546) / 79,5454) * 100percentage(Cu) = 0.7988645477928328 * 100percentage(Cu) = 79.88645477928328This means that the total amount of copper in CuO is 79.88645477928328% by weight, and then from that we can find the total mass of the copper in 1kg of CuO-total(Cu) = 0.7988645477928328 * 1000total(Cu) = 798.8645477928328g", "step_imgs": ["https://cdn.instructables.com/F3U/DALB/J8UH2F8E/F3UDALBJ8UH2F8E.LARGE.jpg", "https://cdn.instructables.com/FT1/YEEQ/J8UH2F8A/FT1YEEQJ8UH2F8A.LARGE.jpg", "https://cdn.instructables.com/F9X/PFLX/J8UH2F84/F9XPFLXJ8UH2F84.LARGE.jpg", "https://cdn.instructables.com/FK3/Z86E/J8UH2F82/FK3Z86EJ8UH2F82.LARGE.jpg"], "step_title": "Step 2: Do Some Math"}, {"step": 3, "steps_text": "Banging your head against the table yet? Haha it gets worse.Now we are going to calculate how many grams of oxygen it will take to fully combust 1g of sugar and how many grams of CO2 and water are produced as a result.The first thing we need to do is write out and balance the chemical reaction-C6H12O6 + 12O \u2192 6CO2 + 6H2OFor more on how to do this, check out this excellent instructable from CrystalE10- https://www.instructables.com/id/How-to-Balance-a-Chemical-Equation/total mass of reactant(O) per mol sugar = 12(mol) * 15.9994total mass of reactant(O) per mol sugar = 191.9928gtotal mass of product(CO2) per mol sugar = 6 * (12.0107(C) + (2 * 15.9994(O)))total mass of product(CO2) per mol sugar = 264.057gtotal mass of product(H2O) per mol sugar = 6 * ((2 * 1.00794) + 15.9994)total mass of product(H2O) per mol sugar = 108.09168gmol/g(sugar) =1 / 180.15588(mass(sugar))mol/g(sugar) = 0.0055507486072616675total mass of reactant(O) per gram sugar = 191.9928g (total mass of reactant(O) per mol sugar ) * 0.0055507486072616675 (mol/g(sugar)) \u2192total mass of reactant(O) per gram sugar = 191.9928g * 0.0055507486072616675total mass of reactant(O) per gram sugar = 1.0657037672042677gRepeat this for the CO2 and H2O to find that the masses of the reactants are-sugar - 1gOxygen - 1.0657037672042677gand the masses of the products are-CO2 - 1.4657140249876943gH2O - 0.5999897422165739gand thats it!So, we found out through a little (mind numbing haha) math that it takes a little over a gram of oxygen to burn a gram of sugar with the products being about 1.5g of CO2 and about 0.6g water.The great thing about this technique is that it can be applied to any chemical reaction or any set of chemical reactions.If you want a little more practice doing this you could try working out how much carbon it would take to carbothermally reduce that copper (II) oxide to copper metal and how much CO2 will be produced as a result.Like what you see here? Consider supporting me on Patreon.", "step_imgs": ["https://cdn.instructables.com/FSH/TN56/J8UH2F81/FSHTN56J8UH2F81.LARGE.jpg"], "step_title": "Step 3: More Math!"}], "channel": "Science"}, {"category": "technology", "description": "MaterialsPencil or penSheet of paper ExperienceBasic understanding of atoms and inorganic moleculesBasic multiplication skills IntroductionChemical equations provide a formula for a chemical reaction. Generally, they follow the format of reactants to products, where \"reactants\" are the starting materials of your reaction and \"products\" are the end result. Abbreviations of element names are used to facilitate the equations. Abbreviations can be found in a periodic table of elements. It is important to balance chemical equations in order to follow the Law of the Conservation of Mass. In simplified terms, the law states that there must be an equal number of atoms of each element in the reactants as in the products. The instructions will examine balancing simple equations that contain 2 molecules for reactants and for products. The examples will only use whole numbers and will not discuss equations that involve complex ions, which is a molecule that has a charge.", "title": "How to Balance Chemical Equations (Initial)", "url": "https://www.instructables.com/id/How-to-Balance-Chemical-Equations-Initial/", "section": "technology", "steps": [{"step": 1, "steps_text": "When approaching a chemical equation, it is important that you understand the difference between coefficients and subscripts. The coefficient is placed in front of a molecule, while the subscript follows certain atoms as shown in the first picture.In a molecule, the coefficient denotes the amount of that molecule present. The subscript of an atom indicates the amount of that atom in the molecule. For example, in the first picture the coefficient for the second term indicates that 3 molecules of H2 are present, and the subscript of the first term signifies that 2 atoms of nitrogen (N) are present per molecule of N2. Adding a coefficient in front of a molecule multiplies all atoms within that molecule by the number of the coefficient. If an atom has a subscript, the coefficient and the subscript multiply to yield the total amount of that atom in the molecule. For example, in the second picture, the coefficient for ammonia (NH3) on the products side is 2. The 2 is multiplied by the subscript of hydrogen which is 3, yielding a total number of hydrogen atoms equal to 6. The coefficient is the part that can be changed and added when balancing an equation. Changing the coefficient changes the total number of that molecule. The subscript, however, cannot be changed. Altering a subscript would change the molecule itself.", "step_imgs": ["https://cdn.instructables.com/F2D/ZZIG/IMGLENG3/F2DZZIGIMGLENG3.LARGE.jpg", "https://cdn.instructables.com/FD1/O10X/IMGLENO0/FD1O10XIMGLENO0.LARGE.jpg"], "step_title": "Step 1: Coefficients Versus Subscripts"}, {"step": 2, "steps_text": "Create a chart for the reactant and product sides of the equationCount the number of atoms for each element on both sides of the equationFill in the charts with the appropriate atom counts", "step_imgs": ["https://cdn.instructables.com/FAJ/LYD2/IMGLENP5/FAJLYD2IMGLENP5.LARGE.jpg"], "step_title": "Step 2: Sum the Atoms"}, {"step": 3, "steps_text": "Choose an element with which to beginAdd a coefficient to the start of the molecule containing this element on one sideChoose a number for the coefficient that would cause the atom count to equal the atom count of that element on the other side of the equationAlter the chart based on the change caused by the coefficient", "step_imgs": ["https://cdn.instructables.com/F15/9FGJ/IMGLEQ0I/F159FGJIMGLEQ0I.LARGE.jpg"], "step_title": "Step 3: Balance the First Element"}, {"step": 4, "steps_text": "Add coefficients for the other elements as done in step 3Alter the chart as the coefficients change the atom countsIt might be necessary to go through the process more than once as changing a coefficient can alter the atom count for an element that has already been balancedContinue until the atom counts for each element on one side is equal to the atom counts on the other side", "step_imgs": ["https://cdn.instructables.com/FEQ/B7RQ/IMGLG3AE/FEQB7RQIMGLG3AE.LARGE.jpg", "https://cdn.instructables.com/F69/30XT/IMGLG8N1/F6930XTIMGLG8N1.LARGE.jpg"], "step_title": "Step 4: Repeat for the Other Elements"}, {"step": 5, "steps_text": "1. Begin with an atom that appears in one molecule on either side of the equation. As shown in the picture, oxygen appears in 3 different molecules on the product side. As oxygen will be involved in several molecules that must be given a coefficient to accommodate the other atoms, it is simpler to save it until the end when all other atoms have been balanced.2. It is best to balance oxygen and hydrogen last. These atoms are typically involved in more than one molecule per side, as explained in the previous tip.", "step_imgs": ["https://cdn.instructables.com/FTH/D273/IMGLGBVR/FTHD273IMGLGBVR.LARGE.jpg"], "step_title": "Step 5: Tips"}], "channel": "Science"}, {"category": "technology", "description": "Bad weather always looks worse through a window.We\u2019ve always been interested in monitoring our local weather and what we see out the window. We also wanted better control over our heating and A/C system. Building a Personal Weather Station is a great learning experience. When you finish building this project you will have a better understanding of how wireless communications work, how sensors work, and how powerful the Raspberry Pi platform can be. With this project as a base and the experience gained, you will be able to easily build more complex projects in the future.", "title": "Personal Weather Station Using Raspberry Pi With BME280 in Java", "url": "https://www.instructables.com/id/Personal-Weather-Station-Using-Raspberry-Pi-With-B/", "section": "technology", "steps": [{"step": 1, "steps_text": "1. A Raspberry PiThe first step is to get your hands on a Raspberry Pi board. Raspberry Pi is a Linux powered single board computer. Its goal is to improve programming skills and hardware understanding. It was quickly adopted by hobbyists and electronics enthusiasts for innovative projects.2. I\u00b2C Shield for Raspberry PiThe INPI2(I2C adapter) provides the Raspberry Pi 2/3 an I\u00b2C port for use with multiple of I\u00b2C devices. It's available on ControlEverythin g.com.3. Digital Humidity, Pressure and Temperature Sensor, BME280The BME280 is a humidity, pressure and temperature sensor that has fast response time and high overall accuracy. We purchased this sensor from controleverything.com.4. I\u00b2C Connecting CableWe had the I\u00b2C connecting cable available at controleverything.com. 5. Micro USB cableThe micro USB cable Power supply is an ideal choice for powering the Raspberry Pi.6 . Interpret Internet Access via EthernetCable/WiFi AdapterOne of the first things that you will want to do is to get your Raspberry Pi connected up to the Internet. We can connect using an Ethernet cable. Another possibility is that you can connect to a wireless network using a USB wireless Adapter.7. HDMI Cable(Display & connectivity cable)Any HDMI/DVI monitor and any TV should work as a display for the Pi. But it's optional. A remote access(like-SSH) possibility can\u2019t be ruled out also. You can also get the access with PUTTY software.", "step_imgs": ["https://cdn.instructables.com/FE6/9AHZ/ISCC05ZL/FE69AHZISCC05ZL.LARGE.jpg", "https://cdn.instructables.com/FCF/F4HZ/ISCC05ZQ/FCFF4HZISCC05ZQ.LARGE.jpg", "https://cdn.instructables.com/FU1/SGGU/ISCC05ZZ/FU1SGGUISCC05ZZ.LARGE.jpg", "https://cdn.instructables.com/F4V/MFRB/ISCC05ZM/F4VMFRBISCC05ZM.LARGE.jpg"], "step_title": "Step 1: Bill of Essential Equipment "}, {"step": 2, "steps_text": "Make the circuit as per the schematic shown.While learning, we got thoroughly with the basics of electronics regarding hardware and software knowledge. We wanted to draw up a simple electronics schematic for this project. Electronic schematics are like a blueprint for electronics. Draw up a blueprint and follow the design carefully. We have applied some basics of electronics here. Logic gets you from A to B, Imagination will take you everywhere !Connection of the Raspberry Pi and I\u00b2C ShieldFirst of all take the Raspberry Pi and place the I\u00b2C Shield(with Inward Facing I\u00b2C Port) on it. Press the Shield gently over the GPIO pins of Pi and we are done with this step as easy as pie(see the pic).Connection of the Sensor and Raspberry PiTake the sensor and Connect the I\u00b2C cable with it. Make sure that I\u00b2C Output ALWAYS connects to the I\u00b2C Input. The same has to be followed for the Raspberry Pi with the I\u00b2C shield mounted over it the GPIO pins.We have the I\u00b2C Shield and the connecting cables on our side as a very big relief and a very big advantage as we are left only with the plug and play option. No more pins and wiring issue and hence, confusion is gone. Just imagine yourself in the web of wires and getting into that. A relief from that. This makes things uncomplicated.Note : The brown wire should always follow the Ground (GND) connection between the output of one device and the input of another device.Internet Connectivity is a NeedYou have a choice here actually. You can connect Raspberry Pi with the LAN cable or the wireless Nano USB Adapter for WIFI Connectivity. Either way, the manifest is to connect to the internet which is accomplished.Powering of the CircuitPlug in the Micro USB cable into the power jack of Raspberry Pi. Punch up and voila! Everything's good to go and we will start immediately.Connection to DisplayWe can either have the HDMI cable connected to a monitor or a TV. We can access a Raspberry Pi without connecting it to a monitor using -SSH(Access the command line of the Pi from another computer). You can also use the PUTTY software for that. This option is for advanced users so we won't be covering it in detail here.I\u2019ve heard there\u2019s going to be a recession, I\u2019ve decided not to participate.", "step_imgs": ["https://cdn.instructables.com/FE5/JY4B/ISCC05ZN/FE5JY4BISCC05ZN.LARGE.jpg", "https://cdn.instructables.com/FY3/F3N8/ISCC0602/FY3F3N8ISCC0602.LARGE.jpg"], "step_title": "Step 2: Hardware Connections for Setup"}, {"step": 3, "steps_text": "The java Code for the Raspberry Pi and BME280 Sensor. It's available in ourGithub repository.Before going on to the code, make sure you read the instructions given in the Readme file and Setup your Raspberry Pi according to it. It will take just take a moment to do so. A personal weather station is a set of weather-measuring instruments operated by a private individual, club, association, or even business. Personal weather stations may be operated solely for the enjoyment and education of the owner, but many personal weather station operators also share their data with others, either by manually compiling data and distributing it, or through the use of the internet or amateur radio. The code is in it\u2019s simplest form you can imagine and you should have no issue with it but ask if you have. Even if you know a thousand things, still ask someone who knows.You can copy the working java code for this sensor from here as well.// Distributed with a free-will license.// Use it any way you want, profit or free, provided it fits in the licenses of its associated works.\n// BME280\n// This code is designed to work with the BME280_I2CS I2C Mini Module available from ControlEverything.com.\n// https://www.controleverything.com/content/Humidity?sku=BME280_I2CS#tabs-0-product_tabset-2import com.pi4j.io.i2c.I2CBus;\nimport com.pi4j.io.i2c.I2CDevice;\nimport com.pi4j.io.i2c.I2CFactory;\nimport java.io.IOException;public class BME280\n{\n    public static void main(String args[]) throws Exception\n    {\n        // Create I2C bus\n        I2CBus bus = I2CFactory.getInstance(I2CBus.BUS_1);\n        // Get I2C device, BME280 I2C address is 0x76(108)\n        I2CDevice device = bus.getDevice(0x76);\n        \n        // Read 24 bytes of data from address 0x88(136)\n        byte[] b1 = new byte[24];\n        device.read(0x88, b1, 0, 24);\n        \n        // Convert the data\n        // temp coefficients\n        int dig_T1 = (b1[0] & 0xFF) + ((b1[1] & 0xFF) * 256);\n        int dig_T2 = (b1[2] & 0xFF) + ((b1[3] & 0xFF) * 256);\n        if(dig_T2 > 32767)\n        {\n            dig_T2 -= 65536;\n        }\n        int dig_T3 = (b1[4] & 0xFF) + ((b1[5] & 0xFF) * 256);\n        if(dig_T3 > 32767)\n        {\n            dig_T3 -= 65536;\n        }\n        \n        // pressure coefficients\n        int dig_P1 = (b1[6] & 0xFF) + ((b1[7] & 0xFF) * 256);\n        int dig_P2 = (b1[8] & 0xFF) + ((b1[9] & 0xFF) * 256);\n        if(dig_P2 > 32767)\n        {\n            dig_P2 -= 65536;\n        }\n        int dig_P3 = (b1[10] & 0xFF) + ((b1[11] & 0xFF) * 256);\n        if(dig_P3 > 32767)\n        {\n            dig_P3 -= 65536;\n        }\n        int dig_P4 = (b1[12] & 0xFF) + ((b1[13] & 0xFF) * 256);\n        if(dig_P4 > 32767)\n        {\n            dig_P4 -= 65536;\n        }\n        int dig_P5 = (b1[14] & 0xFF) + ((b1[15] & 0xFF) * 256);\n        if(dig_P5 > 32767)\n        {\n            dig_P5 -= 65536;\n        }\n        int dig_P6 = (b1[16] & 0xFF) + ((b1[17] & 0xFF) * 256);\n        if(dig_P6 > 32767)\n        {\n            dig_P6 -= 65536;\n        }\n        int dig_P7 = (b1[18] & 0xFF) + ((b1[19] & 0xFF) * 256);\n        if(dig_P7 > 32767)\n        {\n            dig_P7 -= 65536;\n        }\n        int dig_P8 = (b1[20] & 0xFF) + ((b1[21] & 0xFF) * 256);\n        if(dig_P8 > 32767)\n        {\n            dig_P8 -= 65536;\n        }\n        int dig_P9 = (b1[22] & 0xFF) + ((b1[23] & 0xFF) * 256);\n        if(dig_P9 > 32767)\n        {\n            dig_P9 -= 65536;\n        }\n        \n        // Read 1 byte of data from address 0xA1(161)\n        int dig_H1 = ((byte)device.read(0xA1) & 0xFF);\n        \n        // Read 7 bytes of data from address 0xE1(225)\n        device.read(0xE1, b1, 0, 7);\n        \n        // Convert the data\n        // humidity coefficients\n        int dig_H2 = (b1[0] & 0xFF) + (b1[1] * 256);\n        if(dig_H2 > 32767)\n        {\n            dig_H2 -= 65536;\n        }\n        int dig_H3 = b1[2] & 0xFF ;\n        int dig_H4 = ((b1[3] & 0xFF) * 16) + (b1[4] & 0xF);\n        if(dig_H4 > 32767)\n        {\n            dig_H4 -= 65536;\n        }\n        int dig_H5 = ((b1[4] & 0xFF) / 16) + ((b1[5] & 0xFF) * 16);\n        if(dig_H5 > 32767)\n        {\n            dig_H5 -= 65536;\n        }\n        int dig_H6 = b1[6] & 0xFF;\n        if(dig_H6 > 127)\n        {\n            dig_H6 -= 256;\n        }\n        \n        // Select control humidity register\n        // Humidity over sampling rate = 1\n        device.write(0xF2 , (byte)0x01);\n        // Select control measurement register\n        // Normal mode, temp and pressure over sampling rate = 1\n        device.write(0xF4 , (byte)0x27);\n        // Select config register\n        // Stand_by time = 1000 ms\n        device.write(0xF5 , (byte)0xA0);\n        \n        // Read 8 bytes of data from address 0xF7(247)\n        // pressure msb1, pressure msb, pressure lsb, temp msb1, temp msb, temp lsb, humidity lsb, humidity msb\n        byte[] data = new byte[8];\n        device.read(0xF7, data, 0, 8);\n        \n        // Convert pressure and temperature data to 19-bits\n        long adc_p = (((long)(data[0] & 0xFF) * 65536) + ((long)(data[1] & 0xFF) * 256) + (long)(data[2] & 0xF0)) / 16;\n        long adc_t = (((long)(data[3] & 0xFF) * 65536) + ((long)(data[4] & 0xFF) * 256) + (long)(data[5] & 0xF0)) / 16;\n        // Convert the humidity data\n        long adc_h = ((long)(data[6] & 0xFF) * 256 + (long)(data[7] & 0xFF));\n        \n        // Temperature offset calculations\n        double var1 = (((double)adc_t) / 16384.0 - ((double)dig_T1) / 1024.0) * ((double)dig_T2);\n        double var2 = ((((double)adc_t) / 131072.0 - ((double)dig_T1) / 8192.0) *\n                       (((double)adc_t)/131072.0 - ((double)dig_T1)/8192.0)) * ((double)dig_T3);\n        double t_fine = (long)(var1 + var2);\n        double cTemp = (var1 + var2) / 5120.0;\n        double fTemp = cTemp * 1.8 + 32;\n        \n        // Pressure offset calculations\n        var1 = ((double)t_fine / 2.0) - 64000.0;\n        var2 = var1 * var1 * ((double)dig_P6) / 32768.0;\n        var2 = var2 + var1 * ((double)dig_P5) * 2.0;\n        var2 = (var2 / 4.0) + (((double)dig_P4) * 65536.0);\n        var1 = (((double) dig_P3) * var1 * var1 / 524288.0 + ((double) dig_P2) * var1) / 524288.0;\n        var1 = (1.0 + var1 / 32768.0) * ((double)dig_P1);\n        double p = 1048576.0 - (double)adc_p;\n        p = (p - (var2 / 4096.0)) * 6250.0 / var1;\n        var1 = ((double) dig_P9) * p * p / 2147483648.0;\n        var2 = p * ((double) dig_P8) / 32768.0;\n        double pressure = (p + (var1 + var2 + ((double)dig_P7)) / 16.0) / 100;\n        \n        // Humidity offset calculations\n        double var_H = (((double)t_fine) - 76800.0);\n        var_H = (adc_h - (dig_H4 * 64.0 + dig_H5 / 16384.0 * var_H)) * (dig_H2 / 65536.0 * (1.0 + dig_H6 / 67108864.0 * var_H * (1.0 + dig_H3 / 67108864.0 * var_H)));\n        double humidity = var_H * (1.0 -  dig_H1 * var_H / 524288.0);\n        if(humidity > 100.0)\n        {\n            humidity = 100.0;\n        }else\n            if(humidity < 0.0) \n            {\n                humidity = 0.0;\n            }\n        \n        // Output data to screen\n        System.out.printf(\"Temperature in Celsius : %.2f C %n\", cTemp);\n        System.out.printf(\"Temperature in Fahrenheit : %.2f F %n\", fTemp);\n        System.out.printf(\"Pressure : %.2f hPa %n\", pressure);\n        System.out.printf(\"Relative Humidity : %.2f %% RH %n\", humidity);\n    }\n}", "step_imgs": ["https://cdn.instructables.com/F9G/OTJZ/ISCC05ZW/F9GOTJZISCC05ZW.LARGE.jpg"], "step_title": "Step 3: Raspberry Pi Programming in Java"}, {"step": 4, "steps_text": "Now, download (or git pull) the code and open it in the Raspberry Pi. Run the commands to Compile and Upload the code  on the terminal and see the output on Monitor. After few moments, it will screen all the parameters. Making ensure that you have a smooth code transition and a calm(ish) result, you think of more ideas to make further amendments(Every Project starts with a Story).", "step_imgs": ["https://cdn.instructables.com/FD3/M2U5/ISCC05ZO/FD3M2U5ISCC05ZO.LARGE.jpg"], "step_title": "Step 4: The Code Practicality"}, {"step": 5, "steps_text": "The BME280 achieves high performance in all applications requiring humidity and pressure measurement. These emerging applications are Context Awareness, e.g. Skin Detection, Room Change Detection, Fitness Monitoring / Well-Being, Warning Regarding Dryness or High Temperatures, Measurement of Volume and Air Flow, Home Automation Control, Control Heating, Ventilation, Air Conditioning (HVAC), Internet of Things(IoT), GPS Enhancement (e.g. Time-to-First-Fix Improvement, Dead Reckoning, Slope Detection), Indoor Navigation (Change of Floor Detection, Elevator Detection), Outdoor Navigation, Leisure & Sports Applications, Weather Forecast And Vertical Velocity Indication (Rise/Sink Speed).", "step_imgs": [], "step_title": "Step 5: Utilization in Constructive World"}, {"step": 6, "steps_text": "As you can see, this project is a great demonstration of what hardware and software are capable of. In a little amount of time, one can build such an impressive project! Of course, this is a just the beginning. Making a more sophisticated Personal Weather Station like Automated Airport Personal Weather Stations can involve some more sensors like Anemometer(wind speed), Transmissometer(visibility), Pyranometer(solar radiation) etc. We have a video tutorial on Youtube having the basic functioning of the I\u00b2C sensor with Rasp Pi. It\u2019s really amazing to see the results and working of the I\u00b2C communications. Check it as well. Have fun building and learning! Please let us know what you think of this instructable. We would love to make some improvements if necessary. Once we accept our limits, we go beyond them.", "step_imgs": [], "step_title": "Step 6: Conclusion"}], "channel": "Sensors"}, {"category": "technology", "description": "I started out with the goal of using a semi-automatic nerf gun to create a sentry gun. The idea was that if someone walks in front of the gun and is within a certain distance they would be pelted by nerf bullets. \u00a0This Idea came out of a game of Humans Vs. Zombies, I thought that it would be a lot easier if i had one of my guns programmed to shoot if someone was too close to a certain building. Thus I have started working on building a Nerf Sentry Gun. Round 1: Rotating Movement and LED On/OFF I started out by deciding to create the sweeping motion of the gun and then use a light turning on and off to mimic when the gun would be on/off (firing and not firing). \u00a0I used a Vex Ultrasonic Sensor to determine distance from gun to nearest object and I used a servo motor to control the motion of the gun.\u00a0 Round 2: Adding in Gun and having to Change Motion Controller I have Started working on adding in the gun to the circuit and product, however I have found that the Servo Motor is too weak to efficiently move the Gun back and forth. Thus I have had to change my motor from a Servo to a 12V Geared Dc Motor ( a Windshield Wiper Motor). Explanations on how to do so will be added when final product is working properly.\u00a0", "title": "Nerf Sentry Gun", "url": "https://www.instructables.com/id/Nerf-Sentry-Gun/", "section": "technology", "steps": [{"step": 1, "steps_text": "Here is what you will need in order to make the First step of creating an Arduino Controlled Sentry Gun 1 Vex Ultrasonic Sensor 1 Servo Motor 1 LED 1 Arduino MC with Breadboard 1 470 Ohm Resistor1 10-15 Jumper Wires", "step_imgs": ["https://cdn.instructables.com/FDO/H5LP/HOUG8NLX/FDOH5LPHOUG8NLX.LARGE.jpg", "https://cdn.instructables.com/FSV/S335/HOVUB9D8/FSVS335HOVUB9D8.LARGE.jpg", "https://cdn.instructables.com/FOS/YUFE/HOUFXNXP/FOSYUFEHOUFXNXP.LARGE.jpg", "https://cdn.instructables.com/F91/PQTZ/HOUG8NLW/F91PQTZHOUG8NLW.LARGE.jpg"], "step_title": "Step 1: What You Will Need"}, {"step": 2, "steps_text": " To Start off you need to connect arduino to breadboard, to do so connect the 5V pin on the arduino to the red rail on the breadboard and the ground pin on arduino to blue rail on breadboard. Next connect your Ultrasonic Sensor, Servo Motor and LED to the Arduino The Servo motor has a 3 pin connector that connects to the breadboard. the white wire pin connects to any of the PWM digital pins on the arduino ( I used pin 9 ). The red wire pin connects to 5V the red rail on bread board and the black wire connects to ground. The Vex ultrasonic Sensor has two 3 pin connections an INPUT signal and an OUTPUT signal. Both of these connections wire up identically to the servo motor, except the white wire pin can connect to any unused digital pins. Just remember which pin is the Input signal and which one is the OUTPUT signal. \u00a0I used pin 7 as OUTPUT and Pin 12 as INPUT. The LED connects to Ground on one side and any digital pin on the other. Use a 470Ohm resistor to connect led to the digital pin. Circuit Diagram is Attached for your convenience", "step_imgs": ["https://cdn.instructables.com/F9W/I02Y/HOUG6C8P/F9WI02YHOUG6C8P.LARGE.jpg"], "step_title": "Step 2: Circuitry"}, {"step": 3, "steps_text": "Now all you need to do is write the code to make all of these different components work together. First you begin with the Servo Sweep code from the Arduino Playground, which allows the servo to continually sweep in the way\u00a0 then you create a subroutine that finds the time it takes for an ultrasonic signal to be sent out and return to the input side of the sensor. Then it sets this value to a variable here is the example code\u00a0 \u00a0of how to do it digitalWrite(Trig_pin, LOW);\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(2); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(5); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW); \u00a0\u00a0\u00a0\u00a0\u00a0 duration = pulseIn(Echo_pin,HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.println(duration, DEC);\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(50); Then within the for loops of the sweep code create a while loop. that says when then\u00a0duration\u00a0value is below a certain number the servo pauses, LED Turns on, and you check the sensor value again.\u00a0 Completely commented Code of my project is attached /* Sentry Gun An Ultrasonic Sensor is continually scanning to find the distance to the nearest object based on this value the Servo motor stops(gun stops sweeping) and LED turns on, then checks sensor value again Circuit: Servo Motor is connected to Digital Pin 9 and Power Ground LED is connected to digital pin 13 Input of Ultrasonic sensor is connected to pin 12 Output is connected to digital pin 7; Created November 2013 by Krishna Peri modified December 2013 by KRishna Peri */ #include <Servo.h> #include <SoftwareSerial.h> //const int Trig_pin =\u00a0 7;\u00a0\u00a0 // Triggers Pulsoe for\u00a0 Ultrasonic Sensor const int Echo_pin= 12; // Recevies Echo for\u00a0 Ultrasonic Sensor int ledpin = 13; // led pin command pin //long duration; // Time it takes for pulse to bounce back to RIGHT Ultrasonic Sensor unsigned int duration = 1; // distance value for ultrasonic Servo motor;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Servo motor that controls int pos = 0;\u00a0\u00a0\u00a0 // variable to store the servo position int Dcmotor = 10; // does nothing right now void setup() { \u00a0 Serial.begin(9600);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set up Serial library at 9600 bps \u00a0 motor.attach(9);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Servo motor is attached to pin 9 \u00a0 // initialize the pulse pin as output: \u00a0 pinMode(Trig_pin, OUTPUT);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 // initialize the echo_pin pin as an input: \u00a0 pinMode(Echo_pin, INPUT); \u00a0 pinMode(ledpin,OUTPUT); \u00a0 pinMode(Dcmotor,OUTPUT); } void loop() \u00a0 {\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 for(pos = 0; pos < 180; pos += 2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // runs servo in steps of 5 from 0 to 180\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 { \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 motor.write(pos);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(15);\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor (); while (duration >10 && duration<400) {\u00a0 // if sensor detects something to close \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(30); //pauses servo \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(ledpin,HIGH);\u00a0 // turns on led \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor();\u00a0\u00a0 // checks if object is still to close \u00a0\u00a0\u00a0 \u00a0 } \u00a0 digitalWrite(ledpin,LOW);\u00a0 // turns off led \u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 for(pos = 180; pos>=1; pos-=2)\u00a0\u00a0 // same as previous for loop except is running in opposite direction\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 motor.write(pos);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(15); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor (); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while (duration >10 && duration<400) { \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(ledpin,HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(30); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor(); \u00a0\u00a0\u00a0 \u00a0\u00a0 } \u00a0\u00a0 digitalWrite(ledpin,LOW); \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0\u00a0 \u00a0 void Sensor() {\u00a0\u00a0\u00a0 // checks distance from sensor to nearest object straight ahead \u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW);\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(2); // delays \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, HIGH);\u00a0 //starts signal \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(5); // delay \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW); //stops signal \u00a0\u00a0\u00a0\u00a0\u00a0 duration = pulseIn(Echo_pin,HIGH);\u00a0 // checks what the value is \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.println(duration, DEC);\u00a0\u00a0 //prints out value \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(50);\u00a0 // delays \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }", "step_imgs": [], "step_title": "Step 3: The Code!!"}, {"step": 4, "steps_text": "The Final Product should Function as Shown in the Video Below!!", "step_imgs": ["/assets/img/pixel.png"], "step_title": "Step 4: Final Product"}], "channel": "Arduino"}, {"category": "technology", "description": "I started out with the goal of using a semi-automatic nerf gun to create a sentry gun. The idea was that if someone walks in front of the gun and is within a certain distance they would be pelted by nerf bullets. \u00a0This Idea came out of a game of Humans Vs. Zombies, I thought that it would be a lot easier if i had one of my guns programmed to shoot if someone was too close to a certain building. Thus I have started working on building a Nerf Sentry Gun. Round 1: Rotating Movement and LED On/OFF I started out by deciding to create the sweeping motion of the gun and then use a light turning on and off to mimic when the gun would be on/off (firing and not firing). \u00a0I used a Vex Ultrasonic Sensor to determine distance from gun to nearest object and I used a servo motor to control the motion of the gun.\u00a0 Round 2: Adding in Gun and having to Change Motion Controller I have Started working on adding in the gun to the circuit and product, however I have found that the Servo Motor is too weak to efficiently move the Gun back and forth. Thus I have had to change my motor from a Servo to a 12V Geared Dc Motor ( a Windshield Wiper Motor). Explanations on how to do so will be added when final product is working properly.\u00a0", "title": "Nerf Sentry Gun", "url": "https://www.instructables.com/id/Nerf-Sentry-Gun/", "section": "technology", "steps": [{"step": 1, "steps_text": "Here is what you will need in order to make the First step of creating an Arduino Controlled Sentry Gun 1 Vex Ultrasonic Sensor 1 Servo Motor 1 LED 1 Arduino MC with Breadboard 1 470 Ohm Resistor1 10-15 Jumper Wires", "step_imgs": ["https://cdn.instructables.com/FDO/H5LP/HOUG8NLX/FDOH5LPHOUG8NLX.LARGE.jpg", "https://cdn.instructables.com/FSV/S335/HOVUB9D8/FSVS335HOVUB9D8.LARGE.jpg", "https://cdn.instructables.com/FOS/YUFE/HOUFXNXP/FOSYUFEHOUFXNXP.LARGE.jpg", "https://cdn.instructables.com/F91/PQTZ/HOUG8NLW/F91PQTZHOUG8NLW.LARGE.jpg"], "step_title": "Step 1: What You Will Need"}, {"step": 2, "steps_text": " To Start off you need to connect arduino to breadboard, to do so connect the 5V pin on the arduino to the red rail on the breadboard and the ground pin on arduino to blue rail on breadboard. Next connect your Ultrasonic Sensor, Servo Motor and LED to the Arduino The Servo motor has a 3 pin connector that connects to the breadboard. the white wire pin connects to any of the PWM digital pins on the arduino ( I used pin 9 ). The red wire pin connects to 5V the red rail on bread board and the black wire connects to ground. The Vex ultrasonic Sensor has two 3 pin connections an INPUT signal and an OUTPUT signal. Both of these connections wire up identically to the servo motor, except the white wire pin can connect to any unused digital pins. Just remember which pin is the Input signal and which one is the OUTPUT signal. \u00a0I used pin 7 as OUTPUT and Pin 12 as INPUT. The LED connects to Ground on one side and any digital pin on the other. Use a 470Ohm resistor to connect led to the digital pin. Circuit Diagram is Attached for your convenience", "step_imgs": ["https://cdn.instructables.com/F9W/I02Y/HOUG6C8P/F9WI02YHOUG6C8P.LARGE.jpg"], "step_title": "Step 2: Circuitry"}, {"step": 3, "steps_text": "Now all you need to do is write the code to make all of these different components work together. First you begin with the Servo Sweep code from the Arduino Playground, which allows the servo to continually sweep in the way\u00a0 then you create a subroutine that finds the time it takes for an ultrasonic signal to be sent out and return to the input side of the sensor. Then it sets this value to a variable here is the example code\u00a0 \u00a0of how to do it digitalWrite(Trig_pin, LOW);\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(2); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(5); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW); \u00a0\u00a0\u00a0\u00a0\u00a0 duration = pulseIn(Echo_pin,HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.println(duration, DEC);\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(50); Then within the for loops of the sweep code create a while loop. that says when then\u00a0duration\u00a0value is below a certain number the servo pauses, LED Turns on, and you check the sensor value again.\u00a0 Completely commented Code of my project is attached /* Sentry Gun An Ultrasonic Sensor is continually scanning to find the distance to the nearest object based on this value the Servo motor stops(gun stops sweeping) and LED turns on, then checks sensor value again Circuit: Servo Motor is connected to Digital Pin 9 and Power Ground LED is connected to digital pin 13 Input of Ultrasonic sensor is connected to pin 12 Output is connected to digital pin 7; Created November 2013 by Krishna Peri modified December 2013 by KRishna Peri */ #include <Servo.h> #include <SoftwareSerial.h> //const int Trig_pin =\u00a0 7;\u00a0\u00a0 // Triggers Pulsoe for\u00a0 Ultrasonic Sensor const int Echo_pin= 12; // Recevies Echo for\u00a0 Ultrasonic Sensor int ledpin = 13; // led pin command pin //long duration; // Time it takes for pulse to bounce back to RIGHT Ultrasonic Sensor unsigned int duration = 1; // distance value for ultrasonic Servo motor;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Servo motor that controls int pos = 0;\u00a0\u00a0\u00a0 // variable to store the servo position int Dcmotor = 10; // does nothing right now void setup() { \u00a0 Serial.begin(9600);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set up Serial library at 9600 bps \u00a0 motor.attach(9);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Servo motor is attached to pin 9 \u00a0 // initialize the pulse pin as output: \u00a0 pinMode(Trig_pin, OUTPUT);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 // initialize the echo_pin pin as an input: \u00a0 pinMode(Echo_pin, INPUT); \u00a0 pinMode(ledpin,OUTPUT); \u00a0 pinMode(Dcmotor,OUTPUT); } void loop() \u00a0 {\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 for(pos = 0; pos < 180; pos += 2)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // runs servo in steps of 5 from 0 to 180\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 { \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 motor.write(pos);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(15);\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor (); while (duration >10 && duration<400) {\u00a0 // if sensor detects something to close \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(30); //pauses servo \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(ledpin,HIGH);\u00a0 // turns on led \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor();\u00a0\u00a0 // checks if object is still to close \u00a0\u00a0\u00a0 \u00a0 } \u00a0 digitalWrite(ledpin,LOW);\u00a0 // turns off led \u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0 for(pos = 180; pos>=1; pos-=2)\u00a0\u00a0 // same as previous for loop except is running in opposite direction\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 {\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 motor.write(pos);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(15); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor (); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 while (duration >10 && duration<400) { \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(ledpin,HIGH); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(30); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sensor(); \u00a0\u00a0\u00a0 \u00a0\u00a0 } \u00a0\u00a0 digitalWrite(ledpin,LOW); \u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0\u00a0\u00a0\u00a0 } \u00a0\u00a0\u00a0 \u00a0 void Sensor() {\u00a0\u00a0\u00a0 // checks distance from sensor to nearest object straight ahead \u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW);\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(2); // delays \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, HIGH);\u00a0 //starts signal \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delayMicroseconds(5); // delay \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 digitalWrite(Trig_pin, LOW); //stops signal \u00a0\u00a0\u00a0\u00a0\u00a0 duration = pulseIn(Echo_pin,HIGH);\u00a0 // checks what the value is \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Serial.println(duration, DEC);\u00a0\u00a0 //prints out value \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 delay(50);\u00a0 // delays \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }", "step_imgs": [], "step_title": "Step 3: The Code!!"}, {"step": 4, "steps_text": "The Final Product should Function as Shown in the Video Below!!", "step_imgs": ["/assets/img/pixel.png"], "step_title": "Step 4: Final Product"}], "channel": "Arduino"}, {"category": "technology", "description": "AbstractThe LM35 is a precision integrated-circuit temperature sensor, which is connected to Arduino and measures the temperature in Celsius format. The program converts the reading into either Fahrenheit, or Kelvin or Rankine, accordance with the user selection and display it on LCD screen.Parts and componentsArduino Uno board 16x2 LCD 1 K ohm potentiometer LM35 Push Button 10K resistor = 2 Nos", "title": "Arduino and LM35 Temperature Measurement", "url": "https://www.instructables.com/id/Arduino-and-LM35-Temperature-Measurement/", "section": "technology", "steps": [{"step": 1, "steps_text": "The 16x2 is very common type LCD, with two rows, and each row displays 16 characters of      either 5x7 or 5x8 dot matrix characters.The LCD is available      in a 16 pin package. It consists of back light and contrast adjustment      function and each dot matrix has 5\u00d78 dot resolution.  The 16x2 LCD display is      connected to the Arduino (2,3,4,5,6,7) digital IO pins, where LCD operates      at 4 bit data mode.   If the display is not      visible, adjust the Contrast pot (1K), to make it visible.The LM35 is connected to the A0, analog input pin.  The LM35 is a precision integrated-circuit      temperature sensor, whose output voltage is linearly proportional to the      Celsius (Centigrade) temperature.  The LM35 does not require any      external calibration or trimming to provide typical accuracies of \u00b11\u20444\u02daC      at room temperature and \u00b13\u20444\u02daC over a full \u221255 to +150\u02daC temperature      range.  The LM35 has linear scale factor      that is + 10.0 mV/\u02daC.  The LM35 is rated to operate over a      \u221255\u02da to +150\u02daC temperature range.  It can be used with single power      supply, operates from 4 to 30 volts. As it draws only 60 \u00b5A from its      supply and it has very low self-heating, less than 0.1\u02daC in still air.  A push button is connected to      digital IO pin 8. Which is used to select and display the measured temperature at      Celsius, Fahrenheit, Kelvin and Rankine scales.  The conversion formula for Celsius      to other scale are given below.Fahrenheit:- T(\u00b0F) = T(\u00b0C) \u00d7 9/5 +32 Kelvin:- T(K) = T(\u00b0C) + 273.15Rankine:- T(\u00b0R) = (T(\u00b0C) + 273.15)      \u00d7 9/5", "step_imgs": ["https://cdn.instructables.com/FYZ/C05I/IQCKFZXM/FYZC05IIQCKFZXM.LARGE.jpg"], "step_title": "Step 1: Schematic"}, {"step": 2, "steps_text": "The Arduino LiquidCrystal library is used for displaying the measured temperature. The push button switch is used for      selecting the temperature scale from Celsius to Fahrenheit or Kelvin or      Rankine.  The 1.1V internal reference is chosen      for the ADC. Hence  the software      will measure and display the values between 0 \u00b0C to 110\u00b0C, only.  10 bit ADC reading is mapped to      1100 mV, which is the vref mille volt./* Demonstrates the use ADC and 16x2 LCD display The Arduino circuit connection for LCD:\n * LCD RS pin to digital pin 7\n * LCD Enable pin to digital pin 6\n * LCD D4 pin digital pin 5\n * LCD D5 pin to digital pin 4\n * LCD D6 pin to digital pin 3\n * LCD D7 pin to digital pin 2\n *\n *  LM35 is connected with A0 ADC pin\n * Push button is connected with D8 analog pin Name:- M.Pugazhendi\n Date:-  08thJul2016\n Version:- V0.1\n e-mail:- muthuswamy.pugazhendi@gmail.com\n */// include the library code:\n#include  <LiquidCrystal.h>int analogPin1 = 0;     // LM35 temperature sensor connected to analog pin 2\nint val = 0;           // variable to store the value read//initialize the library with the numbers of the interface pins\nLiquidCrystal lcd(7,6,5,4,3,2);// this constant won't change:\nconst int  buttonPin = 8;    // the pin that the pushbutton is attached to// Variables will change:\nint buttonPushCounter = 0;   // counter for the number of button presses\nint buttonState = 0;         // current state of the button\nint lastButtonState = 0;     // previous state of the buttonvoid setup() \n{\n  // initialize the button pin as a input:\n  pinMode(buttonPin, INPUT);  // set up the LCD's number of columns and rows:\n  lcd.begin(16, 2);  analogReference(INTERNAL);\n  \n  // Print a message to the LCD\n  lcd.print(\"Start\");\n \n}void loop() \n{  // read the pushbutton input pin:\n  buttonState = digitalRead(buttonPin);  // compare the buttonState to its previous state\n  if (buttonState != lastButtonState) \n  {\n    // if the state has changed, increment the counter\n    if (buttonState == HIGH) \n    {\n      // if the current state is HIGH then the button\n      // wend from off to on:\n      buttonPushCounter++;\n      \n      // (note: line 0 is the first row, since counting begins with 0):\n      lcd.setCursor(0, 0);\n      lcd.print(\"                \"); //Print blanks to clear the row\n      lcd.setCursor(0, 0);\n      switch(buttonPushCounter)\n      {\n        case 1:\n          lcd.print(\"Celsius\");\n          break;\n        case 2:\n          lcd.print(\"Farenheit\");\n          break;\n        case 3:\n          lcd.print(\"Kelvin\");\n          break;\n        case 4:\n          lcd.print(\"Rankine\");\n          break;                              \n        default:\n         buttonPushCounter = 1;\n         lcd.print(\"Celsius\");\n        break;      \n      }            \n    } \n    \n    // Delay a little bit to avoid bouncing\n    delay(50);\n  }\n  \n  // save the current state as the last state,\n  //for next time through the loop\n  lastButtonState = buttonState;  // Resets the buttonPushCounter to zero once every four button pushes.    \n  //if (buttonPushCounter  == 5) \n  //{\n  //  buttonPushCounter = 0;\n  //}  // set the cursor to column 0, line 1\n  // (note: line 1 is the second row, since counting begins with 0):\n  lcd.setCursor(12, 1);\n  lcd.print(\"     \"); //Print blanks to clear the row\n  lcd.setCursor(0, 1);\n  \n  val = analogRead(analogPin1);    // read the LM35 sensor input pin  float converted = fmap(val, 0, 1023, 0.0, 110.0);\n \n  \n      switch(buttonPushCounter)\n      {\n        case 1:\n           //Celsius\n            lcd.print(\"TEMP = \");\n            lcd.print(converted);             // ADC value\n            lcd.print(\"\\337C\");\n          break;\n        case 2:\n            //Fahrenheit\n            //T(\u00b0F) = T(\u00b0C) \u00d7 9/5 + 32\n            converted = ( converted * 1.8 ) + 32;          \n            lcd.print(\"TEMP = \");\n            lcd.print(converted);             // ADC value\n            lcd.print(\"\\337F\");\n          break;\n        case 3:\n          //Kelvin\n          //T(K) = T(\u00b0C) + 273.15          \n          converted = converted + 273.15;          \n          lcd.print(\"TEMP = \");\n          lcd.print(converted);             // ADC value\n          lcd.print(\"K\");\n          break;\n        case 4:\n          //Rankine\n          //T(\u00b0R) = (T(\u00b0C) + 273.15) \u00d7 9/5          \n          converted = converted + 273.15;\n          converted = (converted * 1.8);          \n          lcd.print(\"TEMP = \");\n          lcd.print(converted);             // ADC value\n          lcd.print(\"\\337R\");\n          break;                              \n        default:\n         break;      \n      }  //One second delay between readings                  \n  delay(1000);       \n}//Float interpolation function, for mapping the ADC reading\nfloat fmap(float x, float in_min, float in_max, float out_min, float out_max)\n{\n return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}", "step_imgs": [], "step_title": "Step 2: Software"}, {"step": 3, "steps_text": "The project is successfully simulate by using the Proteus.  The converted temperature, and its      LCD screen is given below.", "step_imgs": ["https://cdn.instructables.com/FEM/P36U/IQCKG04H/FEMP36UIQCKG04H.LARGE.jpg"], "step_title": "Step 3: Conclusion"}], "channel": "Electronics"}, {"category": "technology", "description": "\n          Did you know that many Arduinos and ATtiny chips have a built-in thermometer? The temperature is not calibrated, so you must take a couple of readings to characterize it. I found the original idea in the article - Secret Thermometer . I have added support for the Leonardo as well as several ATtinys, and provided a function for characterizing it.Reading the Temperature Sensor\nHere is the code for reading the raw data:\nlong readTemp() { \n  // Read temperature sensor against 1.1V reference\n  #if defined(__AVR_ATmega32U4__)\n    ADMUX = _BV(REFS1) | _BV(REFS0) | _BV(MUX2) | _BV(MUX1) | _BV(MUX0);\n    ADCSRB = _BV(MUX5); // the MUX5 bit is in the ADCSRB register\n  #elif defined (__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n    ADMUX = _BV(REFS1) | _BV(MUX5) | _BV(MUX1);\n  #elif defined (__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n    ADMUX = _BV(REFS1) | _BV(MUX3) | _BV(MUX2) | _BV(MUX1) | _BV(MUX0);\n  #else\n    ADMUX = _BV(REFS1) | _BV(REFS0) | _BV(MUX3);\n  #endif\n\n  delay(2); // Wait for ADMUX setting to settle\n  ADCSRA |= _BV(ADSC); // Start conversion\n  while (bit_is_set(ADCSRA,ADSC)); // measuring\n\n  uint8_t low = ADCL; // must read ADCL first - it then locks ADCH\n  uint8_t high = ADCH; // unlocks both\n  long result = (high << 8) | low; // combine the two\n\n  return result;\n}Massaging the Raw Data\nOnce you have the raw data, you can calibrate it by measuring two known temperatures and scaling as appropriate. Here is a simple little function to perform that normalization:\nfloat normalizeTemperature(long rawData) { \n  // replace these constants with your 2 data points\n  // these are sample values that will get you in the ballpark (in degrees C)\n  float temp1 = 0;\n  long data1 = 274;\n  float temp2 = 25.0;\n  long data2 = 304;\n \n  // calculate the scale factor\n  float scaleFactor = (temp2 - temp1) / (data2 - data1);\n\n  // now calculate the temperature\n  float temp = scaleFactor * (rawData - data1) + temp1;\n\n  return temp;\n}Calibrating\nTo get the four constants needed, simply run the sketch/program calling the readTemp() function at room temperature. Note the temperature and the raw data point. Enter these values for either set of data points. Next, either put your Arduino in the fridge or the oven (at a really low setting) and measure your second two data points. Replace the four constants with your data. It does not matter which order you list them. You can also enter your data in either Celsius or Fahrenheit. The linear calculation is independent of units as long as you are consistent in which system you use.\nI have tested this code on the Leonardo, but it should also work on the Uno, and ATtinyx4 & ATtinyx5 series chips as well. If you like this trick, there is a companion instructable/article on measuring Vcc using the internal 1.1 volt reference that may be of interest as well.\n        ", "title": "Hidden Arduino Thermometer", "url": "https://www.instructables.com/id/Hidden-Arduino-Thermometer/", "section": "technology", "steps": [], "channel": "Arduino"}, {"category": "technology", "description": "\n          Did you know that many Arduinos and ATtiny chips have a built-in thermometer? The temperature is not calibrated, so you must take a couple of readings to characterize it. I found the original idea in the article - Secret Thermometer . I have added support for the Leonardo as well as several ATtinys, and provided a function for characterizing it.Reading the Temperature Sensor\nHere is the code for reading the raw data:\nlong readTemp() { \n  // Read temperature sensor against 1.1V reference\n  #if defined(__AVR_ATmega32U4__)\n    ADMUX = _BV(REFS1) | _BV(REFS0) | _BV(MUX2) | _BV(MUX1) | _BV(MUX0);\n    ADCSRB = _BV(MUX5); // the MUX5 bit is in the ADCSRB register\n  #elif defined (__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n    ADMUX = _BV(REFS1) | _BV(MUX5) | _BV(MUX1);\n  #elif defined (__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n    ADMUX = _BV(REFS1) | _BV(MUX3) | _BV(MUX2) | _BV(MUX1) | _BV(MUX0);\n  #else\n    ADMUX = _BV(REFS1) | _BV(REFS0) | _BV(MUX3);\n  #endif\n\n  delay(2); // Wait for ADMUX setting to settle\n  ADCSRA |= _BV(ADSC); // Start conversion\n  while (bit_is_set(ADCSRA,ADSC)); // measuring\n\n  uint8_t low = ADCL; // must read ADCL first - it then locks ADCH\n  uint8_t high = ADCH; // unlocks both\n  long result = (high << 8) | low; // combine the two\n\n  return result;\n}Massaging the Raw Data\nOnce you have the raw data, you can calibrate it by measuring two known temperatures and scaling as appropriate. Here is a simple little function to perform that normalization:\nfloat normalizeTemperature(long rawData) { \n  // replace these constants with your 2 data points\n  // these are sample values that will get you in the ballpark (in degrees C)\n  float temp1 = 0;\n  long data1 = 274;\n  float temp2 = 25.0;\n  long data2 = 304;\n \n  // calculate the scale factor\n  float scaleFactor = (temp2 - temp1) / (data2 - data1);\n\n  // now calculate the temperature\n  float temp = scaleFactor * (rawData - data1) + temp1;\n\n  return temp;\n}Calibrating\nTo get the four constants needed, simply run the sketch/program calling the readTemp() function at room temperature. Note the temperature and the raw data point. Enter these values for either set of data points. Next, either put your Arduino in the fridge or the oven (at a really low setting) and measure your second two data points. Replace the four constants with your data. It does not matter which order you list them. You can also enter your data in either Celsius or Fahrenheit. The linear calculation is independent of units as long as you are consistent in which system you use.\nI have tested this code on the Leonardo, but it should also work on the Uno, and ATtinyx4 & ATtinyx5 series chips as well. If you like this trick, there is a companion instructable/article on measuring Vcc using the internal 1.1 volt reference that may be of interest as well.\n        ", "title": "Hidden Arduino Thermometer", "url": "https://www.instructables.com/id/Hidden-Arduino-Thermometer/", "section": "technology", "steps": [], "channel": "Arduino"}, {"category": "technology", "description": "\n          Did you know that many Arduinos and ATtiny chips have a built-in thermometer? The temperature is not calibrated, so you must take a couple of readings to characterize it. I found the original idea in the article - Secret Thermometer . I have added support for the Leonardo as well as several ATtinys, and provided a function for characterizing it.Reading the Temperature Sensor\nHere is the code for reading the raw data:\nlong readTemp() { \n  // Read temperature sensor against 1.1V reference\n  #if defined(__AVR_ATmega32U4__)\n    ADMUX = _BV(REFS1) | _BV(REFS0) | _BV(MUX2) | _BV(MUX1) | _BV(MUX0);\n    ADCSRB = _BV(MUX5); // the MUX5 bit is in the ADCSRB register\n  #elif defined (__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n    ADMUX = _BV(REFS1) | _BV(MUX5) | _BV(MUX1);\n  #elif defined (__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n    ADMUX = _BV(REFS1) | _BV(MUX3) | _BV(MUX2) | _BV(MUX1) | _BV(MUX0);\n  #else\n    ADMUX = _BV(REFS1) | _BV(REFS0) | _BV(MUX3);\n  #endif\n\n  delay(2); // Wait for ADMUX setting to settle\n  ADCSRA |= _BV(ADSC); // Start conversion\n  while (bit_is_set(ADCSRA,ADSC)); // measuring\n\n  uint8_t low = ADCL; // must read ADCL first - it then locks ADCH\n  uint8_t high = ADCH; // unlocks both\n  long result = (high << 8) | low; // combine the two\n\n  return result;\n}Massaging the Raw Data\nOnce you have the raw data, you can calibrate it by measuring two known temperatures and scaling as appropriate. Here is a simple little function to perform that normalization:\nfloat normalizeTemperature(long rawData) { \n  // replace these constants with your 2 data points\n  // these are sample values that will get you in the ballpark (in degrees C)\n  float temp1 = 0;\n  long data1 = 274;\n  float temp2 = 25.0;\n  long data2 = 304;\n \n  // calculate the scale factor\n  float scaleFactor = (temp2 - temp1) / (data2 - data1);\n\n  // now calculate the temperature\n  float temp = scaleFactor * (rawData - data1) + temp1;\n\n  return temp;\n}Calibrating\nTo get the four constants needed, simply run the sketch/program calling the readTemp() function at room temperature. Note the temperature and the raw data point. Enter these values for either set of data points. Next, either put your Arduino in the fridge or the oven (at a really low setting) and measure your second two data points. Replace the four constants with your data. It does not matter which order you list them. You can also enter your data in either Celsius or Fahrenheit. The linear calculation is independent of units as long as you are consistent in which system you use.\nI have tested this code on the Leonardo, but it should also work on the Uno, and ATtinyx4 & ATtinyx5 series chips as well. If you like this trick, there is a companion instructable/article on measuring Vcc using the internal 1.1 volt reference that may be of interest as well.\n        ", "title": "Hidden Arduino Thermometer", "url": "https://www.instructables.com/id/Hidden-Arduino-Thermometer/", "section": "technology", "steps": [], "channel": "Arduino"}, {"category": "technology", "description": "\n          Did you know that many Arduinos and ATtiny chips have a built-in thermometer? The temperature is not calibrated, so you must take a couple of readings to characterize it. I found the original idea in the article - Secret Thermometer . I have added support for the Leonardo as well as several ATtinys, and provided a function for characterizing it.Reading the Temperature Sensor\nHere is the code for reading the raw data:\nlong readTemp() { \n  // Read temperature sensor against 1.1V reference\n  #if defined(__AVR_ATmega32U4__)\n    ADMUX = _BV(REFS1) | _BV(REFS0) | _BV(MUX2) | _BV(MUX1) | _BV(MUX0);\n    ADCSRB = _BV(MUX5); // the MUX5 bit is in the ADCSRB register\n  #elif defined (__AVR_ATtiny24__) || defined(__AVR_ATtiny44__) || defined(__AVR_ATtiny84__)\n    ADMUX = _BV(REFS1) | _BV(MUX5) | _BV(MUX1);\n  #elif defined (__AVR_ATtiny25__) || defined(__AVR_ATtiny45__) || defined(__AVR_ATtiny85__)\n    ADMUX = _BV(REFS1) | _BV(MUX3) | _BV(MUX2) | _BV(MUX1) | _BV(MUX0);\n  #else\n    ADMUX = _BV(REFS1) | _BV(REFS0) | _BV(MUX3);\n  #endif\n\n  delay(2); // Wait for ADMUX setting to settle\n  ADCSRA |= _BV(ADSC); // Start conversion\n  while (bit_is_set(ADCSRA,ADSC)); // measuring\n\n  uint8_t low = ADCL; // must read ADCL first - it then locks ADCH\n  uint8_t high = ADCH; // unlocks both\n  long result = (high << 8) | low; // combine the two\n\n  return result;\n}Massaging the Raw Data\nOnce you have the raw data, you can calibrate it by measuring two known temperatures and scaling as appropriate. Here is a simple little function to perform that normalization:\nfloat normalizeTemperature(long rawData) { \n  // replace these constants with your 2 data points\n  // these are sample values that will get you in the ballpark (in degrees C)\n  float temp1 = 0;\n  long data1 = 274;\n  float temp2 = 25.0;\n  long data2 = 304;\n \n  // calculate the scale factor\n  float scaleFactor = (temp2 - temp1) / (data2 - data1);\n\n  // now calculate the temperature\n  float temp = scaleFactor * (rawData - data1) + temp1;\n\n  return temp;\n}Calibrating\nTo get the four constants needed, simply run the sketch/program calling the readTemp() function at room temperature. Note the temperature and the raw data point. Enter these values for either set of data points. Next, either put your Arduino in the fridge or the oven (at a really low setting) and measure your second two data points. Replace the four constants with your data. It does not matter which order you list them. You can also enter your data in either Celsius or Fahrenheit. The linear calculation is independent of units as long as you are consistent in which system you use.\nI have tested this code on the Leonardo, but it should also work on the Uno, and ATtinyx4 & ATtinyx5 series chips as well. If you like this trick, there is a companion instructable/article on measuring Vcc using the internal 1.1 volt reference that may be of interest as well.\n        ", "title": "Hidden Arduino Thermometer", "url": "https://www.instructables.com/id/Hidden-Arduino-Thermometer/", "section": "technology", "steps": [], "channel": "Arduino"}, {"category": "technology", "description": "IntroductionI did not set out to write this library. It \"happened\" as a side-effect of a project I started that uses a BMP280. That project is not yet finished, but I think the library is ready to share with others. Subsequently I had a need to use a BME280, which adds humidity measurement to the pressure and temperature capability of the BMP280. The BME280 is \"backward-compatible\" with the BMP280 - that is, all the registers and the steps needed to read pressure and temperature from the BME280 are the same as those used for the BMP280. There are additional registers and steps needed to read humidity, applicable to the BME280 only. This raises the question, one library for both, or two separate libraries.  The hardware for the two device types is fully interchangeable. Even many of the modules being sold (for example on Ebay and AliExpress) are labelled BME/P280. To find out which type it is, you have to look at the (miniscule) writing on the sensor itself, or test the device ID byte.  I decided to go for a single library. It seems to have worked out OK. Feedback, especially any suggestions for improvements, will be appreciated.Library features and capabilitiesA library is a piece of software that provides an Application Programming Interface (API) for a programmer to exercise the capabilities of the device, without necessarily having to deal with all the fine-grain details. Desirably, the API should be easy for a beginner with simple requirements to get started, while providing for full exploitation of the device capabilities. Desirably the library should follow any specific guidelines from the device manufacturer, as well as general software good practice. I have endeavoured to achieve all of these. When starting out with the BMP280, I found 3 different libraries for it: Adafruit_BMP280; Seeed_BMP280; and one called BMP280 from the device manufacturer. Neither Adafruit nor Seeed provided extended capabilities, although they worked well and were easy to use for basic applications. I could not figure our how to use the one produced by the device manufacturer (Bosch Sensortec). This may be my deficiency, rather than theirs. However the library was much more complicated than the other two, I could not find any instructions or examples of use (I subsequently found examples were in the file \"bmp280_support.c\", however these were not particularly helpful to me).As a result of these factors, I decided to write my own library for the BMP280.Looking into the library situation for the BME280, I found separate libraries Adafruit_BME280, Seed_BME280 and another one BME280_MOD-1022 written by Embedded Adventures. None of them combined the functions for BMP280 in a library capable of using the BME280. None of them explicitly supported the capability of the devices to store a few bits of data while the device and its controlling microprocessor are sleeping (this capability is evident in the datasheet and supported in the library I have written and described here). A combined library should have support for all the capabilities of the BME280, but when used with a BMP280 it should not impose any overhead from the unused functions. Benefits of a combined library include fewer library files to manage, easy mix-and-match of different devices in the same project, and simplified changes for maintenance or upgrades which only have to be done in one place rather than two. These are probably all quite minor, even insignificant, but ...Device capabilities The BMP280 and BME280 are surface-mount devices about 5mm square and 1 mm high. There are 8 interface pads, including 2 separate power input pads and two Ground pads. They are available on eBay as a module with either 4 or 6 pins brought out.  The 4-pin module has a fixed I2C address and cannot be configured to use the SPI protocol. The 6-pin module or the bare device can be used with either I2C or SPI protocols. In I2C mode it can have two different addresses, achieved by connecting the SDO pin either to Ground (for base address = 0x76) or to Vdd (for base address +1 = 0x77). In SPI mode it has the usual arrangement of 1 clock, 2 data (one for each direction) and a device select pin (CS).The library I wrote and describe here only supports I2C. The Adafruit_BMP280 and the BME_MOD-1022 libraries have support for both i2C and SPI.The library can be downloaded here:https://github.com/farmerkeith/BMP280-library", "title": "Library for BMP280 and BME280", "url": "https://www.instructables.com/id/Library-for-BMP280/", "section": "technology", "steps": [{"step": 1, "steps_text": "Before the library can be useful it is necessary to connect a microcontroller to the BMP280 (or to two of them if you wish). I used a WeMos D1 mini pro, so I will show its connections. Other microcontrollers will be similar, you just need to get the SDA and SCL pins connected correctly. In the case of the WeMos D1 mini pro, the connections are:Function         WeMos pin    BMP280 pin     Notes\nSDA               D2           SDA\nSCL               D1           SCL\nVdd               3V3          Vin          Nominal 3.3V\nGround                         GND\nAddress control                SDO          Ground or Vdd \nI2C select                     CSB          Vdd (GND selects SPI)Note that the SDO pin on some of the MP280 modules is labelled SDD, and the Vdd pin may be labelled VCC. Note: SDA and SCL lines should have pull-up resistors between the line and the Vin pin. Typically a value of 4.7K should be OK. Some BMP280 and BME280 modules have 10K pull-up resistors included in the module (which is not good practice, since putting multiple devices on the I2C bus may load it excessively). However using 2 BME/P280 modules each with a 10K resistor should not be a problem in practice so long as there are not too many other devices on the same bus also with pull-up resistors.Once you have the hardware connected, you can easily check whether your device is a BMP280 or a BME280 by running the sketch I2CScan_ID which you can find here: https://github.com/farmerkeith/I2CScannerYou can also check whether you have a BMP280 or BME280 by looking at the device itself. I found it necessary to use a digital microscope to do this, but if your eyesight is very good you may be able to do it without any aids. There are two lines of printing on the casing of the device. The key is the first letter on the second line, which in the case of BMP280 devices is a \"K\" and in the case of BME280 devices is a \"U\". ", "step_imgs": ["https://cdn.instructables.com/FL3/2045/J8AGUVY1/FL32045J8AGUVY1.LARGE.jpg"], "step_title": "Step 1: Setting Up the Hardware"}, {"step": 2, "steps_text": "Including the library in a sketchThe library is included in a sketch in the standard way using the statement#include \"farmerkeith_BMP280.h\"This statement needs to be included in the early part of the sketch prior to the start of the setup() function.Creating a BME or BMP software objectThere are 3 levels for creating the BMP280 software object. The simplest is justbme280 objectName; <br>or\nbmp280 objectName; for example, BMP280 bmp0;This creates a software object with the default address of 0x76 (ie for SDO connected to ground).The next level for creating a BME280 or BMP280 software object has a parameter of either 0 or 1, as follows:bme280 objectNameA(0); \nbmp280 objectNameB(1);The parameter (0 or 1) is added to the I2C base address, so that two BME280 or BMP280 devices can be used on the same I2C bus (including one of each).The third level for creating a BME or BMP280 software object has two parameters. The first parameter, which is either 0 or 1, is for the address, as for the previous case. The second parameter controls debug printing. If it is set to 1, each transaction with the software object results in Serial.print outputs that enables the programmer to see the details of the transaction. For example:bmp280 objectNameB(1,1);If the debug printing parameter is set to 0, the software object reverts to normal behaviour (no printing).This statement or statements needs to be included after the #include and before the setup() function.Initialising the BME or BMP software objectBefore being used, it is necessary to read the calibration parameters from the device, and to configure it for whatever measurement mode, oversampling, and filter settings are appropriate.For a simple, general purpose initialisation, the statement is:objectName.begin();This version of begin() reads the calibration parameters from the device and sets osrs_t=7 (16 temperature measurements), osrs_p=7 (16 pressure measurements), mode=3 (continuous, Normal), t_sb=0 (0.5 ms sleep between measurement sets), filter=0 (K=1, so no filtering) and spiw_en=0 (SPI disabled, so use I2C). In the case of the BME280, there is an extra parameter osrs_h=7 for 16 humidity measurements. There is another version of begin() that takes all six (or 7) parameters. The equivalent of the above statement isobjectName.begin(7,7,3,0,0,0); // osrs_t, osrs_p, mode, t_sb, filter, spiw_en\nor \nobjectName.begin(7,7,3,0,0,0,7); // osrs_t, osrs_p, mode, t_sb, filter, spiw_en, osrs_hThe full list of codes and their meanings is in the BME280 and BMP280 data sheet, and also in the comments in the .cpp file in the library.Simple temperature and pressure measurementTo get a temperature measurement the simplest way isdouble temperature=objectName.readTemperature (); // measure temperatureTo get a pressure measurement the simplest way isdouble pressure=objectName.readPressure (); // measure pressureTo get a humidity measurement the simplest way isdouble humidity=objectName.readHumidity (); // measure humidity (BME280 only)To get both temperature and pressure the above two statements can be used one after the other, but there is another option, which is:double temperature;\ndouble pressure=objectName.readPressure (temperature); // measure pressure and temperatureThis statement reads the data from the BME280 or BMP280 device only once, and returns both temperature and pressure. This is slightly more efficient use of the I2C bus and ensures that the two  readings correspond to the same measurement cycle. For the BME 280, a combined statement that gets all three values (humidity, temperature and pressure) is:double temperature, pressure;<br>double humidity=objectName.readHumidity (temperature, pressure); // measure humidity, pressure and temperature This  statement reads the data from the BMP280 device only once, and returns  all three values. This is slightly more efficient use of the I2C bus and  ensures that the three readings correspond to the same measurement  cycle. Note that the names of the variables can be changed to anything  the user likes, but their order is fixed - temperature comes first, and  pressure comes second.These use cases are covered in example sketches provided with the library, being basicTemperature.ino, basicPressure.ino, basicHumidity.ino, basicTemperatureAndPressure.ino and basicHumidityAndTemperatureAndPressure.ino.More sophisticated temperature and pressure measurementAlthough the above series of statements will work without problems, there are a couple of issues:the device is running continuously, and therefore is consuming power at its maximum level. If the energy is coming from a battery, it may be necessary to reduce this.        due to the power consumed, the device will experience warming, and therefore the measured temperature will be higher than the ambient temperature. I will cover this more in a later step. A result that uses less power, and gives a temperature that is closer to ambient, can be obtained by using begin() with parameters that put it to sleep (eg mode=0). For example:objectName.begin(1,1,0,0,0,0[,1]); // osrs_t, osrs_p, mode, t_sb, filter, spiw_en [,osrs_h]Then, when a measurement is wanted, wake up the device with a configuration command to registers F2 (if required) and F4 that sets the  appropriate values of osrs_h, osrs_t and osrs_p, plus mode=1 (single  shot mode). For example:[objectName.updateF2Control(1);]    // osrs_h - never needed for BMP280, \n// and not needed for BME280 if the No. of measurements is not being changed \n// from the value provided in begin().\nobjectName.updateF4Control(1,1,1); // osrs_t, osrs_p, modeHaving woken up the device, it will start measuring, but the result will not be available for some milliseconds - at least 4 ms, maybe up to 70 ms or more, depending on the number of measurements that have been specified. If the read command is sent immediately, the device will return the values from the previous measurement - which may be acceptable in some applications, but in most cases it is probably better to delay until the new measurement is available. This delay can be done in several ways. wait a fixed amount of time to cover the longest expected delay        wait an amount of time calculated from the maximum measurement time per measurement (ie 2.3ms) times the number of measurements, plus overhead, plus a margin.        wait a shorter amount of time calculated as above, but using the nominal measurement time (ie 2 ms) plus overhead, and then start checking the \"I am measuring\" bit in the status register. When the status bit reads 0 (ie, not measuring), get the temperature and pressure readings.         immediately start checking the status register, and get the temperature and pressure readings when the status bit reads 0, I will show an example of one way of doing this a bit later.Configuration register operationsTo make all this happen, we need several tools that I have not yet introduced. They are:byte readRegister(reg) \nvoid updateRegister(reg, value)Each of these has several derived commands in the library, which make the software for specific actions a bit simpler.The example powerSaverPressureAndTemperature.ino uses method No. 3. The line of code that does the repeated checking is while (bmp0.readRegister(0xF3)>>3); // loop untl F3bit 3 ==0Note that this sketch is for an ESP8266 microcontroller. I used a WeMos D1 mini pro. The sketch will not work with  Atmega microcontrollers, which have different instructions for sleeping. This sketch exercises several other commands, so I will introduce all of them before describing that sketch in more detail. When the microcontoller is sleeping in parallel with the BMP280 sensor, the configuration of the sensor for the required measurements  can be done in the begin() command, using the 6 parameters. However if  the microcontroller is not sleeping, but the sensor is, then at the time  of measurement the sensor has to be woken up and told its measurement  configuration. This can be done directly with updateRegister(reg, value)but is a bit easier with the following three commands:updateF2Control(osrs_h); // BME280 only\nupdateF4Control(osrs_t, osrs_p, mode); \nupdateF5Config(t_sb, filter, spi3W_en);After the measurement is done, if the mode used is Single shot  (Forced mode), then the device will automatically go back to sleep.  However, if the measurement set involves multiple measurements using  continuous (Normal) mode then the BMP280 will need to be put back to  sleep. This can be done with either of the two following commands: updateF4Control16xSleep();       \nupdateF4ControlSleep(value);Both of these set the mode bits to 00 (ie sleep mode). However the first sets the osrs_t and osrs_p to 111 (ie 16 measurements) while the second one stores the low 6 bits from \"value\" into bits 7:2 of the 0xF4 register.Similarly the following statement stores the low six bits of \"value\" into bits 7:2 of the 0xF5 register.updateF5ConfigSleep(value); The use of these latter commands enable storage of 12 bits of information in the BMP280 registers F4 and F5. At least in the case of the ESP8266, when the microcontroller wakes up after a period of sleep, it starts at the beginning of the sketch with no knowledge of its state prior to the sleep command. To store knowledge of its state prior to the sleep command, data can be stored in flash memory, using either the EEPROM functions or by writing a file using SPIFFS. However flash memory has a limitation of the number of write cycles, of the order of 10,000 to 100,000. This means that if the microcontroller is going through a sleep-wake cycle every few seconds, it can exceed the allowable memory write limit in a few months. Storing a few bits of data in the BMP280 has no such limitation.The data stored in registers F4 and F5 can be recovered when the microcontroller wakes up using the commandsreadF4Sleep();\nreadF5Sleep();These functions read the corresponding register, shift the contents to remove the 2 LSBs and return the remaining 6 bits. These functions are used in the example sketch powerSaverPressureAndTemperatureESP.ino as follows:// read value of EventCounter back from bmp0\nbyte bmp0F4value= bmp0.readF4Sleep(); // 0 to 63\nbyte bmp0F5value= bmp0.readF5Sleep(); // 0 to 63\neventCounter= bmp0F5value*64+bmp0F4value; // 0 to 4095These functions read the corresponding register, shift the contents to remove the 2 LSBs and return the remaining 6 bits.  These functions are used in the example sketch powerSaverPressureAndTemperature.ino  as follows:// read value of EventCounter back from bmp1\nbyte bmp1F4value= bmp1.readF4Sleep(); // 0 to 63\nbyte bmp1F5value= bmp1.readF5Sleep(); // 0 to 63\neventCounter= bmp1F5value*64+bmp1F4value; // 0 to 4095 Raw temperature and pressure functionsThe basic readTemperature, readPressure and readHumidity functions have two components. First the raw 20-bit temperature and pressure values are  obtained from the BME/P280, or the raw 16-bit humidity value is  obtained from the BME280. Then the compensation algorithm is used to  generate the output values in degrees Celsius, hPa or %RH.The library provides separate functions for these components, so that the raw temperature, presssure and humidity data can be obtained, and  perhaps manipulated in some way. The algorithm to derive the  temperature, pressure and humidity from these raw values is also  provided. In the library these algorithms are implemented using double  length floating point arithmetic. It works well on the ESP8266 which is a  32-bit processor and uses 64 bits for \"double\" float variables. Making  these functions accessible may be useful for assessing and possibly  changing the calculation for other platforms.These functions are:readRawPressure (rawTemperature); // reads raw pressure and temperature data from BME/P280<br>readRawHumidity (rawTemperature, rawPressure); // reads raw humidity, temperature and pressure data from BME280\ncalcTemperature (rawTemperature, t_fine);\ncalcPressure (rawPressure, t_fine);\ncalcHumidity (rawHumidity, t_fine)The \"t-fine\" argument to these functions is worth a bit of explanation. Both pressure and humidity compensation algorithms include a temperature dependent component which is achieved through the t_fine variable. The calcTemperature function writes a value in t_fine based on the temperature compensation algorithm logic, which is then used as an input in both calcPressure and calcHumidity. An example of the use of these functions can be found in the example sketch rawPressureAndTemperature.ino, and also in the code for the readHumidity() function in the .cpp file of the library.Altitude and Sea Level pressureThere is a known relationship between atmospheric pressure and altitude. The weather also influences pressure. When the weather organisations publish atmospheric pressure information, they usually adjust it for altitude and so the \"synoptic chart\" shows isobars (lines of constant pressure) standardised to mean sea level. So really there are 3 values in this relationship, and knowing two of them enables derivation of the third one. The 3 values are:altitude above sea level        actual air pressure at that altitude        equivalent air pressure at sea level (more strictly, mean sea level, because instantaneous sea level constantly changes)This library provides two functions for this relationship, as follows:calcAltitude (pressure, seaLevelhPa);\ncalcNormalisedPressure (pressure, altitude);There is also a simpllified version, which assumes the standard sea level pressure of 1013.15 hPa.calcAltitude (pressure); // standard seaLevelPressure assumed", "step_imgs": ["https://cdn.instructables.com/F6N/JZEY/J8AGUXNN/F6NJZEYJ8AGUXNN.LARGE.jpg", "https://cdn.instructables.com/FE3/MI0Z/J8AGUXOP/FE3MI0ZJ8AGUXOP.LARGE.jpg"], "step_title": "Step 2: APIs Provided by the Library "}, {"step": 3, "steps_text": "Hardware capabilitiesThe BMP280 has 2 bytes of configuration data (at register addresses 0xF4 and 0xF5) which is used to control multiple measurement and data output options. It also provides 2 bits of status information, and 24 bytes of calibration parameters which are used in converting the raw temperature and pressure values into conventional temperature and pressure units. The BME280 has additional data as follows: 1 extra byte of configuration data at register address 0xF2 used to control multiple humidity measurements;  8 extra bytes of calibration parameters used in converting the raw humidity value into relative humidity percentage. The temperature, pressure and status registers for the BME280 are the same as for the BMP280 with minor exceptions as follows: the \"ID\" bits of the BME280 are set to 0x60, so it can be distinguished from BMP280 which may be 0x56, 0x57 or 0x58  the sleep time control (t_sb) is changed so that the two long times in the BMP280 (2000 ms and 4000 ms) are replaced in the BME280 with short times of 10 ms and 20 ms. The maximum sleep time in the BME280 is 1000 ms. In the BME280 the temperature and pressure raw values are always 20 bits if filtering is applied. The use of 16 to 19 bit values is limited to cases with no filtering (ie filter=0).Temperature and pressure are each 20 bit values, which need to be converted into conventional temperature and pressure via a rather complex algorithm using 3 16 bit calibration parameters for temperature, and 9 16 bit calibration parameters plus the temperature for pressure. The granulatity of the temperature measurement is 0.0003 degrees Celsius for a least significant bit change (20 bit readout), increasing to 0.0046 degrees Celsius if the 16 bit readout is used.Humidity is a 16 bit value which needs to be converted into relative humidity via another complex algorithm using 6 calibration parameters which are a mix of 8, 12 and 16 bits.The data sheet shows the absolute accuracy of the temperature readout as +-0.5 C at 25 C and +-1 C over the range 0 to 65 C.The granularity of the pressure measurement is 0.15 Pascals (ie 0.0015 hectoPascals) at 20 bit resolution, or 2.5 Pascals at 16 bit resolution. The raw pressure value is affected by the temperature, so that around 25C, an increase in temperature of 1 degree C decreases the measured pressure by 24 Pascals. The temperature sensitivity is accounted for in the calibration algorithm, so the delivered pressure values should be accurate at different temperatures.The data sheet shows the absolute accuracy of the pressure readout as +-1 hPa for temperatures between 0 C and 65 C.The accuracy of the humidity is given in the data sheet as +-3% RH, and +-1% hysteresis.How it works The 24 bytes of temperature and pressure calibration data, and also in the case of the BME280 the 8 bytes of humidity calibration data, have to be read from the device and stored in variables. These data are individually programmed into the device in the factory, so different devices have different values - at least for some of the parameters. A BME/P280 can be in one of two states. In one state it is measuring. In the other state it is waiting (sleeping).Which state it is in can be checked by looking at bit 3 of register 0xF3.The results of the most recent measurement can be obtained at any time by reading the corresponding data value, irrespective of whether the device is sleeping or measuring. There are also two ways of operating the BME/P280. One is Continuous mode (called Normal mode in the data sheet) which repeatedly cycles between Measuring and Sleeping states. In this mode the device performs a set of measurements, then goes to sleep, then wakes up for another set of measurements, and so on. The number of individual measurements and the duration of the sleep part of the cycle can all be controlled through the configuration registers.The other way of operating the BME/P280 is Single Shot mode (called Forced mode in the data sheet). In this mode the device is woken from sleep by a command to measure, it does a set of measurements, then goes back to sleep. The number of individual measurements in the set is controlled in the configuration command that wakes up the device.In the BMP280, if a single measurement is made, the 16 most significant bits in the value are populated, and the four least significant bits in the value readout are all zeros. The number of measurements can be set to 1, 2, 4, 8 or 16 and as the number of measurements is increased, the number of bits populated with data increases, so that with 16 measurements all 20 bits are populated with measurement data. The data sheet refers to this process as oversampling. In the BME280, the same arrangement applies so long as the result is not being filtered. If filtering is used, the values are always 20 bits, irrespective of how many measurements are taken in each measurement cycle. Each individual measurement takes about 2 milliseconds (typical value; maximum value is 2.3 ms). Add to this a fixed overhead of about 2 ms (usually a bit less) means that a measurement sequence, which can consist of from 1 to 32 individual measurements, can take from 4 ms up to 66 ms.The data sheet provides a set of recommended combinations of temperature and pressure oversampling for various applications.Configuration control registers The two configuration control registers in the BMP280 are at register addresses 0xF4 and 0xF5, and are mapped onto 6 individual configuration  control values. 0xF4 consists of:3 bits osrs_t (measure temperature 0, 1, 2, 4, 8 or 16  times);      3 bits osrs_p (measure pressure 0, 1, 2, 4, 8 or 16 times); and      2 bits Mode  (Sleep, Forced (ie Single Shot), Normal (ie continuous). 0xF5 consists of: 3 bits t_sb (standby time, 0.5ms to 4000 ms);      3 bits  filter (see below); and      1 bit spiw_en which selects SPI or I2C.The filter parameter controls a type of exponential decay algorithm, or Infinite Impulse Response (IIR) filter, applied to the raw pressure  and temperature measurement values (but not to the humidity values). The  equation is given in the data sheet. Another presentation is:Value(n) = Value(n-1) * (K-1)/K + measurement(n) / K where (n)  indicates the most recent measurement and output value; and K is the  filter parameter. The filter parameter K and can be set to 1,2,4,8 or  16. If K is set to 1 the equation just becomes Value(n) =  measurement(n).  The coding of the filter parameter is: filter = 000, K=1      filter = 001, K=2      filter = 010, K=4      filter = 011, K=8      filter = 1xx, K=16The BME 280 adds a further configuration control register at address 0xF2, \"ctrl_hum\" with a single 3-bit parameter osrs_h (measure humidity 0, 1, 2, 4, 8 or 16 times).", "step_imgs": ["https://cdn.instructables.com/FKH/XQD1/J8AGV1TN/FKHXQD1J8AGV1TN.LARGE.jpg"], "step_title": "Step 3: BMP280 Device Details"}, {"step": 4, "steps_text": "I plan to add this later, showing the timing of commands and measurement responses.Iddt - current at temperature measurement. Typical value 325 uAIddp - current at pressure measurement. Typical value 720 uA, max 1120 uAIddsb - current in standby mode. Typical value 0.2 uA, max 0.5 uAIddsl - current in sleep mode. Typical value 0.1 uA, max 0.3 uA", "step_imgs": [], "step_title": "Step 4: Measurement and Readout Timing"}, {"step": 5, "steps_text": "I2C Burst modeThe BMP280 data sheet provides guidance about data readout (section 3.9). It says \"it is strongly recommended to use a burst read and not address every register individually. This will prevent a possible mix-up of bytes belonging to different measurements and reduce interface traffic.\" No guidance is given regarding the reading of the compensation/calibration parameters. Presumably these are not an issue because they are static and do not change.This library reads all contiguous values in a single read operation - 24 bytes in the case of the temperature and pressure compensation parameters, 6 bytes for temperature and pressure combined, and 8 bytes for humidity, temperature and pressure combined. When temperature alone is checked, only 3 bytes are read.Use of macros (#define etc.)There are no macros in this library other than the usual library \"include guard\" macro which prevents duplication.All constants are defined using the const keyword, and debug printing is controlled with standard C functions. It has been the source of some uncertainty for me, but the advice I get from reading many posts on this subject is that use of #define for declaration of constants (at least) and (probably) debug printing control is unnecessary and undesirable. The case for the use of const rather than #define is pretty clear - const uses the same resources as #define (ie nil) and the resultant values follow the scoping rules, thereby reducing the chance of errors. The case for debug printing control is a bit less clear, because the way I have done it means that the final code contains the logic for the debug printing statements, even though they are never exercised. If the library is to be used in a big project on a microcontroller with very limited memory, this may become an issue. Since my development was on an ESP8266 with a large flash memory, this did not seem to be an issue for me. ", "step_imgs": ["https://cdn.instructables.com/FCK/KDUO/J8F66UYL/FCKKDUOJ8F66UYL.LARGE.jpg", "https://cdn.instructables.com/FHU/L449/J8F66UYV/FHUL449J8F66UYV.LARGE.jpg"], "step_title": "Step 5: Software Guidelines"}, {"step": 6, "steps_text": "I plan to add this later.", "step_imgs": [], "step_title": "Step 6: Temperature Performance"}, {"step": 7, "steps_text": "I plan to add this later.", "step_imgs": [], "step_title": "Step 7: Pressure Performance"}], "channel": "Sensors"}, {"category": "technology", "description": "We come across various projects which require's temperature, pressure and humidity monitoring. Thus we realize that these parameters actually play a vital role in having an estimate of the working efficiency of a system at different atmospheric conditions. Both at the industrial level and personal systems an optimum temperature,humidity and barometric pressure  level is requisite for the adequate performance of the system.This is why we provide a complete tutorial on this sensor, in this tutorial we are going to explain the working of the BME280 humidity, pressure and temperature sensor with particle photon.", "title": "Humidity,Pressure and Temperature Computation Using BME280 and Photon Interfacing.", "url": "https://www.instructables.com/id/HumidityPressure-and-Temperature-Computation-Using/", "section": "technology", "steps": [{"step": 1, "steps_text": "Electronic sector has stepped up their game with the BME280 sensor, an environmental sensor with temperature, barometric pressure and humidity! This sensor is great for all sorts of weather/environmental sensing and can even be used in I2C.This precision sensor BME280 is the best sensing solution for measuring humidity with \u00b13% accuracy, barometric pressure with \u00b11 hPa absolute accuraccy, and temperature with \u00b11.0\u00b0C accuracy. Because pressure changes with altitude, and the pressure measurements are so good, you can also use it as an altimeter with \u00b11 meter or better accuracy!The temperature sensor has been optimized for the lowest noise and highest resolution and is used for temperature compensation of the pressure sensor and can also be used for estimation of ambient temperature. Measurements with the BME280 can be performed by the user or performed in regular intervals.Datasheet : Click to preview or download the datasheet of BME280 sensor.", "step_imgs": ["https://cdn.instructables.com/F1A/61PI/IQ9ROUD1/F1A61PIIQ9ROUD1.LARGE.jpg"], "step_title": "Step 1:  BME280 Exploration"}, {"step": 2, "steps_text": "We used entirely controleverything Parts because  they're easy to use, and something about everything fitting nicely on a centimeter grid really gets us going. You can use whatever you want, but the wiring diagram will assume you're using these parts.BME280 Sensor I\u00b2C Mini ModuleI\u00b2C Shield for Particle PhotonParticle PhotonI\u00b2C CablePower adapter", "step_imgs": ["https://cdn.instructables.com/FZJ/OHHB/IQ9ROUZA/FZJOHHBIQ9ROUZA.LARGE.jpg"], "step_title": "Step 2: Hardware Requirement List"}, {"step": 3, "steps_text": "The interfacing section basically explains the wiring connections required between the sensor and the particle photon. Ensuring correct connections is the basic necessity while working on any system for the desired output. So, the requisite connections are as follows:The BME280 will work over I2C . Here is the example wiring diagram, demonstrating how to wire up each interface of the sensor. Out-of-the-box, the board is configured for an I2C interface, as such we recommend to use this interfacing if you\u2019re otherwise agnostic. All you need is four wires! Only four connections are required Vcc, Gnd, SCL and SDA pins and these are connected with the help of I2C cable. These connections are demonstrated in the pictures above.", "step_imgs": ["https://cdn.instructables.com/FX0/HQJ3/IQ9ROUA7/FX0HQJ3IQ9ROUA7.LARGE.jpg"], "step_title": "Step 3: Interfacing"}, {"step": 4, "steps_text": "The clean version of the code that we'll be using to run this is available HERE. While using the sensor module with the arduino, we include application.h and spark_wiring_i2c.h library. \"application.h\" and spark_wiring_i2c.h library contains the functions which facilitate the i2c communication between the sensor and the particle.Click HERE to open the webpage for device monitoring Upload the code to your board and it should start working! All the data can be obtained on webpage as shown in picture.Code is provided below:// Distributed with a free-will license.// Use it any way you want, profit or free, provided it fits in the licenses of its associated works.\n// BME280\n// This code is designed to work with the BME280_I2CS I2C Mini Module available from ControlEverything.com.\n#include\n#include\n// BME280 I2C address is 0x76(108)\n#define Addr 0x76\ndouble cTemp = 0, fTemp = 0, pressure = 0, humidity = 0;\nvoid setup()\n{\n// Set variable\nParticle.variable(\"i2cdevice\", \"BME280\");\narticle.variable(\"cTemp\", cTemp);\nParticle.variable(\"fTemp\", fTemp);\nParticle.variable(\"pressure\", pressure);\nParticle.variable(\"humidity\", humidity);\n// Initialise I2C communication as MASTER\nWire.begin();\n// Initialise Serial communication, set baud rate = 9600\nSerial.begin(9600);\ndelay(300);\n}\nvoid loop()\n{\nunsigned int b1[24];\nunsigned int data[8];\nint dig_H1 = 0;\nfor(int i = 0; i < 24; i++)\n{\n// Start I2C Transmission\nWire.beginTransmission(Addr);\n// Select data register\nWire.write((136+i));\n// Stop I2C Transmission\nWire.endTransmission();\n// Request 1 byte of data\nWire.requestFrom(Addr, 1);\n// Read 24 bytes of data\nif(Wire.available() == 1)\n{\nb1[i] = Wire.read();\n}\n}\n// Convert the data\n// temp coefficents\nint dig_T1 = (b1[0] & 0xff) + ((b1[1] & 0xff) * 256);\nint dig_T2 = b1[2] + (b1[3] * 256);\nint dig_T3 = b1[4] + (b1[5] * 256);\n// pressure coefficents\nint dig_P1 = (b1[6] & 0xff) + ((b1[7] & 0xff ) * 256);\nint dig_P2 = b1[8] + (b1[9] * 256);\nint dig_P3 = b1[10] + (b1[11] * 256);\nint dig_P4 = b1[12] + (b1[13] * 256);\nint dig_P5 = b1[14] + (b1[15] * 256);\nint dig_P6 = b1[16] + (b1[17] * 256);\nint dig_P7 = b1[18] + (b1[19] * 256);\nint dig_P8 = b1[20] + (b1[21] * 256);\nint dig_P9 = b1[22] + (b1[23] * 256);\nfor(int i = 0; i < 7; i++)\n{\n// Start I2C Transmission\nWire.beginTransmission(Addr);\n// Select data register\nWire.write((225+i));\n// Stop I2C Transmission\nWire.endTransmission();\n// Request 1 byte of data\nWire.requestFrom(Addr, 1);\n// Read 7 bytes of data\nif(Wire.available() == 1)\n{\nb1[i] = Wire.read();\n}\n}\n// Convert the data\n// humidity coefficents\nint dig_H2 = b1[0] + (b1[1] * 256);\nint dig_H3 = b1[2] & 0xFF ;\nint dig_H4 = (b1[3] * 16) + (b1[4] & 0xF);\nint dig_H5 = (b1[4] / 16) + (b1[5] * 16);\nint dig_H6 = b1[6];\n// Start I2C Transmission\nWire.beginTransmission(Addr);\n// Select data register\nWire.write(161);\n// Stop I2C Transmission\nWire.endTransmission();\n// Request 1 byte of data\nWire.requestFrom(Addr, 1);\n// Read 1 byte of data\nif(Wire.available() == 1)\n{\ndig_H1 = Wire.read();\n}\n// Start I2C Transmission\nWire.beginTransmission(Addr);\n// Select control humidity register\nWire.write(0xF2);\n// Humidity over sampling rate = 1\nWire.write(0x01);\n// Stop I2C Transmission\nWire.endTransmission();\n// Start I2C Transmission\nWire.beginTransmission(Addr);\n// Select control measurement register\nWire.write(0xF4);\n// Normal mode, temp and pressure over sampling rate = 1\nWire.write(0x27);\n// Stop I2C Transmission\nWire.endTransmission();\n// Start I2C Transmission\nWire.beginTransmission(Addr);\n// Select config register\nWire.write(0xF5);\n// Stand_by time = 1000ms\nWire.write(0xA0);\n// Stop I2C Transmission\nWire.endTransmission();\nfor(int i = 0; i < 8; i++)\n{\n// Start I2C Transmission\nWire.beginTransmission(Addr);\n// Select data register\nWire.write((247+i));\n// Stop I2C Transmission\nWire.endTransmission();\n// Request 1 byte of data\nWire.requestFrom(Addr, 1);\n// Read 8 bytes of data\nif(Wire.available() == 1)\n{\ndata[i] = Wire.read();\n}\n}\n// Convert pressure and temperature data to 19-bits\nlong adc_p = (((long)(data[0] & 0xFF) * 65536) + ((long)(data[1] & 0xFF) * 256) + (long)(data[2] & 0xF0)) / 16;\nlong adc_t = (((long)(data[3] & 0xFF) * 65536) + ((long)(data[4] & 0xFF) * 256) + (long)(data[5] & 0xF0)) / 16;\n// Convert the humidity data long adc_h = ((long)(data[6] & 0xFF) * 256 + (long)(data[7] & 0xFF));\n// Temperature offset calculations\ndouble var1 = (((double)adc_t) / 16384.0 - ((double)dig_T1) / 1024.0) * ((double)dig_T2);\ndouble var2 = ((((double)adc_t) / 131072.0 - ((double)dig_T1) / 8192.0) * (((double)adc_t)/131072.0 - ((double)dig_T1)/8192.0)) * ((double)dig_T3);\ndouble t_fine = (long)(var1 + var2);\ndouble cTemp = (var1 + var2) / 5120.0;\ndouble fTemp = cTemp * 1.8 + 32;\n// Pressure offset calculations\nvar1 = ((double)t_fine / 2.0) - 64000.0;\nvar2 = var1 * var1 * ((double)dig_P6) / 32768.0;\nvar2 = var2 + var1 * ((double)dig_P5) * 2.0;\nvar2 = (var2 / 4.0) + (((double)dig_P4) * 65536.0);\nvar1 = (((double) dig_P3) * var1 * var1 / 524288.0 + ((double) dig_P2) * var1) / 524288.0;\nvar1 = (1.0 + var1 / 32768.0) * ((double)dig_P1);\ndouble p = 1048576.0 - (double)adc_p;\np = (p - (var2 / 4096.0)) * 6250.0 / var1;\nvar1 = ((double) dig_P9) * p * p / 2147483648.0;\nvar2 = p * ((double) dig_P8) / 32768.0;\ndouble pressure = (p + (var1 + var2 + ((double)dig_P7)) / 16.0) / 100 ;\n// Humidity offset calculations\ndouble var_H = (((double)t_fine) - 76800.0);\nvar_H = (adc_h - (dig_H4 * 64.0 + dig_H5 / 16384.0 * var_H)) * (dig_H2 / 65536.0 * (1.0 + dig_H6 / 67108864.0 * var_H * (1.0 + dig_H3 / 67108864.0 * var_H)));\ndouble humidity = var_H * (1.0 - dig_H1 * var_H / 524288.0);\nif(humidity > 100.0)\n{\nhumidity = 100.0;\n}\nelse if(humidity < 0.0)\n{\nhumidity = 0.0;\n}\n// Output data to dashboard\nParticle.publish(\"Temperature in Celsius : \", String(cTemp));\nParticle.publish(\"Temperature in Fahrenheit : \", String(fTemp));\nParticle.publish(\"Pressure : \", String(pressure));\nParticle.publish(\"Relative Humidity : \", String(humidity));\ndelay(1000);\n}", "step_imgs": ["https://cdn.instructables.com/FNY/1Y73/IQ9ROXYH/FNY1Y73IQ9ROXYH.LARGE.jpg", "https://cdn.instructables.com/FZ4/BI9Q/IQ9ROXYB/FZ4BI9QIQ9ROXYB.LARGE.jpg"], "step_title": "Step 4: Temperature, Pressure and Humidity Monitoring Code"}, {"step": 5, "steps_text": "BME280 temperature, pressure and relative humidity sensor has various industrial applications like temperature monitoring, computer peripheral thermal protection, pressure monitoring in industry. We have also employed this sensor into weather station applications as well as greenhouse monitoring system.Other applications may inculde:Context awareness, e.g. skin detection, room change detection. Fitness monitoring / well-being - Warning regarding dryness or high temperatures. Measurement of volume and air flow. Home automation control. Control heating, ventilation, air conditioning (HVAC). Internet of things. GPS enhancement (e.g. time-to-first-fix improvement, dead reckoning, slope detection). Indoor navigation (change of floor detection, elevator detection). Outdoor navigation, leisure and sports applications.Weather forecast.Vertical velocity indication (rise/sink speed)..", "step_imgs": ["https://cdn.instructables.com/FFQ/KROL/IQ9ROWWQ/FFQKROLIQ9ROWWQ.LARGE.jpg"], "step_title": "Step 5:  Applications:"}, {"step": 6, "steps_text": "Watch our video tutorial to go through all the steps in interfacing and completing the project.Stay tuned for other sensor's interfacing and working blog's.", "step_imgs": [], "step_title": "Step 6: Video Tutorial"}], "channel": "Electronics"}, {"category": "technology", "description": "This instructable will guide you, step-by-step, through modeling an elementary distillation tower using the HYSYS software. Using HYSYS can drastically reduce the amount of time spent doing distillation tower calculations by hand. While it may take 1-2 hours to fully complete and understand the model, it is much faster and more reliable than doing numerous calculations by hand.\u00a0HYSYS also allows the user to modify tower or stream conditions to see how the modifications affect other streams with a few clicks, rather than with numerous more pages of calculations!\u00a0Please not that the following tutorial is designed for Chemical Engineering students who are familiar with separations and related terminology. It is also expected that the user has already downloaded and is using HYSYS version 8.0 on a Windows computer.\u00a0", "title": "Modeling a Distillation Tower in HYSYS", "url": "https://www.instructables.com/id/Modeling-a-Distillation-Tower-in-HYSYS/", "section": "technology", "steps": [{"step": 1, "steps_text": "Parts/Tools Required: \u2022 Computer & Internet access \u2022 HYSYS software downloaded \u2022 License to run HYSYS (usually provided by university)", "step_imgs": ["https://cdn.instructables.com/FEI/PBZ6/HLZRIDAW/FEIPBZ6HLZRIDAW.LARGE.jpg"], "step_title": "Step 1: What You'll Need"}, {"step": 2, "steps_text": "Once HYSYS is installed on your computer, the next step is to open the software. The HYSYS software can be found using the following path from the Windows start menu: \u00a0 \u00a0 \u00a01.\u00a0Start > All Programs > AspenTech > Aspen HYSYS > Aspen HYSYS\u00a0 While you may have more or less programs in the \"Aspen HYSYS\" folder, the only one needed to model a distillation tower is the main \"Aspen HYSYS\" program (highlighted above). Again, please note that this tutorial is directed towards Windows users. If you are In order to run HYSYS on a Mac computer you must first install a Windows operating system.", "step_imgs": ["https://cdn.instructables.com/F7X/2OSM/HLZRIDC6/F7X2OSMHLZRIDC6.LARGE.jpg"], "step_title": "Step 2: Opening HYSYS"}, {"step": 3, "steps_text": "After opening HYSYS, you will see the main screen (Figure 1). To begin modeling the distillation tower, open a new case.\u00a0 \u00a0 \u00a0 \u00a01. Click: file > new > new case. If you prefer using keyboard shortcuts,\u00a0\u00a0 \u00a0 \u00a0 \u00a0press: Control + n This step is summarized in Figure 2. The HYSYS main screen also displays software news, recent cases, and some helpful \"getting started\" links (these are labelled in Figure 2).", "step_imgs": ["https://cdn.instructables.com/FMB/YVH0/HLZRIDEI/FMBYVH0HLZRIDEI.LARGE.jpg", "https://cdn.instructables.com/F4R/JW7D/HLZRIDEH/F4RJW7DHLZRIDEH.LARGE.jpg"], "step_title": "Step 3: Create a New Case"}, {"step": 4, "steps_text": "Before beginning a simulation, it is first necessary to define all of the necessary tower and stream parameters. The first parameter to define is the fluid package. The fluid package tells HYSYS which Equation of State to use for future sream calculations. To select a fluid package:\u00a0 \u00a0 \u00a0 \u00a01. Click the fluid package tab on the left side of the screen (Figure 3a). \u00a0 \u00a0 \u00a0 \u00a02. Next, click \"Add\" on the bottom left of the fluid package screen (pictured in Figure 3b). Once a fluid package is added, a new \"basis\" for calculations appears under the fluid packages tab (see Figure 4a).\u00a0 The most commonly used fluid package is Peng-Robinson. For this tutorial we will also use Peng-Robinson, however, if your system is known to better follow a different Equation of State, select the appropriate model.\u00a0 \u00a0 \u00a0 \u00a03. To set the desired fluid package, simply click the option from the \"Property Package Selection\" window. Once a fluid package is selected it should be highlighted in blue as seen in Figure 4b.", "step_imgs": ["https://cdn.instructables.com/FXA/7LOJ/HLZRIDKN/FXA7LOJHLZRIDKN.LARGE.jpg", "https://cdn.instructables.com/FW4/0Y6W/HLZRIDKO/FW40Y6WHLZRIDKO.LARGE.jpg"], "step_title": "Step 4: Adding a Fluid Package"}, {"step": 5, "steps_text": "Next, we must define what chemical species are present in the system. For our purposes we will consider a debutanizer, which is designed to separate butane out of a stream containing many different hydrocarbons. The HYSYS software has a list containing thousands of\u00a0 known compounds to select from. There is also a search feature with several filters to help find certain compounds faster. If a species in your system is not in the HYSYS list, you can add a \"user defined\" compound. To add compounds:\u00a0 \u00a0 \u00a0 1. From the fluids package screen, click \"view\" (located next to the Component List Selection).\u00a0 \u00a0 \u00a0 2. Pick a compound present in your system.\u00a0 \u00a0 \u00a0 3. Find the compound by searching or filtering the list of pre-loaded compounds on the right side of the screen.\u00a0\u00a0 \u00a0 \u00a0 4. Click to highlight the desired compound.\u00a0 \u00a0 \u00a0 5. Click \"Add\"\u00a0 \u00a0 \u00a0 6. Repeat for ALL compounds present in the system being modeled. \u00a0 Compounds that have been successfully added are located in the list on the left hand side of the screen. In this case I have added several pure hydrocarbons.\u00a0 \u00a0 \u00a0 \u00a07. Close the Component List Window", "step_imgs": ["https://cdn.instructables.com/FG1/9Y06/HLZRIDOP/FG19Y06HLZRIDOP.LARGE.jpg", "https://cdn.instructables.com/FKN/LJ17/HLZRIDOS/FKNLJ17HLZRIDOS.LARGE.jpg"], "step_title": "Step 5: Adding Components"}, {"step": 6, "steps_text": "It is now time to enter the simulation environment. \u00a0 \u00a0 \u00a0 \u00a0\u00a01. Click \"Simulation\" in the bottom left corner to enter the simulation environment (Figure 7a). By default, when you enter the simulation environment, a palette appears. Many different unit operations can be chosen from the palette. For this tutorial we will utilize the distillation tower.\u00a0 \u00a0 \u00a0 \u00a02. In the palette, click: Columns > Distillation Column Sub-Flowsheet (upper left corner, highlighted in Figure 7b). \u00a0 \u00a0 \u00a03. Click again anywhere in the simulation area to place the tower. If you wish to get a less sophisticated tower to get rough estimates, you can select the Short Cut Distillation option from the palette. The embedded video below gives an overview of the short cut tower and how it is used to design a full-size tower.\u00a0", "step_imgs": ["https://cdn.instructables.com/FI5/THS3/HLZRIDSK/FI5THS3HLZRIDSK.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 6: Beginning the Simulation"}, {"step": 7, "steps_text": "The next steps are very important as they will define the conditions inside the tower. \u00a0 \u00a0 \u00a01. Double-click on the tower that was just placed in the simulation area. This will open the Column Input window which consists of five pages. These five steps will vary greatly from process to process (i.e. different projects will call for different tower specs). However certain aspects are relevant to all projects. \u00a0\u00a0 \u00a0 \u00a0\u00a02. If desired, change the Column Name by clicking and typing a new name. \u00a0 \u00a0 3. Select the appropriate condenser type (total, partial, or full reflux) as stated by\u00a0your\u00a0tower design. For this example a total condenser will be used. \u00a0 \u00a0 4. Click each input and output stream and type a distinct name for each (all required\u00a0streams that need names are highlighted in yellow above). \u00a0 \u00a0 5. For the inlet stream, select the stage or tray where it will enter by clicking the \"Inlet Stage\" drop-down menu \u00a0 \u00a0 6.\u00a0If the number of tower stages is known, type in the \"# stages\" box. \u00a0 \u00a0 7. Click \"Next\" once all streams are named. If your tower design includes a side draw, simply name that stream as well before proceeding.\u00a0\u00a0 \u00a0\u00a0", "step_imgs": ["https://cdn.instructables.com/F9C/VJ6P/HLZRIDTR/F9CVJ6PHLZRIDTR.LARGE.jpg"], "step_title": "Step 7: Defining Tower Specifications I"}, {"step": 8, "steps_text": "Pages 2 through 5 of the Column Input also vary from tower to tower.\u00a0 \u00a0 \u00a0 \u00a0\u00a01. Select the type of reboiler to be used (Figure 8), and click \"Next.\" \u00a0 \u00a0 \u00a0 2. Input the specified condenser, reboiler, and pressure drop (Figure 9), and click \"Next.\" \u00a0 \u00a0 \u00a0 3. Inputting condenser, reboiler, and top stream temperature is optional, if you chose, input these (Figure 10) and click \"Next.\" \u00a0 \u00a0 \u00a0 4. On the final Column Input page, enter the desired top stream flow rate and condenser reflux ratio (Figure 11), click \"Done.\" If you had side streams or other side operations, click \"Side Ops\" rather than \"Done.\"", "step_imgs": ["https://cdn.instructables.com/F64/ZF66/HLZRIDUC/F64ZF66HLZRIDUC.LARGE.jpg", "https://cdn.instructables.com/FAW/HTK5/HLZRIDUX/FAWHTK5HLZRIDUX.LARGE.jpg", "https://cdn.instructables.com/FAA/A1B1/HLZRIDV1/FAAA1B1HLZRIDV1.LARGE.jpg", "https://cdn.instructables.com/F0T/OFUE/HLZRIDVG/F0TOFUEHLZRIDVG.LARGE.jpg"], "step_title": "Step 8: Defining Tower Specifications II"}, {"step": 9, "steps_text": "To proceed to running a simulation on the tower, the feed stream conditions need to be specified. The necessary specifications are: \u2022 Temperature \u2022 Pressure \u2022 Inlet Flow \u2022 Composition\u00a0 \u00a0 \u00a0 \u00a0\u00a01. Expand the \"Streams\" folder and click \"Feed\" or the name you assigned to the inlet stream. \u00a0 \u00a0 \u00a0 2. Click the \"<empty>\" box and type the designated values based on given information (Figure 13a). \u00a0While units are typically set to SI, they can be changed via the drop-down menu when entering the value. \u00a0 \u00a0 \u00a0\u00a03. Next, under worksheet, click \"Composition\" (Figure 13b). \u00a0 \u00a0 \u00a0 4. Enter the inlet stream compositions based on your specific project (Figure 14a). Inlet stream compositions can be entered on many different bases (e.g. Mole Fractions, Mass Fractions). \u00a0 \u00a0 \u00a0\u00a05. Select what basis your composition is based on by simply clicking the appropriate bullet (Figure 14b).Note:\u00a0Ensure that under the \"Home\" tab, the \"Solver\" is set to active so that the calculations can be run in the next step.", "step_imgs": ["https://cdn.instructables.com/FSA/XWJL/HLZRIDXA/FSAXWJLHLZRIDXA.LARGE.jpg", "https://cdn.instructables.com/F5L/NJDD/HLZRIDXH/F5LNJDDHLZRIDXH.LARGE.jpg", "https://cdn.instructables.com/F2C/MQ4L/HLZRIDXS/F2CMQ4LHLZRIDXS.LARGE.jpg"], "step_title": "Step 9: Specifying the Inlet Stream"}, {"step": 10, "steps_text": "The tower is now fully specified and can be run to simulate how well the separation will occur. To run the calculations:\u00a0 \u00a0 1. Double-click on the tower to open the tower menu. \u00a0 \u00a0 2. Click \"Reset\" to ensure all settings are current (Figure 15a).\u00a0 \u00a0 \u00a0 3. Click \"Run\" to run the calculations and simulation (Figure 15b).Caution:\u00a0make sure that the conditions have \"converged\" and display a green box to the right of the \"Reset\" button. If this box is red and says \"unconverged\" then the simulator will run continuously without finding any answers. \u00a0", "step_imgs": ["https://cdn.instructables.com/FR5/HF7B/HLZRIDZU/FR5HF7BHLZRIDZU.LARGE.jpg"], "step_title": "Step 10: "}, {"step": 11, "steps_text": "After the simulation has run, the results do not display spontaneously. Below are two methods for viewing results.\u00a0 \u00a0 \u00a0 \u00a0 \u00a01. Individual Streams \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 a.) To view an individual stream, double-click the stream and you can click through stream conditions, composition, etc. A menu much like the one used to specify the feed stream will appear and can be sorted through to find certain desired values. \u00a0 \u00a0 \u00a0 \u00a02. Complete Report \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 a.) On the top toolbar/ribbon, Click: Home > Reports\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0b.) To view a text file of the full report, Click: Full Report > Create. The report will save as a text file and report every possible calculation/specification imaginable. The full report is usually includes way more information than necessary. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0c.) To create a custom report, in the Custom Report box Click \"Create\" (Figure 16a). This will open a \"Report Builder\" window. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0d.) Click \"Insert Datasheet\" \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0e.) Select (by clicking the check marks) which information you want in the report and click \"Add\" (Figure 16b). \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f.) Save and Print the report. \u00a0", "step_imgs": ["https://cdn.instructables.com/FIJ/ZR5B/HLZRIE0G/FIJZR5BHLZRIE0G.LARGE.jpg"], "step_title": "Step 11: Viewing Results"}, {"step": 12, "steps_text": "\u2022 A useful tool is the workbook function, you can select certain criteria you want to track as you vary other conditions. This data can also be graphed and included in a report. For instance if you were varying inlet temperature in an effort to attain a larger amount of butane in the product, you can graph inlet temperature vs. butane in product. \u2022 Under the economics tab, you can determine the economic impact of the condenser/reboiler and distillation tower as a whole if you wish to investigate cost further. You now have a basic working model of your desired distillation project. With this HYSYS model, you can alter any specification (pressure, temperature, reflux ratio, compositions, etc.) in order to see how it affects the separation. As long as the specifications are fully defined, the simulation will run. If you are having trouble getting the simulation to run, double-click each stream and see if HYSYS says a variable is undefined (at the bottom of the stream window). If this does not solve your problem, you may want to contact HYSYS support at support.aspentech.com, or refer to the tutorials and tips presented on the home screen (discussed in step 3).", "step_imgs": ["https://cdn.instructables.com/F41/ZW64/HLZRIE1S/F41ZW64HLZRIE1S.LARGE.jpg"], "step_title": "Step 12: Finishing Touches"}], "channel": "Science"}, {"category": "technology", "description": "Introduction: A pH indicator measures whether a substance (usually a liquid) is acidic or basic, and some indicators can also measure how acidic or basic it is. When the indicator comes in contact with a substance, the indicator's color corresponds to that substance's approximate pH, which is a scale of zero to fourteen (with zero being the most acidic, seven being neutral, and fourteen being the most basic) that indicates the acidity or basicity of a substance. These instructions explain the simple process of how to make an indicator solution from the leaves of a red cabbage (also called purple cabbage) and how to make indicator paper by soaking a coffee filter in the indicator solution. [Note: A solution in this sense simply means a substance dissolved in water. In this case, the chemicals with indicator properties in the cabbage leaves are dissolved in boiling water.] The indicator paper works in the same way as the indicator solution itself: the paper changes color when it comes in contact with an acidic or basic substance. Some optional steps at the end of the instructions (steps 9-14) explain how to use some household items to test the indicator solution and paper to see how they change color.About these instructions:Overview: These instructions can be divided into three parts: 1) Making a pH indicator by boiling cabbage leaves in water (see steps 1-5). 2) Making indicator paper by soaking a coffee filter in the indicator solution and letting it dry, then cutting it into strips (see steps 6-8). 3) This part is optional and is not necessary for actually making the indicator solution and paper. Both the paper and the indicator solution itself can be tested with common household items (see steps 9-14). Vinegar (which is mildly acidic) and baking soda (which is mildly basic when dissolved in water) are used as examples in these instructions.Time: Approximately 10-15 minutes to make the indicator (plus an additional 25-30 to allow it to cool), then about 15-30 minutes to make the indicator paper (the time needed depends on how the paper is dried). Finally, allow 15-20 minutes for testing the indicator solution and indicator paper with vinegar and baking soda (if desired). Total time (including testing): approximately 60-90 minutes.Cost: The total cost of a head of red cabbage and a pack of coffee filters is approximately $5-7.Amount: Makes approximately two cups of indicator solution. The number of indicator paper strips varies depending on the size they are cut.Supplies:1. Two leaves of red (purple) cabbage A head of red cabbage can be purchased at most grocery stores.2. One or more coffee filters A package of these can also be purchased at most grocery stores.3. Medium-sized pan This should be big enough so that the cabbage leaves will lie on the bottom (although they do not have to lie completely flat).4. Measuring cup For measuring out two cups of water.5. Kitchen tongs For safe removal of the cabbage leaves from the boiling water.6. Scissors For cutting the coffee filter into strips after it has been soaked and dried.7. One or more glasses (or beakers if available) For testing the indicator with vinegar and/or baking soda.8. Water Tap water works fine, but distilled water may also be used.9. Paper towels or paper plates These are useful for the used cabbage leaves, for laying out the coffee filter after it has been soaked, and for preventing the liquid indicator from making a mess on countertops/tables.The following supplies are needed if you wish to test the indicator solution and indicator paper:1. White vinegar This can be purchased at most grocery stores. This will be used to test the pH indicator and indicator paper.2. Baking soda Another common grocery store item. This will also be used to test the indicator.3. Teaspoon For making a baking soda solution and for stirring during the testing of the indicator solution.Safety Precautions: Use care when boiling water and when removing the cabbage leaves from the water. Make sure to let the indicator solution cool before using it. The indicator solution and the vinegar and baking soda are all non-toxic and can be poured down the sink after use. If your hands or eyes come in contact with any of these, simply rinse them thoroughly with water.The indicator solution can stain your clothes, so it is a good idea to wear an apron (or lab coat if available) when handling the indicator. If the indicator does get on your clothes, try using a stain remover and then washing them in cold water.", "title": "Red Cabbage PH Indicator", "url": "https://www.instructables.com/id/Red-Cabbage-pH-Indicator/", "section": "technology", "steps": [{"step": 1, "steps_text": "Part 1:Pour two cups of tap or distilled water into the pan.The water should cover the bottom of the pan and be approximately an inch deep. The depth can be tested in the next step after the cabbage leaves have been added. If the water is too shallow, try using a smaller pan. If it is too deep, use a larger pan.", "step_imgs": ["https://cdn.instructables.com/F9Q/YK61/HO7XOTMF/F9QYK61HO7XOTMF.LARGE.jpg"], "step_title": "Step 1: "}, {"step": 2, "steps_text": "Pull off two cabbage leaves from the head of cabbage and place them in the water, laying them as flat as possible on the bottom of the pan.The leaves will probably tear when you remove them; that is fine. When placed in the water, the leaves do not have to be completely submerged, but put as much of each leaf underwater as possible. If the bottom of the \npan is significantly smaller than the size of the leaves when they are \nlaid horizontally, a larger pan should probably be used.", "step_imgs": ["https://cdn.instructables.com/FED/HYAD/HO7XOTTC/FEDHYADHO7XOTTC.LARGE.jpg", "https://cdn.instructables.com/FVP/LON2/HO7XOTTH/FVPLON2HO7XOTTH.LARGE.jpg", "https://cdn.instructables.com/FTL/EMED/HO7XOTZP/FTLEMEDHO7XOTZP.LARGE.jpg"], "step_title": "Step 2: "}, {"step": 3, "steps_text": "Boil the water and leaves for 5 minutes.\nSet \nyour stove to high heat. Once the water starts bubbling, the heat can be\n lowered slightly (start your 5-minute timer at this time). It usually takes approximately 5 minutes for the water to reach a boil. During and after boiling, you may notice a slight bad smell; this is to be expected.", "step_imgs": ["https://cdn.instructables.com/F7P/RQBI/HO7XOUAP/F7PRQBIHO7XOUAP.LARGE.jpg"], "step_title": "Step 3: "}, {"step": 4, "steps_text": "After 5 minutes, remove the pan from the burner and let the water cool for 15-20 minutes.\nUse\n caution with the hot pan and make sure the water is relatively cooled \nbefore moving to the next step (it can still be warm, but it should not \nbe hot). The water in the pan should now appear dark purple or dark \nblue, depending on the pH of the water (tap water tends to be slightly basic, so if you used tap water, your solution may be bluish). It may not be the same color as in the photos shown here; that is fine. The leaves should also appear less purple,\n with a more bluish green color. If the water color has not changed, try\n boiling it a bit longer.", "step_imgs": ["https://cdn.instructables.com/FS7/IV2Q/HO7XOUIR/FS7IV2QHO7XOUIR.LARGE.jpg"], "step_title": "Step 4: "}, {"step": 5, "steps_text": "Remove the leaves from the water with the kitchen tongs, then let the solution cool for about 30 minutes.\nThe\n cabbage leaves can be thrown away. The color of the water \nshould be more evident now that the leaves have been removed. This is \nthe finished indicator solution. Make sure that the solution is no longer hot before moving to the next step.", "step_imgs": ["https://cdn.instructables.com/FMW/4POF/HO7XOV88/FMW4POFHO7XOV88.LARGE.jpg", "https://cdn.instructables.com/F8T/JPD4/HO7XOV89/F8TJPD4HO7XOV89.LARGE.jpg"], "step_title": "Step 5: "}, {"step": 6, "steps_text": "Part 2:Place the coffee filter in the leftover indicator solution in the pan and press it down until it is completely submerged, then let it soak for about 5 minutes.\nWhen the indicator solution soaks into the filter, indicator paper is made.", "step_imgs": ["https://cdn.instructables.com/FUL/BLFX/HO7XOVIX/FULBLFXHO7XOVIX.LARGE.jpg", "https://cdn.instructables.com/FON/UTDY/HO7XOVIY/FONUTDYHO7XOVIY.LARGE.jpg"], "step_title": "Step 6: "}, {"step": 7, "steps_text": "Remove the filter with the kitchen tongs and allow it to dry for 10-15 minutes.The filter can be hung with a clothespin if a suitable place to hang it is available (this is the fastest method) or it can be laid flat to dry (see photo), although this method may take additional time to dry.The paper will probably look slightly blue, but that is fine.", "step_imgs": ["https://cdn.instructables.com/F7R/YRLQ/HO7XOVSF/F7RYRLQHO7XOVSF.LARGE.jpg"], "step_title": "Step 7: "}, {"step": 8, "steps_text": "Once the filter is dry, cut it into strips.\nThe strips of indicator paper can be any size, but a practical size might be approximately 0.5 inches (1.3 centimeters) by 2 inches (5.1 centimeters). The indicator strips are now ready for use.Both the indicator solution and the indicator paper should turn pink or red when put in contact with an acidic substance, and blue or greenish blue when in contact with a basic substance. The following steps show how to test the indicator solution and paper with vinegar and baking soda to observe these colors.", "step_imgs": ["https://cdn.instructables.com/FQJ/PPYR/HO7XOW7V/FQJPPYRHO7XOW7V.LARGE.jpg", "https://cdn.instructables.com/FFF/V3WK/HO7XOW7W/FFFV3WKHO7XOW7W.LARGE.jpg"], "step_title": "Step 8: "}, {"step": 9, "steps_text": "Part 3:Pour about 1/4 cup of the indicator solution from the pot into the measuring cup.This will be used for testing the indicator solution with vinegar and baking soda.", "step_imgs": ["https://cdn.instructables.com/F7R/ARI6/HO7XOVGI/F7RARI6HO7XOVGI.LARGE.jpg"], "step_title": "Step 9: "}, {"step": 10, "steps_text": "Pour a small amount of vinegar into a glass.Any amount is fine, but about 1/4 cup of vinegar works well. This will serve as an acidic solution for testing the indicator solution and indicator paper.", "step_imgs": ["https://cdn.instructables.com/FNK/XXAJ/HO7XOWMY/FNKXXAJHO7XOWMY.LARGE.jpg", "https://cdn.instructables.com/F0T/GQRI/HO7XOWMZ/F0TGQRIHO7XOWMZ.LARGE.jpg"], "step_title": "Step 10: "}, {"step": 11, "steps_text": "In another glass, put about 1/4 cup of water and about a teaspoon of baking soda (the amount does not have to be exact) and stir until the baking soda is completely or mostly dissolved (this shouldn't take more than a few seconds of stirring).This will serve as a basic solution to test the indicator solution and paper.", "step_imgs": ["https://cdn.instructables.com/F5R/OSVX/HOHYF2A5/F5ROSVXHOHYF2A5.LARGE.jpg", "https://cdn.instructables.com/F0Y/P4Z8/HOHYF2A6/F0YP4Z8HOHYF2A6.LARGE.jpg"], "step_title": "Step 11: "}, {"step": 12, "steps_text": "To test the indicator paper, dip one strip into each solution.\n\nThe strip dipped in the vinegar solution should turn pink, indicating \nthat the vinegar is acidic, and the strip dipped in the baking soda \nsolution should turn a more definite shade of blue, indicating that the \nbaking soda is basic (see photo above). The colors of the strips do not \nhave to match the photo exactly, but they should be similar.", "step_imgs": ["https://cdn.instructables.com/FMX/BRZI/HOHYF2HK/FMXBRZIHOHYF2HK.LARGE.jpg", "https://cdn.instructables.com/FK5/MOLB/HOHYF2HL/FK5MOLBHOHYF2HL.LARGE.jpg", "https://cdn.instructables.com/FUE/MH8N/HOHYF2HP/FUEMH8NHOHYF2HP.LARGE.jpg", "https://cdn.instructables.com/FTT/GDVD/HOHYF2HQ/FTTGDVDHOHYF2HQ.LARGE.jpg", "https://cdn.instructables.com/FON/4Y0Z/HO7XP02W/FON4Y0ZHO7XP02W.LARGE.jpg"], "step_title": "Step 12: "}, {"step": 13, "steps_text": "To test how the indicator solution behaves in acidic solution, add a small amount of indicator solution from the measuring cup to the glass of vinegar.\n\nThe\n amount of indicator added does not have to be a certain amount, it just\n needs to be enough to observe a color change (in other words, as soon \nas you see pink, you can stop adding indicator). The vinegar in the \nglass should turn pink or pinkish red (depending on how much indicator \nwas added), which indicates that it is mildly acidic. The color does not\n have to exactly match the photos above, but it should be similar.", "step_imgs": ["https://cdn.instructables.com/FBT/ASGB/HO7XOX2E/FBTASGBHO7XOX2E.LARGE.jpg", "https://cdn.instructables.com/FZF/K2IY/HO7XOX2F/FZFK2IYHO7XOX2F.LARGE.jpg"], "step_title": "Step 13: "}, {"step": 14, "steps_text": "To test how the indicator behaves in basic solution, add a small amount of indicator from the measuring cup to the glass of water and baking soda. The solution should turn blue, indicating that the baking soda is mildly basic. [Note: The indicator is probably already blue if you used tap water (since tap water is usually slightly basic), so you may not notice much of a color change here.] Again, you do not have to add a specific amount of indicator, just stop as soon as you see blue. As before, the color does not have to match the photo exactly.Clean-up and storage: You can discard both the vinegar and baking soda test solutions by pouring them down the sink. The indicator paper strips can be stored in a plastic bag (a Ziploc bag for example) or in a box. The indicator solution should be stored in an airtight and watertight container to prevent spills (a Tupperware container with a lid usually works well for this, or any sort of bottle with a screw cap can be used).More uses for the indicator solution and paper: Vinegar and baking soda are just two of many substances whose approximate pH can be measured with the red cabbage indicator. The indicator solution works well mainly for clear liquids, such as the vinegar and baking soda solutions in these instructions. However, the indicator paper can be used for a variety of other substances, whether they are colorless or not. Some household items that are mildly acidic or basic and can be tested with the indicator paper include:   Orange juice -- acidic     Apple (cut a slice or take a bite, then press the indicator paper against the wet part inside) -- acidic     All-purpose cleaner, such as Windex or 409 -- basic     Bar soap (shave some off the bar, put the shavings in a watertight container, and shake vigorously) -- basic     Soda pop -- acidic  The indicator solution and paper can also be used to test strongly acidic substances (the indicator solution or paper should turn red) and strongly basic solutions (the indicator solution or paper should turn greenish blue or greenish yellow). However, examples of these are not given in these instructions because of the additional safety precautions that must be taken (strong acids and bases can cause chemical burns). I hope you found this Instructable useful! Please leave a comment below if you see any way these instructions could be improved or if you have any questions. Thank you for your feedback!", "step_imgs": ["https://cdn.instructables.com/F9L/220E/HO7XOZ9O/F9L220EHO7XOZ9O.LARGE.jpg"], "step_title": "Step 14: "}], "channel": "Science"}, {"category": "technology", "description": "OverviewMass spectrometry (MS) is a proven analytical method used to glean information about the chemical structure of a chemical sample.  MS is applied to fields as disparate as airport security, food and wine analysis, drug and explosives analysis, as well as most fields of chemical and biological research.  MS works by ionizing, or bestowing a net charge, on a sample of molecules and then sorting the ions based on their mass-to-charge ratio.  Since the particle has a one electron negative charge or one proton positive charge, the mass spectrometer can make use of electrical and/or magnetic fields to essentially sort molecules by their masses.  The charged molecules are then guided by electromagnetic attraction or repulsion to a detector mechanism.  A typical mass spectrum (shown below) plots the different mass-to-charge ratios (m/z) against their abundances (occurrence of a certain ion divided by the occurrence of the most plentiful ion) within the sample.Aspiring chemists and biologists, as well as anyone interested in gaining a greater understanding of these fields, can benefit from a greater understanding of MS.  This Instructable will provide a set of instructions for the reading and comprehension of a simple mass spectrum of a halogenated alkane (haloalkane), or a compound containing only hydrogen, carbon and a halogen.  Haloalkanes will be analyzed both because of their wide use as chemical solvents and because understanding of their spectra forms a good baseline for future learning in the MS field.  The above information will be explained in more detail in the coming steps to share insight into how a mass spectrometrist can use a mass spectrum to determine the identity of an unknown chemical sample.Materials:  Four-function calculator, notebook, Periodic Table of Elements (optional)Time Investment:  10 to 15 minutesExperience Required:  High school level knowledge of chemistry (i.e. atoms, elements, Periodic Table)", "title": "How to Read a Simple Mass Spectrum", "url": "https://www.instructables.com/id/How-to-Read-a-Simple-Mass-Spectrum/", "section": "technology", "steps": [{"step": 1, "steps_text": "The molecular ion represents the entire molecule in question, prior to any fragmentation.  Each analyte molecule is given a charge of one, so the molecular ion m/z value represents the molecules total mass. Ionization, specifically electron impact (EI) ionization, is used to remove an electron from an analyte molecule so that it can be analyzed by the electrical and magnetic fields of the mass spectrometer.  EI, however, is a \u201chard\u201d ionization source that can cause molecules to fragment, or break into multiple pieces.  It is therefore important to first identify the molecular (complete) ion.1.       The molecular ion is typically represented on the mass spectrum as the peak with the highest m/z ratio.  Find and record this value in your notebook.Example:  In the EI mass spectrum of water (shown above) a large peak is seen at m/z value 18.  Water has a weight of 18 atomic mass units, or Daltons, so the peak at m/z 18 represents the molecular ion.  The smaller peak at m/z 17 represents a water molecule in which a hydrogen is removed by fragmentation.", "step_imgs": ["https://cdn.instructables.com/F56/X7VB/IVO3HWSQ/F56X7VBIVO3HWSQ.LARGE.jpg"], "step_title": "Step 1: Step 1:  Identify the Molecular Ion"}, {"step": 2, "steps_text": "The molecular ion reflects the complete weight of an analyte molecule, but, considering the fact that there are dozens of stable elements, the molecule\u2019s weight alone will not reveal its identity.  Fortunately, individual molecules have relatively unique EI fragmentation patterns.  The different peaks on a mass spectrum reveal the compounds identity, so, as shown below, a mass spectrometrist should identify all major spectral peaks.  A major peak is the most abundant peak within a cluster of smaller peaks.  For this introductory Instructable, the largest (most abundant) peak in each cluster will represent the entire cluster.1.       Use a highlighter to identify the most abundant peak in each cluster.2.       Determine the numerical m/z value for each of these major peaks and write all of them down in your notebook.-Note that the molecular ion is not necessarily the most abundant peak.  The most abundant peak is, by naming convention, the base peak.Example:  Major peaks at m/z 15, 29, 43, 57, and 184 (see above sample spectrum).", "step_imgs": ["https://cdn.instructables.com/FNI/9L07/IVO3HVWJ/FNI9L07IVO3HVWJ.LARGE.jpg"], "step_title": "Step 2: Step 2:  Identify Major Fragmentation Clusters"}, {"step": 3, "steps_text": "Smaller peaks clustered around each major peak are largely present due to differences in which of the two fragments retains the ion, gain or loss of protons, and naturally occurring elemental isotopes.  For a simple alkane or halogenated alkane the \u2206m (mass difference between two singly charged ions) values will typically involve the gain or loss of about 14 or 15 Daltons between major peak clusters.  These mass differences represent the gain or loss of a methyl (-CH3) or methylene (-CH2-) from the larger ion.  Some long or branched molecules exhibit advanced fragmentation patterns, so you should assume the presence of a halogen only if there is a 17 Dalton or greater \u2206m value between major peaks in a haloalkane.1.       Use the simplified \u201cmass spectrum\u201d from Step 2 to determine the mass difference (\u2206m) between each peak and the next peak on the spectrum.2.       Use your calculator and list of major m/z peaks to determine numerical \u2206m values.  Write these values down in your notebook.Example:  \u2206m values between major peaks (starting from the left, m/z 15) are 14, 14, 14, and 127 Daltons.", "step_imgs": ["https://cdn.instructables.com/F07/X8EF/IVO3HVZ0/F07X8EFIVO3HVZ0.LARGE.jpg"], "step_title": "Step 3: Step 3:  Determine the \u2206m for Each Major Peak"}, {"step": 4, "steps_text": "Mass differences between major peaks will often exceed the 14 or 15 mass units representing a methyl or methylene carbon.  A \u2206m value greater than 16 Daltons indicates the presence of a heteroatom, or atom that is not carbon or hydrogen (for our study, a halogen).  Common halogens (Group 17 on the Periodic Table) include fluorine, chlorine, bromine and iodine.  These can essentially replace one hydrogen-to-carbon bond of an alkane and dramatically alter its chemical and physical properties.  Luckily, singularly halogenated alkanes have easily identifiable mass spectra (see iodobutane spectra below).1.       Check your list of mass differences created in Step 3.  If one of these \u2206m values is larger than 16 mass units, use the Periodic Table to determine which halogen the molecule contains.2.       Use the Periodic Table (or the table above, for convenience) to determine if the halogen is element F, Cl, Br, or I.  Write this halogen down in your notebook.Example:  The \u2206m value of 127 Daltons from Step 3 indicates the presence of an iodine atom in the example spectra (see previous table).", "step_imgs": ["https://cdn.instructables.com/F36/3HW2/IVO3HW0G/F363HW2IVO3HW0G.LARGE.jpg", "https://cdn.instructables.com/FUT/PLS4/IVO3HW6M/FUTPLS4IVO3HW6M.LARGE.jpg"], "step_title": "Step 4: Step 4:  Identify Any Heteroatoms"}, {"step": 5, "steps_text": "Now that the halogen has been identified, the length of the carbon chain itself can be determined.  The general chemical formula of an alkane is CnH2n+2, but, since the halogen effectively replaces one of the iodobutane hydrogens, the modified alkane formula is CnH2n+1X (where X is a halogen).1.       Look to the largest peak on your mass spectrum that does not include the halogen (molecular ion mass minus halogen mass).2.       Use this mass, algebra and the masses of carbon and hydrogen to solve for n (see example).3.       Add this number back into the chemical formula (CnH2n+1) and append the halogen for the complete chemical formula.  Write this down in your notebook.Example:  The largest non-halogenated m/z value from Step 2 is 57.  By plugging this into the equation above (CnH2n+1X) and substituting the atomic masses of carbon (12 Da.) and hydrogen (1 Da.) (12n + 1(2n+1) = 57; see Periodic Table for masses), the example alkane formula can be determined to be C4H9X.  The previously determined halogen (iodine) can then be added to this formula for a final identification of C4H9I.", "step_imgs": ["https://cdn.instructables.com/F6H/X8IH/IVO3HWBD/F6HX8IHIVO3HWBD.LARGE.jpg"], "step_title": "Step 5: Step 5:  Identify Remainder of Molecule"}, {"step": 6, "steps_text": "1.      Combine the name from the number of carbons with the halogen prefix from the tables above to give the total chemical name.  Write this down in your notebook.Example:  C4H9I = butane (C4) + iodo- (I) = iodobutane", "step_imgs": ["https://cdn.instructables.com/F64/HUUN/IVO3HWJW/F64HUUNIVO3HWJW.LARGE.jpg"], "step_title": "Step 6: Step 6:  Name the Molecule   "}, {"step": 7, "steps_text": "The National Institute of Standards and Technology (NIST) database contains a collection of standardized mass spectra.  This database can be used to confirm a naming decision made based on a mass spectrum.1.   Simply use a Google search of \u201c[chemical name] NIST EI Spectra\u201d and go to the http://webbook.nist.gov option to check your work.  The two spectra (provided and NIST standard) should match closely.  A close match indicates correct identification.1.       If the major peaks of the NIST mass spectrum do not match your teaching spectra:\u00b7       Recheck your naming of the chemical formula (Step 6)\u00b7       Recheck your identification of major peaks for a missed cluster of peaks (Step 2)Example:  See NIST EI spectra of iodobutane (above).  This closely matches the example spectra in Steps 2 and 3.Further InformationYou now have a basic knowledge of the landmarks and meaning of a simple mass spectrum.  If this topic interests you, consider exploring the following intermediate topics:\u00b7       MS analysis of oxygen (and other non-halogen heteroatom) containing compounds, such as alcohols, ethers and carboxylic acids\u00b7       MS identification of hydrocarbon isomers (molecules with the same chemical formula but containing different bond patterns)\u00b7       MS application to protein analysis (proteomics)The following link will take interested readers to a good intermediate level primer on mass spectrometry (courtesy of Thermo Fisher Scientific):https://www.thermofisher.com/us/en/home/life-science/protein-biology/protein-biology-learning-center/protein-biology-resource-library/pierce-protein-methods/overview-mass-spectrometry.html", "step_imgs": ["https://cdn.instructables.com/F90/5ZJG/IVO3HWO6/F905ZJGIVO3HWO6.LARGE.jpg"], "step_title": "Step 7: Step 7:  Check Your Work"}], "channel": "Science"}, {"category": "technology", "description": "OverviewMass spectrometry (MS) is a proven analytical method used to glean information about the chemical structure of a chemical sample.  MS is applied to fields as disparate as airport security, food and wine analysis, drug and explosives analysis, as well as most fields of chemical and biological research.  MS works by ionizing, or bestowing a net charge, on a sample of molecules and then sorting the ions based on their mass-to-charge ratio.  Since the particle has a one electron negative charge or one proton positive charge, the mass spectrometer can make use of electrical and/or magnetic fields to essentially sort molecules by their masses.  The charged molecules are then guided by electromagnetic attraction or repulsion to a detector mechanism.  A typical mass spectrum (shown below) plots the different mass-to-charge ratios (m/z) against their abundances (occurrence of a certain ion divided by the occurrence of the most plentiful ion) within the sample.Aspiring chemists and biologists, as well as anyone interested in gaining a greater understanding of these fields, can benefit from a greater understanding of MS.  This Instructable will provide a set of instructions for the reading and comprehension of a simple mass spectrum of a halogenated alkane (haloalkane), or a compound containing only hydrogen, carbon and a halogen.  Haloalkanes will be analyzed both because of their wide use as chemical solvents and because understanding of their spectra forms a good baseline for future learning in the MS field.  The above information will be explained in more detail in the coming steps to share insight into how a mass spectrometrist can use a mass spectrum to determine the identity of an unknown chemical sample.Materials:  Four-function calculator, notebook, Periodic Table of Elements (optional)Time Investment:  10 to 15 minutesExperience Required:  High school level knowledge of chemistry (i.e. atoms, elements, Periodic Table)", "title": "How to Read a Simple Mass Spectrum", "url": "https://www.instructables.com/id/How-to-Read-a-Simple-Mass-Spectrum/", "section": "technology", "steps": [{"step": 1, "steps_text": "The molecular ion represents the entire molecule in question, prior to any fragmentation.  Each analyte molecule is given a charge of one, so the molecular ion m/z value represents the molecules total mass. Ionization, specifically electron impact (EI) ionization, is used to remove an electron from an analyte molecule so that it can be analyzed by the electrical and magnetic fields of the mass spectrometer.  EI, however, is a \u201chard\u201d ionization source that can cause molecules to fragment, or break into multiple pieces.  It is therefore important to first identify the molecular (complete) ion.1.       The molecular ion is typically represented on the mass spectrum as the peak with the highest m/z ratio.  Find and record this value in your notebook.Example:  In the EI mass spectrum of water (shown above) a large peak is seen at m/z value 18.  Water has a weight of 18 atomic mass units, or Daltons, so the peak at m/z 18 represents the molecular ion.  The smaller peak at m/z 17 represents a water molecule in which a hydrogen is removed by fragmentation.", "step_imgs": ["https://cdn.instructables.com/F56/X7VB/IVO3HWSQ/F56X7VBIVO3HWSQ.LARGE.jpg"], "step_title": "Step 1: Step 1:  Identify the Molecular Ion"}, {"step": 2, "steps_text": "The molecular ion reflects the complete weight of an analyte molecule, but, considering the fact that there are dozens of stable elements, the molecule\u2019s weight alone will not reveal its identity.  Fortunately, individual molecules have relatively unique EI fragmentation patterns.  The different peaks on a mass spectrum reveal the compounds identity, so, as shown below, a mass spectrometrist should identify all major spectral peaks.  A major peak is the most abundant peak within a cluster of smaller peaks.  For this introductory Instructable, the largest (most abundant) peak in each cluster will represent the entire cluster.1.       Use a highlighter to identify the most abundant peak in each cluster.2.       Determine the numerical m/z value for each of these major peaks and write all of them down in your notebook.-Note that the molecular ion is not necessarily the most abundant peak.  The most abundant peak is, by naming convention, the base peak.Example:  Major peaks at m/z 15, 29, 43, 57, and 184 (see above sample spectrum).", "step_imgs": ["https://cdn.instructables.com/FNI/9L07/IVO3HVWJ/FNI9L07IVO3HVWJ.LARGE.jpg"], "step_title": "Step 2: Step 2:  Identify Major Fragmentation Clusters"}, {"step": 3, "steps_text": "Smaller peaks clustered around each major peak are largely present due to differences in which of the two fragments retains the ion, gain or loss of protons, and naturally occurring elemental isotopes.  For a simple alkane or halogenated alkane the \u2206m (mass difference between two singly charged ions) values will typically involve the gain or loss of about 14 or 15 Daltons between major peak clusters.  These mass differences represent the gain or loss of a methyl (-CH3) or methylene (-CH2-) from the larger ion.  Some long or branched molecules exhibit advanced fragmentation patterns, so you should assume the presence of a halogen only if there is a 17 Dalton or greater \u2206m value between major peaks in a haloalkane.1.       Use the simplified \u201cmass spectrum\u201d from Step 2 to determine the mass difference (\u2206m) between each peak and the next peak on the spectrum.2.       Use your calculator and list of major m/z peaks to determine numerical \u2206m values.  Write these values down in your notebook.Example:  \u2206m values between major peaks (starting from the left, m/z 15) are 14, 14, 14, and 127 Daltons.", "step_imgs": ["https://cdn.instructables.com/F07/X8EF/IVO3HVZ0/F07X8EFIVO3HVZ0.LARGE.jpg"], "step_title": "Step 3: Step 3:  Determine the \u2206m for Each Major Peak"}, {"step": 4, "steps_text": "Mass differences between major peaks will often exceed the 14 or 15 mass units representing a methyl or methylene carbon.  A \u2206m value greater than 16 Daltons indicates the presence of a heteroatom, or atom that is not carbon or hydrogen (for our study, a halogen).  Common halogens (Group 17 on the Periodic Table) include fluorine, chlorine, bromine and iodine.  These can essentially replace one hydrogen-to-carbon bond of an alkane and dramatically alter its chemical and physical properties.  Luckily, singularly halogenated alkanes have easily identifiable mass spectra (see iodobutane spectra below).1.       Check your list of mass differences created in Step 3.  If one of these \u2206m values is larger than 16 mass units, use the Periodic Table to determine which halogen the molecule contains.2.       Use the Periodic Table (or the table above, for convenience) to determine if the halogen is element F, Cl, Br, or I.  Write this halogen down in your notebook.Example:  The \u2206m value of 127 Daltons from Step 3 indicates the presence of an iodine atom in the example spectra (see previous table).", "step_imgs": ["https://cdn.instructables.com/F36/3HW2/IVO3HW0G/F363HW2IVO3HW0G.LARGE.jpg", "https://cdn.instructables.com/FUT/PLS4/IVO3HW6M/FUTPLS4IVO3HW6M.LARGE.jpg"], "step_title": "Step 4: Step 4:  Identify Any Heteroatoms"}, {"step": 5, "steps_text": "Now that the halogen has been identified, the length of the carbon chain itself can be determined.  The general chemical formula of an alkane is CnH2n+2, but, since the halogen effectively replaces one of the iodobutane hydrogens, the modified alkane formula is CnH2n+1X (where X is a halogen).1.       Look to the largest peak on your mass spectrum that does not include the halogen (molecular ion mass minus halogen mass).2.       Use this mass, algebra and the masses of carbon and hydrogen to solve for n (see example).3.       Add this number back into the chemical formula (CnH2n+1) and append the halogen for the complete chemical formula.  Write this down in your notebook.Example:  The largest non-halogenated m/z value from Step 2 is 57.  By plugging this into the equation above (CnH2n+1X) and substituting the atomic masses of carbon (12 Da.) and hydrogen (1 Da.) (12n + 1(2n+1) = 57; see Periodic Table for masses), the example alkane formula can be determined to be C4H9X.  The previously determined halogen (iodine) can then be added to this formula for a final identification of C4H9I.", "step_imgs": ["https://cdn.instructables.com/F6H/X8IH/IVO3HWBD/F6HX8IHIVO3HWBD.LARGE.jpg"], "step_title": "Step 5: Step 5:  Identify Remainder of Molecule"}, {"step": 6, "steps_text": "1.      Combine the name from the number of carbons with the halogen prefix from the tables above to give the total chemical name.  Write this down in your notebook.Example:  C4H9I = butane (C4) + iodo- (I) = iodobutane", "step_imgs": ["https://cdn.instructables.com/F64/HUUN/IVO3HWJW/F64HUUNIVO3HWJW.LARGE.jpg"], "step_title": "Step 6: Step 6:  Name the Molecule   "}, {"step": 7, "steps_text": "The National Institute of Standards and Technology (NIST) database contains a collection of standardized mass spectra.  This database can be used to confirm a naming decision made based on a mass spectrum.1.   Simply use a Google search of \u201c[chemical name] NIST EI Spectra\u201d and go to the http://webbook.nist.gov option to check your work.  The two spectra (provided and NIST standard) should match closely.  A close match indicates correct identification.1.       If the major peaks of the NIST mass spectrum do not match your teaching spectra:\u00b7       Recheck your naming of the chemical formula (Step 6)\u00b7       Recheck your identification of major peaks for a missed cluster of peaks (Step 2)Example:  See NIST EI spectra of iodobutane (above).  This closely matches the example spectra in Steps 2 and 3.Further InformationYou now have a basic knowledge of the landmarks and meaning of a simple mass spectrum.  If this topic interests you, consider exploring the following intermediate topics:\u00b7       MS analysis of oxygen (and other non-halogen heteroatom) containing compounds, such as alcohols, ethers and carboxylic acids\u00b7       MS identification of hydrocarbon isomers (molecules with the same chemical formula but containing different bond patterns)\u00b7       MS application to protein analysis (proteomics)The following link will take interested readers to a good intermediate level primer on mass spectrometry (courtesy of Thermo Fisher Scientific):https://www.thermofisher.com/us/en/home/life-science/protein-biology/protein-biology-learning-center/protein-biology-resource-library/pierce-protein-methods/overview-mass-spectrometry.html", "step_imgs": ["https://cdn.instructables.com/F90/5ZJG/IVO3HWO6/F905ZJGIVO3HWO6.LARGE.jpg"], "step_title": "Step 7: Step 7:  Check Your Work"}], "channel": "Science"}, {"category": "technology", "description": "OverviewMass spectrometry (MS) is a proven analytical method used to glean information about the chemical structure of a chemical sample.  MS is applied to fields as disparate as airport security, food and wine analysis, drug and explosives analysis, as well as most fields of chemical and biological research.  MS works by ionizing, or bestowing a net charge, on a sample of molecules and then sorting the ions based on their mass-to-charge ratio.  Since the particle has a one electron negative charge or one proton positive charge, the mass spectrometer can make use of electrical and/or magnetic fields to essentially sort molecules by their masses.  The charged molecules are then guided by electromagnetic attraction or repulsion to a detector mechanism.  A typical mass spectrum (shown below) plots the different mass-to-charge ratios (m/z) against their abundances (occurrence of a certain ion divided by the occurrence of the most plentiful ion) within the sample.Aspiring chemists and biologists, as well as anyone interested in gaining a greater understanding of these fields, can benefit from a greater understanding of MS.  This Instructable will provide a set of instructions for the reading and comprehension of a simple mass spectrum of a halogenated alkane (haloalkane), or a compound containing only hydrogen, carbon and a halogen.  Haloalkanes will be analyzed both because of their wide use as chemical solvents and because understanding of their spectra forms a good baseline for future learning in the MS field.  The above information will be explained in more detail in the coming steps to share insight into how a mass spectrometrist can use a mass spectrum to determine the identity of an unknown chemical sample.Materials:  Four-function calculator, notebook, Periodic Table of Elements (optional)Time Investment:  10 to 15 minutesExperience Required:  High school level knowledge of chemistry (i.e. atoms, elements, Periodic Table)", "title": "How to Read a Simple Mass Spectrum", "url": "https://www.instructables.com/id/How-to-Read-a-Simple-Mass-Spectrum/", "section": "technology", "steps": [{"step": 1, "steps_text": "The molecular ion represents the entire molecule in question, prior to any fragmentation.  Each analyte molecule is given a charge of one, so the molecular ion m/z value represents the molecules total mass. Ionization, specifically electron impact (EI) ionization, is used to remove an electron from an analyte molecule so that it can be analyzed by the electrical and magnetic fields of the mass spectrometer.  EI, however, is a \u201chard\u201d ionization source that can cause molecules to fragment, or break into multiple pieces.  It is therefore important to first identify the molecular (complete) ion.1.       The molecular ion is typically represented on the mass spectrum as the peak with the highest m/z ratio.  Find and record this value in your notebook.Example:  In the EI mass spectrum of water (shown above) a large peak is seen at m/z value 18.  Water has a weight of 18 atomic mass units, or Daltons, so the peak at m/z 18 represents the molecular ion.  The smaller peak at m/z 17 represents a water molecule in which a hydrogen is removed by fragmentation.", "step_imgs": ["https://cdn.instructables.com/F56/X7VB/IVO3HWSQ/F56X7VBIVO3HWSQ.LARGE.jpg"], "step_title": "Step 1: Step 1:  Identify the Molecular Ion"}, {"step": 2, "steps_text": "The molecular ion reflects the complete weight of an analyte molecule, but, considering the fact that there are dozens of stable elements, the molecule\u2019s weight alone will not reveal its identity.  Fortunately, individual molecules have relatively unique EI fragmentation patterns.  The different peaks on a mass spectrum reveal the compounds identity, so, as shown below, a mass spectrometrist should identify all major spectral peaks.  A major peak is the most abundant peak within a cluster of smaller peaks.  For this introductory Instructable, the largest (most abundant) peak in each cluster will represent the entire cluster.1.       Use a highlighter to identify the most abundant peak in each cluster.2.       Determine the numerical m/z value for each of these major peaks and write all of them down in your notebook.-Note that the molecular ion is not necessarily the most abundant peak.  The most abundant peak is, by naming convention, the base peak.Example:  Major peaks at m/z 15, 29, 43, 57, and 184 (see above sample spectrum).", "step_imgs": ["https://cdn.instructables.com/FNI/9L07/IVO3HVWJ/FNI9L07IVO3HVWJ.LARGE.jpg"], "step_title": "Step 2: Step 2:  Identify Major Fragmentation Clusters"}, {"step": 3, "steps_text": "Smaller peaks clustered around each major peak are largely present due to differences in which of the two fragments retains the ion, gain or loss of protons, and naturally occurring elemental isotopes.  For a simple alkane or halogenated alkane the \u2206m (mass difference between two singly charged ions) values will typically involve the gain or loss of about 14 or 15 Daltons between major peak clusters.  These mass differences represent the gain or loss of a methyl (-CH3) or methylene (-CH2-) from the larger ion.  Some long or branched molecules exhibit advanced fragmentation patterns, so you should assume the presence of a halogen only if there is a 17 Dalton or greater \u2206m value between major peaks in a haloalkane.1.       Use the simplified \u201cmass spectrum\u201d from Step 2 to determine the mass difference (\u2206m) between each peak and the next peak on the spectrum.2.       Use your calculator and list of major m/z peaks to determine numerical \u2206m values.  Write these values down in your notebook.Example:  \u2206m values between major peaks (starting from the left, m/z 15) are 14, 14, 14, and 127 Daltons.", "step_imgs": ["https://cdn.instructables.com/F07/X8EF/IVO3HVZ0/F07X8EFIVO3HVZ0.LARGE.jpg"], "step_title": "Step 3: Step 3:  Determine the \u2206m for Each Major Peak"}, {"step": 4, "steps_text": "Mass differences between major peaks will often exceed the 14 or 15 mass units representing a methyl or methylene carbon.  A \u2206m value greater than 16 Daltons indicates the presence of a heteroatom, or atom that is not carbon or hydrogen (for our study, a halogen).  Common halogens (Group 17 on the Periodic Table) include fluorine, chlorine, bromine and iodine.  These can essentially replace one hydrogen-to-carbon bond of an alkane and dramatically alter its chemical and physical properties.  Luckily, singularly halogenated alkanes have easily identifiable mass spectra (see iodobutane spectra below).1.       Check your list of mass differences created in Step 3.  If one of these \u2206m values is larger than 16 mass units, use the Periodic Table to determine which halogen the molecule contains.2.       Use the Periodic Table (or the table above, for convenience) to determine if the halogen is element F, Cl, Br, or I.  Write this halogen down in your notebook.Example:  The \u2206m value of 127 Daltons from Step 3 indicates the presence of an iodine atom in the example spectra (see previous table).", "step_imgs": ["https://cdn.instructables.com/F36/3HW2/IVO3HW0G/F363HW2IVO3HW0G.LARGE.jpg", "https://cdn.instructables.com/FUT/PLS4/IVO3HW6M/FUTPLS4IVO3HW6M.LARGE.jpg"], "step_title": "Step 4: Step 4:  Identify Any Heteroatoms"}, {"step": 5, "steps_text": "Now that the halogen has been identified, the length of the carbon chain itself can be determined.  The general chemical formula of an alkane is CnH2n+2, but, since the halogen effectively replaces one of the iodobutane hydrogens, the modified alkane formula is CnH2n+1X (where X is a halogen).1.       Look to the largest peak on your mass spectrum that does not include the halogen (molecular ion mass minus halogen mass).2.       Use this mass, algebra and the masses of carbon and hydrogen to solve for n (see example).3.       Add this number back into the chemical formula (CnH2n+1) and append the halogen for the complete chemical formula.  Write this down in your notebook.Example:  The largest non-halogenated m/z value from Step 2 is 57.  By plugging this into the equation above (CnH2n+1X) and substituting the atomic masses of carbon (12 Da.) and hydrogen (1 Da.) (12n + 1(2n+1) = 57; see Periodic Table for masses), the example alkane formula can be determined to be C4H9X.  The previously determined halogen (iodine) can then be added to this formula for a final identification of C4H9I.", "step_imgs": ["https://cdn.instructables.com/F6H/X8IH/IVO3HWBD/F6HX8IHIVO3HWBD.LARGE.jpg"], "step_title": "Step 5: Step 5:  Identify Remainder of Molecule"}, {"step": 6, "steps_text": "1.      Combine the name from the number of carbons with the halogen prefix from the tables above to give the total chemical name.  Write this down in your notebook.Example:  C4H9I = butane (C4) + iodo- (I) = iodobutane", "step_imgs": ["https://cdn.instructables.com/F64/HUUN/IVO3HWJW/F64HUUNIVO3HWJW.LARGE.jpg"], "step_title": "Step 6: Step 6:  Name the Molecule   "}, {"step": 7, "steps_text": "The National Institute of Standards and Technology (NIST) database contains a collection of standardized mass spectra.  This database can be used to confirm a naming decision made based on a mass spectrum.1.   Simply use a Google search of \u201c[chemical name] NIST EI Spectra\u201d and go to the http://webbook.nist.gov option to check your work.  The two spectra (provided and NIST standard) should match closely.  A close match indicates correct identification.1.       If the major peaks of the NIST mass spectrum do not match your teaching spectra:\u00b7       Recheck your naming of the chemical formula (Step 6)\u00b7       Recheck your identification of major peaks for a missed cluster of peaks (Step 2)Example:  See NIST EI spectra of iodobutane (above).  This closely matches the example spectra in Steps 2 and 3.Further InformationYou now have a basic knowledge of the landmarks and meaning of a simple mass spectrum.  If this topic interests you, consider exploring the following intermediate topics:\u00b7       MS analysis of oxygen (and other non-halogen heteroatom) containing compounds, such as alcohols, ethers and carboxylic acids\u00b7       MS identification of hydrocarbon isomers (molecules with the same chemical formula but containing different bond patterns)\u00b7       MS application to protein analysis (proteomics)The following link will take interested readers to a good intermediate level primer on mass spectrometry (courtesy of Thermo Fisher Scientific):https://www.thermofisher.com/us/en/home/life-science/protein-biology/protein-biology-learning-center/protein-biology-resource-library/pierce-protein-methods/overview-mass-spectrometry.html", "step_imgs": ["https://cdn.instructables.com/F90/5ZJG/IVO3HWO6/F905ZJGIVO3HWO6.LARGE.jpg"], "step_title": "Step 7: Step 7:  Check Your Work"}], "channel": "Science"}, {"category": "technology", "description": "OverviewMass spectrometry (MS) is a proven analytical method used to glean information about the chemical structure of a chemical sample.  MS is applied to fields as disparate as airport security, food and wine analysis, drug and explosives analysis, as well as most fields of chemical and biological research.  MS works by ionizing, or bestowing a net charge, on a sample of molecules and then sorting the ions based on their mass-to-charge ratio.  Since the particle has a one electron negative charge or one proton positive charge, the mass spectrometer can make use of electrical and/or magnetic fields to essentially sort molecules by their masses.  The charged molecules are then guided by electromagnetic attraction or repulsion to a detector mechanism.  A typical mass spectrum (shown below) plots the different mass-to-charge ratios (m/z) against their abundances (occurrence of a certain ion divided by the occurrence of the most plentiful ion) within the sample.Aspiring chemists and biologists, as well as anyone interested in gaining a greater understanding of these fields, can benefit from a greater understanding of MS.  This Instructable will provide a set of instructions for the reading and comprehension of a simple mass spectrum of a halogenated alkane (haloalkane), or a compound containing only hydrogen, carbon and a halogen.  Haloalkanes will be analyzed both because of their wide use as chemical solvents and because understanding of their spectra forms a good baseline for future learning in the MS field.  The above information will be explained in more detail in the coming steps to share insight into how a mass spectrometrist can use a mass spectrum to determine the identity of an unknown chemical sample.Materials:  Four-function calculator, notebook, Periodic Table of Elements (optional)Time Investment:  10 to 15 minutesExperience Required:  High school level knowledge of chemistry (i.e. atoms, elements, Periodic Table)", "title": "How to Read a Simple Mass Spectrum", "url": "https://www.instructables.com/id/How-to-Read-a-Simple-Mass-Spectrum/", "section": "technology", "steps": [{"step": 1, "steps_text": "The molecular ion represents the entire molecule in question, prior to any fragmentation.  Each analyte molecule is given a charge of one, so the molecular ion m/z value represents the molecules total mass. Ionization, specifically electron impact (EI) ionization, is used to remove an electron from an analyte molecule so that it can be analyzed by the electrical and magnetic fields of the mass spectrometer.  EI, however, is a \u201chard\u201d ionization source that can cause molecules to fragment, or break into multiple pieces.  It is therefore important to first identify the molecular (complete) ion.1.       The molecular ion is typically represented on the mass spectrum as the peak with the highest m/z ratio.  Find and record this value in your notebook.Example:  In the EI mass spectrum of water (shown above) a large peak is seen at m/z value 18.  Water has a weight of 18 atomic mass units, or Daltons, so the peak at m/z 18 represents the molecular ion.  The smaller peak at m/z 17 represents a water molecule in which a hydrogen is removed by fragmentation.", "step_imgs": ["https://cdn.instructables.com/F56/X7VB/IVO3HWSQ/F56X7VBIVO3HWSQ.LARGE.jpg"], "step_title": "Step 1: Step 1:  Identify the Molecular Ion"}, {"step": 2, "steps_text": "The molecular ion reflects the complete weight of an analyte molecule, but, considering the fact that there are dozens of stable elements, the molecule\u2019s weight alone will not reveal its identity.  Fortunately, individual molecules have relatively unique EI fragmentation patterns.  The different peaks on a mass spectrum reveal the compounds identity, so, as shown below, a mass spectrometrist should identify all major spectral peaks.  A major peak is the most abundant peak within a cluster of smaller peaks.  For this introductory Instructable, the largest (most abundant) peak in each cluster will represent the entire cluster.1.       Use a highlighter to identify the most abundant peak in each cluster.2.       Determine the numerical m/z value for each of these major peaks and write all of them down in your notebook.-Note that the molecular ion is not necessarily the most abundant peak.  The most abundant peak is, by naming convention, the base peak.Example:  Major peaks at m/z 15, 29, 43, 57, and 184 (see above sample spectrum).", "step_imgs": ["https://cdn.instructables.com/FNI/9L07/IVO3HVWJ/FNI9L07IVO3HVWJ.LARGE.jpg"], "step_title": "Step 2: Step 2:  Identify Major Fragmentation Clusters"}, {"step": 3, "steps_text": "Smaller peaks clustered around each major peak are largely present due to differences in which of the two fragments retains the ion, gain or loss of protons, and naturally occurring elemental isotopes.  For a simple alkane or halogenated alkane the \u2206m (mass difference between two singly charged ions) values will typically involve the gain or loss of about 14 or 15 Daltons between major peak clusters.  These mass differences represent the gain or loss of a methyl (-CH3) or methylene (-CH2-) from the larger ion.  Some long or branched molecules exhibit advanced fragmentation patterns, so you should assume the presence of a halogen only if there is a 17 Dalton or greater \u2206m value between major peaks in a haloalkane.1.       Use the simplified \u201cmass spectrum\u201d from Step 2 to determine the mass difference (\u2206m) between each peak and the next peak on the spectrum.2.       Use your calculator and list of major m/z peaks to determine numerical \u2206m values.  Write these values down in your notebook.Example:  \u2206m values between major peaks (starting from the left, m/z 15) are 14, 14, 14, and 127 Daltons.", "step_imgs": ["https://cdn.instructables.com/F07/X8EF/IVO3HVZ0/F07X8EFIVO3HVZ0.LARGE.jpg"], "step_title": "Step 3: Step 3:  Determine the \u2206m for Each Major Peak"}, {"step": 4, "steps_text": "Mass differences between major peaks will often exceed the 14 or 15 mass units representing a methyl or methylene carbon.  A \u2206m value greater than 16 Daltons indicates the presence of a heteroatom, or atom that is not carbon or hydrogen (for our study, a halogen).  Common halogens (Group 17 on the Periodic Table) include fluorine, chlorine, bromine and iodine.  These can essentially replace one hydrogen-to-carbon bond of an alkane and dramatically alter its chemical and physical properties.  Luckily, singularly halogenated alkanes have easily identifiable mass spectra (see iodobutane spectra below).1.       Check your list of mass differences created in Step 3.  If one of these \u2206m values is larger than 16 mass units, use the Periodic Table to determine which halogen the molecule contains.2.       Use the Periodic Table (or the table above, for convenience) to determine if the halogen is element F, Cl, Br, or I.  Write this halogen down in your notebook.Example:  The \u2206m value of 127 Daltons from Step 3 indicates the presence of an iodine atom in the example spectra (see previous table).", "step_imgs": ["https://cdn.instructables.com/F36/3HW2/IVO3HW0G/F363HW2IVO3HW0G.LARGE.jpg", "https://cdn.instructables.com/FUT/PLS4/IVO3HW6M/FUTPLS4IVO3HW6M.LARGE.jpg"], "step_title": "Step 4: Step 4:  Identify Any Heteroatoms"}, {"step": 5, "steps_text": "Now that the halogen has been identified, the length of the carbon chain itself can be determined.  The general chemical formula of an alkane is CnH2n+2, but, since the halogen effectively replaces one of the iodobutane hydrogens, the modified alkane formula is CnH2n+1X (where X is a halogen).1.       Look to the largest peak on your mass spectrum that does not include the halogen (molecular ion mass minus halogen mass).2.       Use this mass, algebra and the masses of carbon and hydrogen to solve for n (see example).3.       Add this number back into the chemical formula (CnH2n+1) and append the halogen for the complete chemical formula.  Write this down in your notebook.Example:  The largest non-halogenated m/z value from Step 2 is 57.  By plugging this into the equation above (CnH2n+1X) and substituting the atomic masses of carbon (12 Da.) and hydrogen (1 Da.) (12n + 1(2n+1) = 57; see Periodic Table for masses), the example alkane formula can be determined to be C4H9X.  The previously determined halogen (iodine) can then be added to this formula for a final identification of C4H9I.", "step_imgs": ["https://cdn.instructables.com/F6H/X8IH/IVO3HWBD/F6HX8IHIVO3HWBD.LARGE.jpg"], "step_title": "Step 5: Step 5:  Identify Remainder of Molecule"}, {"step": 6, "steps_text": "1.      Combine the name from the number of carbons with the halogen prefix from the tables above to give the total chemical name.  Write this down in your notebook.Example:  C4H9I = butane (C4) + iodo- (I) = iodobutane", "step_imgs": ["https://cdn.instructables.com/F64/HUUN/IVO3HWJW/F64HUUNIVO3HWJW.LARGE.jpg"], "step_title": "Step 6: Step 6:  Name the Molecule   "}, {"step": 7, "steps_text": "The National Institute of Standards and Technology (NIST) database contains a collection of standardized mass spectra.  This database can be used to confirm a naming decision made based on a mass spectrum.1.   Simply use a Google search of \u201c[chemical name] NIST EI Spectra\u201d and go to the http://webbook.nist.gov option to check your work.  The two spectra (provided and NIST standard) should match closely.  A close match indicates correct identification.1.       If the major peaks of the NIST mass spectrum do not match your teaching spectra:\u00b7       Recheck your naming of the chemical formula (Step 6)\u00b7       Recheck your identification of major peaks for a missed cluster of peaks (Step 2)Example:  See NIST EI spectra of iodobutane (above).  This closely matches the example spectra in Steps 2 and 3.Further InformationYou now have a basic knowledge of the landmarks and meaning of a simple mass spectrum.  If this topic interests you, consider exploring the following intermediate topics:\u00b7       MS analysis of oxygen (and other non-halogen heteroatom) containing compounds, such as alcohols, ethers and carboxylic acids\u00b7       MS identification of hydrocarbon isomers (molecules with the same chemical formula but containing different bond patterns)\u00b7       MS application to protein analysis (proteomics)The following link will take interested readers to a good intermediate level primer on mass spectrometry (courtesy of Thermo Fisher Scientific):https://www.thermofisher.com/us/en/home/life-science/protein-biology/protein-biology-learning-center/protein-biology-resource-library/pierce-protein-methods/overview-mass-spectrometry.html", "step_imgs": ["https://cdn.instructables.com/F90/5ZJG/IVO3HWO6/F905ZJGIVO3HWO6.LARGE.jpg"], "step_title": "Step 7: Step 7:  Check Your Work"}], "channel": "Science"}, {"category": "technology", "description": "I was looking around Instructables and saw many chemistry related Instructables, so I thought one on stoichiometry would help. Basically stoichiometry (my definition) is the study of amounts in relation to a chemical reaction. Stoichiometry is the base for all modern chemistry. The method I'm going to use is like a flow chart opposed to the \"railroad tracks\" that is taught by most teachers and books.\nThis Instructable is good for people who are just learning stoichiometry and those who want an easier way. This is also great for all those people who like to use chemical reactions to blow stuff up. You can find the right amount to optimize the reaction and save reactants so you don't waste money.", "title": "Stoichiometry", "url": "https://www.instructables.com/id/Stoichiometry/", "section": "technology", "steps": [{"step": 1, "steps_text": "At the center of stoichiometry is the mole. The mole allows a chemist to find what masses of substances to use in a reaction.\nOne mole is an amount of a substance that contains 6.022\u00d710^23 atoms. To help you understand how astronomically big this number is if I gave everyone on Earth (estimated 7 billion) $3 million dollars a day; I could keep handing out money for 78564 years. Yes that is right. Almost 80 thousand years.\nThere are many different ways to find moles depending on what you are working with. For solids or liquids that aren't solutions its sample mass/molecular weight=moles. Use a periodic table to find the molecular weight.\u00a0 For example to find one mole of lets say carbon-14 the equation is x/14=1\u00a0\nx=14grams\nAnother example: Find 5 moles of H2O.\nx/18=5\nx=90grams\nFind how many moles are in 20g. of NaCl.\n20/58=x\nx=.345\nI think you can get it from that.", "step_imgs": ["https://cdn.instructables.com/FXR/2ZUX/GBOTQ56A/FXR2ZUXGBOTQ56A.LARGE.jpg"], "step_title": "Step 1: The Mole"}, {"step": 2, "steps_text": "Now that you know the mole the second thing you need to do stoichiometry is balanced chemical equations. This is just the basic way. There are more complex equations that can't be balanced this way.\nFirst lets take a simple and common reaction. Combustion. The definition of combustion is a fuel when burned with oxygen produces only H2O and CO2.\nHere we have the combustion reaction of sugar (which happens in your cells and powers your body).\nC6H12O6 + O2 --> H2O + CO2\nTo balance this all you need to do is get the same number of atoms on both sides. First off just pick a molecule(any of them work but the biggest is usually the best) and assign it a number (again any number works but to keep it easy use one).\nSo far we have:\nC6H12O6 + O2 --> H2O + CO2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (1)\nSo on the left side we have 6 carbon atoms 12 hydrogen atoms and an unknown amounts of oxygen atoms.\nTo balance we need the same number on each side. Since we know the left sides number of carbon and hydrogen atoms we know the right sides number. We have to balance the molecules to have the same number of atoms.\n6 H2O- Since we have 12 hydrogen atoms and each molecule has 2 atoms we 6 molecules of water.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n6 CO2- Since we have 6 carbon atoms and each molecule has one atom in it we need 6\nmolecules of CO2\nSo now the equation looks like that and we are almost done:\nC6H12O6 + O2 --> H2O + CO2\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (1)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (6)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (6)\nNow that we know the number of molecules on the right we know the number of oxygen atoms in the equation. We have six H2O molecules each with one oxygen atom, so we have 6 oxygen atoms in those molecules. We also have six CO2 molecules each with two oxygen atoms in it, so we have 12 oxygen atoms in those molecules. So we have a total of 18 oxygen atoms on the left side.\n6 H2O= 6 oxygen atoms\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n6 CO2= 12 oxygen atoms\n6+12=18 atoms\nIf we know the number on the right side we know the number on the left side. Since we have one molecule of sugar that needs six atoms of oxygen; we subtract six from 18.\n18-6=12\nWe have an unknown amount of oxygen molecules each with 2 oxygen atoms each and we have 12 oxygen atoms left. To finish just divide the number of oxygen atoms left by the number you need in each molecule.\n12/2=6 oxygen molecules\nThat is the last number we need and the equation is balanced\nC6H12O6 + O2 --> H2O + CO2\n\u00a0\u00a0\u00a0\u00a0\u00a0 (1)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (6)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (6)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (6)\nThat one was really easy but sometimes you will get an equation that doesn't work out so well. Sometimes one of the number wont come out as a whole number and that just wont work, because you can't have half of a molecule. Don't despair though all your hard work wasn't in vain just multiple by whatever makes that number a whole number\nExample:\nC3H7NO2 + O2 --> CO2 + H2O + NO2\n\u00a0\u00a0\u00a0\u00a0 (1)\n3\u00a0 carbon, 7 hydrogen, 1 nitrogen dioxide, x oxygen\nC3H7NO2 + O2 --> CO2 + H2O + NO2\n\u00a0\u00a0\u00a0\u00a0\u00a0 (1)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (3)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (3.5)\u00a0\u00a0\u00a0\u00a0 (1)\n3 CO2- 6 oxygen atoms \u00a0 3.5 H2O- 3.5 oxygen atoms\n6+3.5=9.5 oxygen atoms\n9.5/2=4.75 oxygen molecules\nC3H7NO2 + O2 --> CO2 + H2O + NO2\n\u00a0\u00a0\u00a0\u00a0\u00a0 (1)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (4.75)\u00a0\u00a0\u00a0\u00a0\u00a0 (3)\u00a0\u00a0\u00a0\u00a0 (3.5)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (1)\nAs you can see not all the numbers came out as whole numbers, but it can easily be fixed by multiplying it by the least common multiple. In this case its 4.\n\u00a0 C3H7NO2 + O2 --> CO2 + H2O + NO2\n\u00a0\u00a0\u00a0\u00a0\u00a0 (1)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (4.75)\u00a0\u00a0\u00a0\u00a0\u00a0 (3)\u00a0\u00a0\u00a0\u00a0\u00a0 (3.5)\u00a0\u00a0\u00a0\u00a0\u00a0 (1)\u00a0\u00a0 * 4\n=\nC3H7NO2 + O2 --> CO2 + H2O + NO2\n\u00a0\u00a0\u00a0\u00a0\u00a0 (4)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (19)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (12)\u00a0\u00a0\u00a0\u00a0 (14)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 (4)\nAlways remember to check your work. Once you get this down its on to the actual stoichiometry. Oh and one last thing once you have balanced the equation write it like this:\n4 C3H7NO2 + 19 O2 --> 12 CO2 + 14 H2O + 4 NO2", "step_imgs": ["https://cdn.instructables.com/FA9/4BD5/GBOTQ56B/FA94BD5GBOTQ56B.LARGE.jpg"], "step_title": "Step 2: Balancing Chemical Equations"}, {"step": 3, "steps_text": "First the labels of each part of a chemical equation.\n4 C3H7NO2 + 19 O2 --> 12 CO2 + 14 H2O + 4 NO2\n^\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ^ \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ^\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ^\ncoefficient\u00a0\u00a0\u00a0\u00a0 reacts\u00a0\u00a0\u00a0\u00a0 produces \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 chemical \u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 with\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 symbol\nThe basic outline:\nA,B,C,D- coefficients\nCHEM- chemical substance\nSm- sample mass\nMw- molecular weight\nn-moles\nA CHEM + B CHEM --> C CHEM + D CHEM\n\u00a0\u00a0\u00a0\u00a0\u00a0 Sm\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Sm\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n\u00a0\u00a0 Sm/Mw\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Mw*n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 n-----------------n/A=n/D----------------n\nNow to describe what this means. If you start with the mass of A CHEM then you divide the mass of that substance by its molecular weight(found using the periodic table) to find the moles. Now multiple the number of moles by the coefficient of substance you find the moles of and divide it by the coefficient of the substance you are translating it into. This gives you the number of moles. You can now find find the mass of the product produced using the Sm/Mw=n equation. If you rework the equation its Mw*n=Sm. That may look difficult but its extremely easy. Some examples using the sugar combustion equation from the last step.\nYou have 26.3g. of sugar how many grams of water will be produced.\nC6H12O6\u00a0\u00a0 +\u00a0\u00a0\u00a0 6 O2\u00a0\u00a0 -->\u00a0\u00a0\u00a0 6 H2O \u00a0\u00a0 + \u00a0 6 CO2\n\u00a0\u00a0\u00a0 26.3g\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 38.59g\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 l \u00a0\u00a0\u00a0\u00a0\n26.3/180\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 44*.877\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n.146 moles-- .146/1 = .146*6 = .877 -- .877 moles\n38.59g of CO2 will be produced\nThis also works if you know the moles of one of the substances. Here is another using the electrolysis of water.\nBalance the equation and then find the moles and grams of oxygen produced if you have 3 moles of water.\nH2O --->\u00a0 H2 + O2\n1 H2O ---> 1 H2 + .5 O2 *2\n2 H2O ---> 2 H2 + 1 O2\n\u00a0\u00a0\u00a0\u00a0\u00a0 x\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 48g\n\u00a0\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n\u00a0\u00a0 x/18\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 32*1.5\n\u00a0\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n\u00a0\u00a0 \u00a0 3 ----- (3/2)1 -----1.5\n\u00a0 1.5moles\u00a0 48g of oxygen produced\nAgain remember to check your work. You can use the law of conservation of mass to do this. Mass on both sides of the equation must be the same. If you add up the mass for one side it should equal the sum of the mass on the other side. If not you messed up somewhere and need to review your work.\nYou may have noticed I said this is for solids and liquids, but I have been using gases. Theoretically you can use this for any type of stoichiometry if you know the chemical equation and the mass of one of the substances, but in practice gases are difficult to work with, so finding the mass becomes problematic. You need a different mole equation to work with gases.", "step_imgs": [], "step_title": "Step 3: Stoichiometry of Solids or Liquid Non-solutions"}, {"step": 4, "steps_text": "Stoichiometry with gases everything stays the same but the equation you use to find the moles. It only takes basic knowledge of the gas laws to know why this is. Gas changes volume depending on temperature, and pressure. The relationship between volume and temperature is Charles's law which is at constant pressure a given mass of gas's volume increases as a factor of its temperature. Basically as it gets hotter its volume increases. The equation is V/T=k.\nV- volume\nT- temperature\nk- constant\nCharles's law must be done in Kelvin because it is an direct variation.\nThe other law is Boyle's law which shows the relationship between pressure and volume. The law states that at a constant temperature a give mass of gas's volume decreases as pressure goes up. The equation is PV=k\nP- pressure\nV- volume\nk- constant\nGay-Lussac's law states the relationship between pressure and temperature. Again it must be done in Kelvin, since its a direct variation. In simple words it states as pressure increases so does temperature. the equation is P/T=k.\nP- pressure\nT- temperature\nk- constant\nYou can combine all three of those laws to get the combine gas law. Its equation is PV/T=k. To use this with stoichiometry you need to combine it with one last law, which is Avogadro's law. It states that at constant temperature and pressure equal volumes of gas contain the same number of moles. The equation is V/n=k\nV- volume\nn- moles\nk- constant\nWhen all four of these laws are combined together they make the ideal gas law. The equation for that (this is the important part since we will be using it for stoichiometry) is PV=nRT.\nR is the constant. The number changes depending on what units you measure it in. The basic outline of the units is PV/nT. I will be using the units kPa*L/n*K.\nkPa- kilo Pascals\nL- liters\nn- moles\nK- Kelvin\nThe n*K part will never change since the temperature must be measured in Kelvin and there are no other units for moles. The constant I am using is 8.314 L*kPa/n*K. To make it easier to solve stoichiometry problems arrange the equation\nso it looks like this PV/8.314*K.\nNow on to the actually stoichiometry. Nothing is really different just a different equation.\nHere is an example using the reaction between oxygen and iron to produce ferric oxide.\nYou have 5L. of oxygen in a lab that is 300 Kelvin and 22kPa. How many grams of iron(III) oxide can you produce.\n3 O2 \u00a0\u00a0 +\u00a0\u00a0 4 Fe \u00a0 -->\u00a0\u00a0 2 Fe2O3\n\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4.64g\n22*5/8.314*300=\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n.044\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 .029*160\n\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n.044----(0.044/3)2=.029---.029\n4.64g of ferric oxide can be produced\nSee exactly the same just using PV/RT.\nNote that this will work for all gases, but if the gas is near is condensation point it will not work for it.", "step_imgs": ["https://cdn.instructables.com/FVB/UNHS/GBSBHGVJ/FVBUNHSGBSBHGVJ.LARGE.jpg"], "step_title": "Step 4: Stoichiometry of Gases"}, {"step": 5, "steps_text": "Stoichiometry with solutions is the same as before just with a different equation for moles (starting to see a pattern here?). When doing doing stoichiometry with solutions you need to know the concentration of reactants in your solvent. Specifically you need to know the moles per unit of solvent. There are many different ways of doing this, but I'm going to use molarity. Molarity is simply moles per liter.\u00a0\nTo find molarity of a solution we use n/L=M (M stands for molarity). To use it for stoichiometry arrange it so it looks like M*L=n.\nI'm going to describe how to make a 50mL. .75 molarity solution of NaCl in water. First start by doing the math.\n.75*.05 = .0375 moles\nSo I need .0375 moles of salt. Do the math to find what that is in grams.\n.0375*28 = 1.05g of salt\nNext is to make the actual solution. Start by filling a graduated cylinder with around 40mL of water. Now add the salt and let it completely dissolve. Finally add water up to 50mL.\nAlways when making a solution using molarity use less solvent then what you want the final solution to be dissolve the solute and then add the solvent to the final amount. This is because the solute takes up space too; if you add the solute to the measured amount of solvent it would come out as taking up more volume then you want, and you will have the wrong molarity.\nUsing solutions is great for chemical reactions, since it speeds them up. This is because the solvent breaks apart the ionic bonds of reactants. Besides that is also allows more atoms to get close enough to react. Since the solvent breaks apart the ionic compounds the chemical equation must be wrote different to reflect this.\nExample:\nAgNO3 + NaCl -->\u00a0 NaNO3 + AgCl\nWhen dissolved in a solvent it would look like this:\nAg+(aq) + NO3- (aq) + Na+ (aq) + Cl-(aq) --> AgCl (s) + NO3- (aq) + Na+ (aq)\nSince the NO3- + Na+ don't participate in the reaction they can be removed.\u00a0 The equation would look like this.\nAg+(aq) + Cl-(aq) --> AgCl(s)\nThe letters in parenthesis represent the state the substance is in\n(s)- solid\n(l)- liquid\n(g)- gas\n(aq)- aqueous or in solution\nHere is an example of solution stoichiometry using the reaction above.\nYou have 4L of 10 molarity solution of AgNO3. How many grams AgCl can be produced.\nAgNO3 + NaCl --> NaNO3 + AgCl\n\u00a010mole/L\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 5720g.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n10*4=40\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 40*143\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n\u00a0\u00a0\u00a0\u00a0 40------------(40/1)1------------40\n5720 grams would be produced.\nYou may have noticed I didn't use the ionic equation I showed above. That is because it doesn't have to be used, but it should be. I didn't because I thought this more clearly demonstrated the stoichiometry. That and I am lazy.\u00a0", "step_imgs": [], "step_title": "Step 5: Stoichiometry of Solutions"}, {"step": 6, "steps_text": "Yes stoichiometry can even be used with thermodynamics. It shows the movement of energy through out a reaction. There is two types of energy that can used. There is enthalpy (heat), or free energy. Entropy (randomness) can also be used. Free energy is just the combination of entropy and enthalpy.\nThere are two ways you find these. There are tables that\u00a0 list all three. These can be in many different units, so make note of it. The energy differs for every substance so you have to look them all up. The other way to find it is using the equation G=H-S*K.\nG- free energy\nH- enthalpy\nS- entropy\nK- temperature in Kelvin\nUsing this method you still need two of the three, so I think you should use a table for all three unless you want to practice your algebra.\u00a0\nThe important thing to remember here (and relates most to stoichiometry) is that its measured in units of energy per mole. That lets use do stoichiometry with it. The units I'm using are joules/mole or J/mole.\nFor example I'll use a reaction that very relevant to you. The combustion of sugar using enthalpy.\nYou have 30g. of sugar. How much energy can you get from it.\nC6H12O6 + 6 O2 --> 6 H2O + 9 CO2\nC6H12O6 + 6 O2 - 1250 kJ/mol --> 6 H2O + 6 CO2 + 209 kJ\n\u00a0\u00a0\u00a0\u00a0\u00a0 30g.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n\u00a0 \u00a0 \u00a0 \u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n\u00a0\u00a0\u00a0 30/180\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 l\n\u00a0\u00a0\u00a0 .167 moles----\u00a0 .167*1250-----------------------------------209 kJ\nYou get 209 kJ of energy.\nThe first thing you may have noticed is that I changed the sign from a - to a +. That is because the number in the equation is the standard enthalpy of formation or the energy needed to create it. Since we are destroying it we get that energy back. All you have to really know is switch the signs. The second thing you make have noticed is that I didn't include the energy from the oxygen. That is because oxygen is an element and, all elements have a standard enthalpy of formation of 0.\nThis part may be wrong so correct me if I am. Its been awhile since I have used it, but I'm pretty sure this work.", "step_imgs": [], "step_title": "Step 6: Thermochemical Stoichiometry"}, {"step": 7, "steps_text": "One of the best things about stoichiometry is using it to find the limiting reactant. You can find what reactant is used up first and stops the reactions. It is very simple you just find the moles of both reactants, and convert them both to moles of one of the products, but remember it has to be the same product. Whichever is the lowest is the limiting reactant.\nHere is an example using the reaction of Cl2 and Na to make table salt.\nYou have 20g. of Na and 35g. of Cl which is the limiting reactant.\n2 Na\u00a0 +\u00a0 Cl2\u00a0 --> 2 NaCl\n\u00a0 20\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 35\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\n20/11\u00a0 \u00a0\u00a0 35/17\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0 l\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \u00a0\u00a0 2.06- (2.06/1)2 - 4.12\n\u00a01.82--------- (1.82/2)1 ------------- .91\nSodium is the limiting reactant.", "step_imgs": [], "step_title": "Step 7: Limiting Reactant"}, {"step": 8, "steps_text": "If there is anything I need to make clearer or something I did wrong please tell me. This is my first instructable so go easy on me. :)\nI hope this helps someone with stoichiometry. Now go use it to do some awesome chemical reactions. I suggest blowing something up or something involving fire. Maybe that is just me?", "step_imgs": ["https://cdn.instructables.com/F4P/7458/GBOTJMGJ/F4P7458GBOTJMGJ.LARGE.jpg"], "step_title": "Step 8: Now You Know Stoichiometry"}], "channel": "Science"}, {"category": "technology", "description": "21 July Edit - See how I used the IR thermometer in my Laser Experiments!https://www.instructables.com/id/LASER-HEAT/Intro: You may already have one of those very useful IR thermometers... just point, shoot, and read the temperature.\u00a0 Are they not great?\u00a0 I have two.\u00a0 But, what if you want to record the temperature readings on your PC?\u00a0 This Instructable will show you how to build your own IR thermometer that will log to the PC - an added benefit is that the data can be graphed in Excel or displayed in realtime using a free Shareware program called StampPlot Pro from the company SelmaWare Solutions.\u00a0 The total parts costs should come under $50 but a significant amount of the purchase can be reused on your next PICAXE project. The device communicates with the PC on a USB link.\u00a0 After construction, you can easily modify the device if you desire to communicate over a free COMM port on the PC.\u00a0 This will free up the USB adapter for use on another project.\u00a0 After assembling everything and doing the programming and testing, I transferred the parts to a minibox and added a 5V regulator so that I could run the project from a 9V battery. The ground-work for this PICAXE came from P.H. Anderson on www.phanderson.com and I have used his code with written permission.\u00a0 The site is a great source for the PICAXE chips and for the MLX90614 IR sensor from Melexis.\u00a0 Of course, there are other sources but my personal experience with ordering from phanderson.com has been very positive.\u00a0 If you are new to PICAXE Basic programming, the site has many well documented examples on his website.Part One : Inventory of parts and potential vendors  1) PICXE-20X2 and Protoboard\u00a0\u00a0\u00a0 \"A\"  2) Melexis MLX90614\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \"A\"  3) 10K 1/4 watt resistor\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"*\"  4) 22K 1/4 watt resistor\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"*\"  5) 4.7K 1/4 watt resistor X 2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"B\" Vendor Parts List (suggested):  A\u00a0\u00a0\u00a0\u00a0 www.phanderson.com/picaxe  B\u00a0\u00a0\u00a0\u00a0 RadioShack  *\u00a0\u00a0\u00a0\u00a0\u00a0 Note: The PICAXE-20X2 Protoboard includes the Protoboard, the PICAXE chip, pullup resistors, and USB interface for one price.Part Two: Download the free software To program your PICAXE, you will need the free PICAXE Programming Editor from: http://www.rev-ed.co.uk/picaxe/software.htm\u00a0 Just download the software and install on your PC.\u00a0 Your protoboard and PICAXE will come programmed with a simple test program to ensure that everything is working correctly... the test program simply flashes the red LED.\u00a0 You will also need the USB driver software.\u00a0 It is available here: http://www.ftdichip.com/Drivers/VCP.htmPart Three: Connecting the MLX90614 to power and to the PICAXE Build the circuit on the protoboard being careful to observe the MLX90614 pinout.\u00a0 A bottom-view image is included in this Instructable.\u00a0 In our case (bottom-view), Pin4 is VSS which is ground for our 5V USB design.\u00a0 Pin3, VDD, will be connected to +5 volts.\u00a0 Both Pin1 and Pin2 have a pull-up 4.7K (yellow-violet-red) resistors that are connected to +5V.\u00a0\u00a0 Pin1 is connected to Pin-11 of the PICAXE and Pin2 is connected to Pin-13 of the PICAXE.\u00a0 The rest of the wiring on the protoboard can be left exactly as it was shipped.\u00a0 Just ensure that you test the board when it arrives and that the red LED flashed properly.\u00a0 You may find a few components that need \"pushing down\" into the breadboard if the unit does not come up.Part Four: Programming the PICAXE with the temperature acquisition code To build your thermometer, the sample code located here: http://www.phanderson.com/picaxe/mlx90614.html must be slightly modified and I have made available the modification to the code below. Open up the Programming Editor, connect the USB cable to the PC, install the USB software driver.\u00a0 Then copy the code below into an empty window in the Programming Editor and save it with a name like MLX90614.BAS.\u00a0 To program your PICAXE, simply click the \"Program\" button in the editor.\u00a0 (Hint: if you have a syntax error, you may need to paste the code into Notepad first, save it, and then load it into the Editor.)  Code is in TXT format in the attached file.\u00a0 Download and rename to .BAS to utilize in the PICAXE program editor.Part Five: Working with the PC and your thermometer Now that you have a connection from your temperature project to the PC, you may wish to graph the data or save the data to a log file on the disk.\u00a0 There are many options available, but I will discuss two simple approaches for capturing the data in text format. 1) Use the PICAXE Programming Editor \"Terminal\" to capture the serial output.\u00a0 This project will send serial data at 2400 BAUD, no parity, 8 data bits, and 1 stop bit... (2400,n,8,1) 2) On Microsoft Windows XP, you can use the Hyper Terminal to capture data using the settings in #1 Both of the above scenarios will allow you to copy data into the OS buffer and then transfer that data to another program, such as Excel, by simply \"pasting\" the text in the buffer. Another option is that you can use a free program like StampPlot Pro from SelmaWare to plot the serial data in realtime.\u00a0 I used the \"Calc-n-Plot\" graph option of StampPlot Pro because I can add a math function into to the program which works on each received data element received from the PIC.\u00a0 The data from the project is in degrees Kelvin and the last digit is the decimal place, so you must divide by 10 to recover the decimal.\u00a0 You can then work with Kevin directly or convert to Celsius or Fahrenheit by simple math. The formula for converting the Kelvin degrees (last digit of serial data is the \"tens\" decimal place) is: data_K / 10 x 1.8 - 459.67 = data_F.n In Excel, you can use the following formula to convert the serial data to degrees Fahrenheit:=$A2/10*9/5-459.67\u00a0 (assuming A2 is the first data element... A3 would be the next, etc.) I hope you have fun with your new IR temperature recording thermometer. -Ray Updates: 20110721 - Removed inline code and reflected attached TXT file to enhance readability 20110701 - Updated to reflect new etched circuit board (negotiating for a few on eBay soon... check back) 20110701 - Updated to show new project box (Newark #H97, 9V about $5)", "title": "A PICAXE Infrared \"logging\" Thermometer", "url": "https://www.instructables.com/id/A-PICAXE-Infrared-logging-Thermometer/", "section": "technology", "steps": [], "channel": "Microcontrollers"}, {"category": "technology", "description": "21 July Edit - See how I used the IR thermometer in my Laser Experiments!https://www.instructables.com/id/LASER-HEAT/Intro: You may already have one of those very useful IR thermometers... just point, shoot, and read the temperature.\u00a0 Are they not great?\u00a0 I have two.\u00a0 But, what if you want to record the temperature readings on your PC?\u00a0 This Instructable will show you how to build your own IR thermometer that will log to the PC - an added benefit is that the data can be graphed in Excel or displayed in realtime using a free Shareware program called StampPlot Pro from the company SelmaWare Solutions.\u00a0 The total parts costs should come under $50 but a significant amount of the purchase can be reused on your next PICAXE project. The device communicates with the PC on a USB link.\u00a0 After construction, you can easily modify the device if you desire to communicate over a free COMM port on the PC.\u00a0 This will free up the USB adapter for use on another project.\u00a0 After assembling everything and doing the programming and testing, I transferred the parts to a minibox and added a 5V regulator so that I could run the project from a 9V battery. The ground-work for this PICAXE came from P.H. Anderson on www.phanderson.com and I have used his code with written permission.\u00a0 The site is a great source for the PICAXE chips and for the MLX90614 IR sensor from Melexis.\u00a0 Of course, there are other sources but my personal experience with ordering from phanderson.com has been very positive.\u00a0 If you are new to PICAXE Basic programming, the site has many well documented examples on his website.Part One : Inventory of parts and potential vendors  1) PICXE-20X2 and Protoboard\u00a0\u00a0\u00a0 \"A\"  2) Melexis MLX90614\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0 \"A\"  3) 10K 1/4 watt resistor\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"*\"  4) 22K 1/4 watt resistor\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"*\"  5) 4.7K 1/4 watt resistor X 2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \"B\" Vendor Parts List (suggested):  A\u00a0\u00a0\u00a0\u00a0 www.phanderson.com/picaxe  B\u00a0\u00a0\u00a0\u00a0 RadioShack  *\u00a0\u00a0\u00a0\u00a0\u00a0 Note: The PICAXE-20X2 Protoboard includes the Protoboard, the PICAXE chip, pullup resistors, and USB interface for one price.Part Two: Download the free software To program your PICAXE, you will need the free PICAXE Programming Editor from: http://www.rev-ed.co.uk/picaxe/software.htm\u00a0 Just download the software and install on your PC.\u00a0 Your protoboard and PICAXE will come programmed with a simple test program to ensure that everything is working correctly... the test program simply flashes the red LED.\u00a0 You will also need the USB driver software.\u00a0 It is available here: http://www.ftdichip.com/Drivers/VCP.htmPart Three: Connecting the MLX90614 to power and to the PICAXE Build the circuit on the protoboard being careful to observe the MLX90614 pinout.\u00a0 A bottom-view image is included in this Instructable.\u00a0 In our case (bottom-view), Pin4 is VSS which is ground for our 5V USB design.\u00a0 Pin3, VDD, will be connected to +5 volts.\u00a0 Both Pin1 and Pin2 have a pull-up 4.7K (yellow-violet-red) resistors that are connected to +5V.\u00a0\u00a0 Pin1 is connected to Pin-11 of the PICAXE and Pin2 is connected to Pin-13 of the PICAXE.\u00a0 The rest of the wiring on the protoboard can be left exactly as it was shipped.\u00a0 Just ensure that you test the board when it arrives and that the red LED flashed properly.\u00a0 You may find a few components that need \"pushing down\" into the breadboard if the unit does not come up.Part Four: Programming the PICAXE with the temperature acquisition code To build your thermometer, the sample code located here: http://www.phanderson.com/picaxe/mlx90614.html must be slightly modified and I have made available the modification to the code below. Open up the Programming Editor, connect the USB cable to the PC, install the USB software driver.\u00a0 Then copy the code below into an empty window in the Programming Editor and save it with a name like MLX90614.BAS.\u00a0 To program your PICAXE, simply click the \"Program\" button in the editor.\u00a0 (Hint: if you have a syntax error, you may need to paste the code into Notepad first, save it, and then load it into the Editor.)  Code is in TXT format in the attached file.\u00a0 Download and rename to .BAS to utilize in the PICAXE program editor.Part Five: Working with the PC and your thermometer Now that you have a connection from your temperature project to the PC, you may wish to graph the data or save the data to a log file on the disk.\u00a0 There are many options available, but I will discuss two simple approaches for capturing the data in text format. 1) Use the PICAXE Programming Editor \"Terminal\" to capture the serial output.\u00a0 This project will send serial data at 2400 BAUD, no parity, 8 data bits, and 1 stop bit... (2400,n,8,1) 2) On Microsoft Windows XP, you can use the Hyper Terminal to capture data using the settings in #1 Both of the above scenarios will allow you to copy data into the OS buffer and then transfer that data to another program, such as Excel, by simply \"pasting\" the text in the buffer. Another option is that you can use a free program like StampPlot Pro from SelmaWare to plot the serial data in realtime.\u00a0 I used the \"Calc-n-Plot\" graph option of StampPlot Pro because I can add a math function into to the program which works on each received data element received from the PIC.\u00a0 The data from the project is in degrees Kelvin and the last digit is the decimal place, so you must divide by 10 to recover the decimal.\u00a0 You can then work with Kevin directly or convert to Celsius or Fahrenheit by simple math. The formula for converting the Kelvin degrees (last digit of serial data is the \"tens\" decimal place) is: data_K / 10 x 1.8 - 459.67 = data_F.n In Excel, you can use the following formula to convert the serial data to degrees Fahrenheit:=$A2/10*9/5-459.67\u00a0 (assuming A2 is the first data element... A3 would be the next, etc.) I hope you have fun with your new IR temperature recording thermometer. -Ray Updates: 20110721 - Removed inline code and reflected attached TXT file to enhance readability 20110701 - Updated to reflect new etched circuit board (negotiating for a few on eBay soon... check back) 20110701 - Updated to show new project box (Newark #H97, 9V about $5)", "title": "A PICAXE Infrared \"logging\" Thermometer", "url": "https://www.instructables.com/id/A-PICAXE-Infrared-logging-Thermometer/", "section": "technology", "steps": [], "channel": "Microcontrollers"}, {"category": "technology", "description": "***If photos and links are not appearing, refresh the pageThis is an instructable for an arduino pH regulator or meter: --- The regulator is meant for reactions that start at a certain pH and naturally decrease/increase in pH due to the reaction. However, for many reactions, it is desired to stay at the starting pH. So, if the reaction deviates too far from the desired pH, this arduino project will pump in acid or base to bring the pH back to normal. --- This project can also be used just simply as a pH sensor that reads pH of any solution.", "title": "PH Regulater/Meter - Arduino", "url": "https://www.instructables.com/id/PH-RegulaterMeter-Arduino/", "section": "technology", "steps": [{"step": 1, "steps_text": "-Arduino Uno -Computer and keyboard-12V Peristaltic Liquid Pump-Analog pH Sensor / Meter Pro Kit for Arduino-I2C 20x4 Arduino LCD Display Module-IN4001 Diode-PN2222 Transistor-12V DC Power Adapter-Male to Female Jumper Wires-Male to Male Jumper Wires-Alligator Clips-Arduino USB Cable-Breadboard", "step_imgs": [], "step_title": "Step 1: Necessary Materials"}, {"step": 2, "steps_text": "Solder the diode between the prongs of the peristaltic pump as pictured. Be sure to put the silver band of the diode pointing towards the (+) prong of the pump. This will protect the motor of the pump.", "step_imgs": ["https://cdn.instructables.com/F67/38ZL/JLCKKZFT/F6738ZLJLCKKZFT.LARGE.jpg"], "step_title": "Step 2: Solder Diode Between Prongs of Pump"}, {"step": 3, "steps_text": "A4 -------------------- to the SDA of LCD A5 -------------------- to the SCL of LCDGND ----------------- to GND of LCD5V -------------------- to VCC of LCDA0 -------------------- to middle prong (base) of transistorGND ----------------- to **left prong (emitter) of transistor,  **referred to flat side of transistor(-) prong pump ---- to **right prong (collector) of transistor(+) prong pump ---- to Vin (12V)A3 -------------------- to signal wire (blue) of pH meter5V -------------------- to (+) wire (red) of pH meterGND ----------------- to (-) wire (black) of pH meter__________________________________________________________________***See photos for more detail", "step_imgs": ["https://cdn.instructables.com/FYX/YWB8/JLCKKZH2/FYXYWB8JLCKKZH2.LARGE.jpg", "https://cdn.instructables.com/F6D/5SND/JLCKKZIB/F6D5SNDJLCKKZIB.LARGE.jpg", "https://cdn.instructables.com/FZG/Z76O/JLCKKZKT/FZGZ76OJLCKKZKT.LARGE.jpg", "https://cdn.instructables.com/FVT/ZBSE/JLCKKZJK/FVTZBSEJLCKKZJK.LARGE.jpg", "https://cdn.instructables.com/FBN/QYGI/JLCKKZMQ/FBNQYGIJLCKKZMQ.LARGE.jpg"], "step_title": "Step 3: Wiring Up the Hardware"}, {"step": 4, "steps_text": "There are 2 versions of the Arduino Code file attached... one is for regulating reactions that are increasing in pH, and the other is for reactions decreasing in pH__________________________________________________________________*** IMPORTANT ***Download the needed libraries (zip attached in this instructable)This code uses an LCD library that is not already included on the Arduino...To implement this zip file into your project, download to your computer,In arduino window, go to \"Sketch\" --> \"Include Library\" --> \"Add .ZIP Library\" ", "step_imgs": ["/assets/img/pixel.png", "/assets/img/pixel.png", "/assets/img/pixel.png"], "step_title": "Step 4: The Code"}, {"step": 5, "steps_text": "This program uses a Serial input to drive the menu screens. This means that it will need to be connected to a computer or laptop during use. To operate the serial monitor, click the top right button (looks like a magnifying glass) on the arduino window.***IMPORTANT - use \"Autoscroll\", \"No line ending\", and \"9600 baud\" options on the serial monitor screen... if you do not, the code will not perform as designedTo input values, type a value in using your keyboard and press the enter key, or click \"Send\"", "step_imgs": [], "step_title": "Step 5: Important Note -- Serial Monitor"}, {"step": 6, "steps_text": "There are very simple constants that just need to be changed to make sure that this program works for you! Below are the recommended constants to change and their descriptions:-- fillTime : how long it takes your pump to completely fill with liquid, in seconds-- delayTime: how long you want the regulator to wait before pumping in more solution-- smallAdjust: number of seconds you want acid/base to be pumped in when pH deviates by 0.3 - 1 pH-- largeAdjust: number of seconds you want acid/base to be pumped in when pH deviates by > 1pH____________________________________________________________________In addition, you will need to figure out what offset and slope your pH meter has...If my slope and offset does not work well with your pH meter, you will need to take the following steps:(1)-- set slope = 1 and offset = 0(2)-- take and record pH readings in solutions of exactly pH 4, pH 7, and pH 10(3)-- Create a system of equations like so: (actual pH 4 reading)*slope + offset = 4 (actual pH 7 reading)*slope + offset = 7 (actual pH 10 reading)*slope + offset = 10___________________________________Use these three equations to find a best fit line to solve for slope and offset and change these constants to your new slope and offset values", "step_imgs": [], "step_title": "Step 6: Adjusting the Code to Your Regulator Needs"}, {"step": 7, "steps_text": "", "step_imgs": [], "step_title": "Step 7: Video of the PH Regulator/Meter With Calibration Feature"}], "channel": "Arduino"}, {"category": "technology", "description": "AbstractNowadays, the beautiful TFT LCD screens are getting cheaper and using it in an embedded design, makes it more user friendly. In this instructable, explains connecting the 320x480, 3.5Inch TFT LCD, with ILI9488 driver and SPI interfacing into Arduino. The LCD can be connected to the Arduinos SPI bus. It needs minimum number of port pins (4).The DHT22 (AM2302) is a high precision temperature sensor module, provide calibrated temperature and humidity which is connected to digital IO pin of Arduino. The DHT22 provides the temperature in Celsius format. The Arduino program converts the temperature into Fahrenheit, Kelvin and Rankine, and sends via serial port also displays on TFT LCD.Parts and components Arduino Uno board = 1 No  DHT22 (AM2302) =  1 No  320x480 TFT LCD (SPI interface,      ILI9488 LCD controller) = 1 No  10K Resistor = 1No", "title": "Arduino and 3.5 Inch (320x480) TFT LCD (ILI9488) SPI Interface With DHT22 Temperature / Humidity Measurement", "url": "https://www.instructables.com/id/Arduino-and-35-Inch-320x480-TFT-LCD-ILI9488-SPI-In/", "section": "technology", "steps": [{"step": 1, "steps_text": "The TFT LCD (3.5 inch, 320x480 pixel, ILI9488 LCD controller), is used for this instructable.  The LCD is easily interfaced with      Arduino SPI bus, and it needs minimum of four Digital IO lines.  The ILI9488 LCD Controller is a      16.7M single-chip SoC driver for a-Si TFT liquid crystal display panels      with a resolution of 320(RGB) x 480 dots. The ILI9488 is comprised of a      960-channel source driver, a 480-channel gate driver, 345,600 bytes GRAM      for graphic data of 320 (RGB) x 480 dots, and power supply circuit.   The LCD operates at 3.3 Volt Logic.  Arduino SPI port is connected to      the LCD ( D13- SCLK, and D11 \u2013 MOSI).  Arduino Digital IO pin D9 and D10      is connected to RS and CS pin of LCD.  DHT22 digital temperature /      humidity sensor delivers temperatures between -40\u00b0C and +80\u00b0C and humidity      between 0% to 100%.   The temperature accuracy is \u00b10.1\u00b0C      (maximum).  The DHT22 data pin is connected      with Arduino digital IO pin, and pulled up to Vcc, via 10K ohm resistor.  DHT22 (AM2302) outputs calibrated      digital data signal.  Every DHT22 sensor of this model is      temperature compensated and calibrated in accurate calibration chamber and      the calibration-coefficient is saved in internal OTP memory.  The sensor supports long      transmission distance.  Arduino reads the temperature and      humidity at 2 second interval and sends to the serial port as well as displays on LCD screen. The conversion formula for Celsius      to other scale are given below. Fahrenheit:- T(\u00b0F) = T(\u00b0C) \u00d7 9/5 +      32 Kelvin:- T(K) = T(\u00b0C) + 273.15 Rankine:- T(\u00b0R) = (T(\u00b0C) + 273.15)      \u00d7 9/5", "step_imgs": ["https://cdn.instructables.com/FCY/GA7L/ISCBAMHW/FCYGA7LISCBAMHW.LARGE.jpg"], "step_title": "Step 1: SChematic"}, {"step": 2, "steps_text": "Install Adafruit GFX and Adafruit ILI9341 device libraries.  Adafruit ILI9341 library is best      suitable for the ILI9488 device.  Adafruit ILI9341 library is modified      for adopting ILI9488 LCD controller.  Only, the Height and Width      parameters at Adafruit_ILI9341.h file is modified to     #define ILI9341_TFTWIDTH  320   #define ILI9341_TFTHEIGHT 480    And at the Adafruit_ILI9341.cpp      file, at the function Adafruit_ILI9341::begin(void), the following lines      are modified for adapting ILI9488 device (320x480 pixels).     writecommand(ILI9341_DFUNCTR);    // Display Function Control            writedata(0x02);            writedata(0x02);           writedata(0x3B);      Included DHT library offers the      read interface for the sensor.  Arduino reads the temperature and      humidity values at 2 seconds interval.   The temperature is in Celsius format,      which is converted into Fahrenheit, Kelvin and Rankine format by the      software.  A two column five row, multi colored      table is drawn by using Arduino GFX lib, for displaying the temperature      and humidity.   Converted four formats of      temperature are send to the serial port and also displayed on the TFT LCD.//Experiment of 3.5 Inch LCD (320x480), ILI9488 SPI Interface driver//And experiment of DHT22 digital temperature / humidity sensor\n//Adafruit ILI9341 library is modified for ILI9488 (320x480)// DHT22 Data line connected to Arduino digital IO 2// LCD MOSI to Arduino digital IO D11\n// LCD SCLK to Arduino digital IO D13\n// LCD CS to Arduino digital IO D10\n// LCD RS / DS to Arduino digital IO D9// Name:- M.Pugazhendi\n// Date:-  01stSep2016\n// Version:- V0.1\n// e-mail:- muthuswamy.pugazhendi@gmail.com//Include Libraries\n#include <DHT.h>\n#include \"SPI.h\"\n#include \"Adafruit_GFX.h\"\n#include \"Adafruit_ILI9341.h\"//Constants\n#define SERIAL_DEBUG// DHT22\n#define DHTPIN 2    \n#define DHTTYPE DHT22   // For the LCD shield, these are the default.\n#define TFT_DC 9\n#define TFT_CS 10// Initialize LCD\n// Use hardware SPI (on Uno, #13, #12, #11) and the above for CS/DC\nAdafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC);// If using the breakout, change pins as desired\n//Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC, TFT_MOSI, TFT_CLK, TFT_RST, TFT_MISO);// Initialize DHT sensor for normal 16mhz Arduino\nDHT dht(DHTPIN, DHTTYPE); //Variables\nfloat hum;  //Stores humidity value\nfloat temp; //Stores temperature value\nfloat converted = 0.00;//Arduino setup\nvoid setup() \n{\n  #ifdef SERIAL_DEBUG\n    Serial.begin(9600);\n    Serial.println(\"ILI9341 Test!\"); \n    Serial.println(\"DHT22 temperature / humidity sensor Test\");\n  #endif\n  \n  //Initialize TFT LCD\n  tft.begin();  //Initialize the DHT sensor\n  dht.begin();\n    \n  #ifdef SERIAL_DEBUG\n    // read diagnostics (optional but can help debug problems)\n    uint8_t x = tft.readcommand8(ILI9341_RDMODE);\n    Serial.print(\"Display Power Mode: 0x\"); Serial.println(x, HEX);\n    x = tft.readcommand8(ILI9341_RDMADCTL);\n    Serial.print(\"MADCTL Mode: 0x\"); Serial.println(x, HEX);\n    x = tft.readcommand8(ILI9341_RDPIXFMT);\n    Serial.print(\"Pixel Format: 0x\"); Serial.println(x, HEX);\n    x = tft.readcommand8(ILI9341_RDIMGFMT);\n    Serial.print(\"Image Format: 0x\"); Serial.println(x, HEX);\n    x = tft.readcommand8(ILI9341_RDSELFDIAG);\n    Serial.print(\"Self Diagnostic: 0x\"); Serial.println(x, HEX);\n  #endif  //Rotate the screen to right direction\n tft.setRotation(1); //Print the headers\n printHeader();\n}//Main loop\nvoid loop(void) \n{   //Read data and store it to variables hum and temp\n  hum = dht.readHumidity();\n  temp= dht.readTemperature();\n    \n  printTemperatureHumidity();  //Delay 2 Seconds\n  delay(2000);\n}//Print headers\nunsigned long printHeader(void )\n{\n  tft.fillRect(0,0,240, 64,ILI9341_GREEN);\n  tft.fillRect(0,64,240, 64,ILI9341_RED);\n  tft.fillRect(0,128,240, 64,ILI9341_CYAN);\n  tft.fillRect(0,192,240, 64,ILI9341_YELLOW);\n  tft.fillRect(0,256,240, 64,ILI9341_ORANGE);  unsigned long start = micros();\n  tft.setTextColor(ILI9341_BLACK);   \n  tft.setTextSize(3);\n  //\n  tft.setCursor(50,0+20);\n  tft.print(\"CELCIUS\");  //\n  tft.setCursor(50,64+20);\n  tft.print(\"FAHRENHEIT\");\n  //\n  tft.setCursor(50,128+20);\n  tft.print(\"KELVIN\");    //\n  tft.setCursor(50,192+20);\n  tft.print(\"RANKIN\");   //\n  tft.setCursor(50,256+20);\n  tft.print(\"HUMIDITY\");\n  \n  return micros() - start;\n    \n}//Print temperature and humidity\nunsigned long printTemperatureHumidity() \n{\n  tft.fillRect(241,0,240, 64,ILI9341_CYAN);\n  tft.fillRect(241,64,240, 64,ILI9341_YELLOW);\n  tft.fillRect(241,128,240, 64,ILI9341_ORANGE);\n  tft.fillRect(241,192,240, 64,ILI9341_GREEN);\n  tft.fillRect(241,256,240, 64,ILI9341_RED);\n    \n  //tft.fillScreen(ILI9341_BLUE);\n  unsigned long start = micros();\n  tft.setTextColor(ILI9341_BLACK);   \n  tft.setTextSize(4);  #ifdef SERIAL_DEBUG\n    Serial.print(\"Celsius = \");\n    Serial.print(temp);\n    //Print degree symbol\n    Serial.write(176); \n    Serial.println(\"C\");\n  #endif\n        \n  tft.setCursor(250,0+20);\n  tft.print(temp);\n  tft.print(\" \");\n  tft.print((char)247);\n  tft.println(\"C\");    //Fahrenheit\n    //T(\u00b0F) = T(\u00b0C) \u00d7 9/5 + 32\n    converted = ( temp * 1.8 ) + 32;\n  #ifdef SERIAL_DEBUG\n    Serial.print(\"Fahrenheit = \");\n    Serial.print(converted);\n    //Print degree symbol\n    Serial.write(176); \n    Serial.println(\"F\");\n  #endif\n      \n    tft.setCursor(250,64+20);\n    tft.print(converted);\n    tft.print(\" \");\n    tft.print((char)247);\n    tft.println(\"F\");//Kelvin\n    //T(K) = T(\u00b0C) + 273.15          \n    converted = temp + 273.15;\n #ifdef SERIAL_DEBUG    \n    Serial.print(\"Kelvin = \");\n    Serial.print(converted);\n    Serial.println(\" K\");\n #endif\n  tft.setCursor(250,128+20);\n  tft.print(converted);\n  tft.print(\" \");\n  tft.println(\"K\");   //Rankine\n    //T(\u00b0R) = (T(\u00b0C) + 273.15) \u00d7 9/5          \n    converted = temp + 273.15;\n    converted = (converted * 1.8);\n  #ifdef SERIAL_DEBUG\n    Serial.print(\"Rankin = \");\n    Serial.print(converted);\n    //Print degree symbol\n    Serial.write(176);    \n    Serial.println(\"R\");\n  #endif\n  tft.setCursor(250,192+20);\n  tft.print(converted);\n  tft.print(\" \");\n  tft.print((char)247);\n  tft.println(\"R\"); //Humidity\n #ifdef SERIAL_DEBUG\n    Serial.print(\"Humidity =\");\n    Serial.println(hum);\n #endif\n    \n  tft.setCursor(250,256+20);\n  tft.print(hum);\n  tft.print(\" \");\n  tft.println(\"%\");\n  \n  return micros() - start;\n}", "step_imgs": [], "step_title": "Step 2: Software"}, {"step": 3, "steps_text": "The project is successfully completed with Arduino UNO, 320x480 TFT LCD and DHT22 module.  The converted temperature, and LCD      display, Serial Port screen are given below.", "step_imgs": ["https://cdn.instructables.com/FLG/UGUC/ISCBAMWI/FLGUGUCISCBAMWI.LARGE.jpg", "https://cdn.instructables.com/F10/RFEM/ISCBAMST/F10RFEMISCBAMST.LARGE.jpg", "https://cdn.instructables.com/FNY/GIJ6/ISCBAMP4/FNYGIJ6ISCBAMP4.LARGE.jpg"], "step_title": "Step 3: Conclusion"}], "channel": "Electronics"}, {"category": "technology", "description": "Edited 21/07/2016. I have another tutorial with 2 DS18B20 (datalogger).It follows the same concepts of this. Link on the step 6.See you there! Hi, this instructable is for those who want to log data from their sensors but don\u00b4t need a bunch of data.  I want to explain how we can control the sampling  rate with the RTC and then show/save the data. We are going to test, step by step,  the two parts of this shield. I will assume that you are familiar with the Arduino environment at a basic level.I have translated this tutorial  to share it with you, so excuse my english.Feel free to correct me in the comments because this is a fun way to learn. Summary of the steps: I recommend to go step by step, because is easier to find errors than in a large/complex code . If you already have knowledge, you can skip steps.1.-Materials. All you need for this tutorial2.- Adafruit guide (It does not take long). I don\u00b4t want to rewrite the guide because if you are using arduino, you have read a lot of guides, books and tutorials like me. This guide will give you all that you need to know: how to set and test your shield, even if it\u00b4s not your particular shield, as in my case.3.- Testing SD card. We will write data on the sd card with a simple sketch to ensure that it works.4.-Testing the RTC. We will begin to use the RTC to control the sample rate and show data by serial monitor.5.- SD and RTC together. The same excercise  using the entire shield.6.- Sensor data logger. Now we conect a sensor and log data to sd card.", "title": "Arduino Data Logger Shield. How to Control Sample Rate With Rtc", "url": "https://www.instructables.com/id/Arduino-Data-Logger-Shield-How-to-Control-Sample-R/", "section": "technology", "steps": [{"step": 1, "steps_text": "1.- Arduino UNO (tested on arduino uno and Funduino)2.- Logger shield (mine is from a local vendor not adafruit shield)3.-DTH 11 module4.-Connectors5.- Adafruit logger shield guide (PDF below)6.- SD card or micro SD card7.- CR1220 battery (if not included)", "step_imgs": ["https://cdn.instructables.com/FC1/IX0C/IQCBHX94/FC1IX0CIQCBHX94.LARGE.jpg", "https://cdn.instructables.com/F00/OOUO/IQCBHXBL/F00OOUOIQCBHXBL.LARGE.jpg", "https://cdn.instructables.com/FS5/R5WM/IQCBHZON/FS5R5WMIQCBHZON.LARGE.jpg", "https://cdn.instructables.com/F7R/39J4/IQFCEVD1/F7R39J4IQFCEVD1.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "Like i\u00b4ve said this guide is for the adafruit logger shield but it worked fine for me. You have to read and test the codes(you don\u00b4t need to make the light and temperature logger ). It does not take long. At this point you have the actual time and date and a formated/ tested sd card. Also  how to solder pins if you have a new shield.Considerations-You will add the libraries needed like RTClib.-You must know the pins of your shied. Read the datasheet of your shield.The CS (chipSelect) pin is the most important. In my case is the 8 and maybe not yours.Common pins are 4, 8, 10. You must change the chipSelect to your pin.-In my case, i did not need to put the pin 10 of the arduino as an output -->   pinMode(10 , OUTPUT);-I had problems with the \"CardInfo\"  using IDE 1.6.5. No problems with IDE 1.6.9-I am using an ultra cheap 2GB sd card  , and works fine.", "step_imgs": ["https://cdn.instructables.com/FOW/SVP1/IQCBHXUA/FOWSVP1IQCBHXUA.LARGE.jpg"], "step_title": "Step 2: Adafruit Guide"}, {"step": 3, "steps_text": "Now we are ready to write a simple \"Hello World\" on the sd card.This sketch is very simple (no serial monitor).1.-Make sure that you have the libraries needed :SD, SPI, WIRE2.-Remember to change your chipSelect        const int chipSelect = 8;         //Maybe not yours!!.You have to put your cs pin here3.-Uncomment this line if you need.//pinMode(10 , OUTPUT);                // Uncomment if necesary.I did not need4.- You can change \"Datos\" but you will have to change the lines that content this word.Example:File myData;myData=SD.open...........myData.println...............myData.close.........This sketch writes 2 headers in the void setup just once . Then hello world1 and hello world2 every second (void loop) on your sd card. Give it a minute and then check your sd card. Now check the file in your computer and you will have something like in the picture.The most common problems are: the pin 10  of the arduino as output or not , wrong chipSelect or bad sd card.", "step_imgs": ["https://cdn.instructables.com/FNG/IDY6/IQFCEAVQ/FNGIDY6IQFCEAVQ.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 3: Testing SD Card"}, {"step": 4, "steps_text": "This is the reason for this tutorial. We\u00b4ll learn how to control the sample rate with a simple \"if\" comparation. You can \"do\" something with this instruction too, not just print.-First the libraries #include                         //Libraries we need#include \"RTClib.h\"-The clockRTC_DS1307 RTC ;                  // define the Real Time Clock object-The void setupSerial.begin(9600);                    //Must match with the serial monitorWire.begin();RTC.begin();-In the void loop we call the clock to \"know\" the date and time and then compare it with the \"if\" function.DateTime now = RTC.now();         // Clock callif(now.second()==00){                    //Sample every minuteSo if the second is 0 we have a \"new\" minute and write date , time and message to the serial monitor (see the picture)This is the sketch that i use. When i want to work with the logger , i uncomment the line // sample every hour ,because this is the sample rate that i want. Just use one at the timeif(now.second()==00){                                               //Sample every minute//if(now.minute()==00 && now.second()==00){        //Sample every hourThe delay 1000 is important because if you don\u00b4t use it , you will have more than one data in \"that\" second. Try itNow you know that if you compare the now.hour() , now.minute() and now.second , etc, you can control your sample rate. Remember that your RTC has the real time so you are logging accurate information.So we have:-Every minuteif(now.second()==00){Print what you want}-Every hourif(now.minute()==00 && now.second()==00){Print what you want}-Every 10 min.if(now.minute()==00 && now.second()==00){Print what you want}if(now.minute()==10 && now.second()==00){Print what you want}if(now.minute()==20 && now.second()==00){Print what you want}if(now.minute()==30 && now.second()==00){Print what you want}if(now.minute()==40 && now.second()==00){Print what you want}if(now.minute()==50 && now.second()==00){Print what you want}-Every 30 minif(now.minute()==00 && now.second()==00){ Print what you want}if(now.minute()==30 && now.second()==00){Print what you want }", "step_imgs": ["https://cdn.instructables.com/F2W/XQ3V/IQFCEIE9/F2WXQ3VIQFCEIE9.LARGE.jpg", "https://cdn.instructables.com/FOI/AYU8/IQFCEVQ2/FOIAYU8IQFCEVQ2.LARGE.jpg", "/assets/img/pixel.png", "/assets/img/pixel.png"], "step_title": "Step 4: Testing the RTC"}, {"step": 5, "steps_text": "Now we\u00b4ll write \"Hello World\"to de sd card with time stamp.I have mixed the two sketch and changed the sd card instead the serial monitor.Consider the same precautions of the previous steps.If everything works fine , you will have the same information like in the picture.You can try with others sample ratesThis is structure to print:void loop(){DateTime now = RTC.now();                        //Clock call-The sampling rate we wantif(now.second()==0){                            //Sample every minute-Reopen the file (first open was for headers )Logfile=SD.open(\"Logfile.csv\",FILE_WRITE);       //Will open and will write date and message-The date and time. You can change the ordernow =RTC.now();Logfile.print(now.year(), DEC);                //Print date and time(not saved yet) Logfile.print(\"/\"); Logfile.print(now.month(), DEC); Logfile.print(\"/\"); Logfile.print(now.day(), DEC); Logfile.print(\" \"); Logfile.print(now.hour(), DEC); Logfile.print(\":\"); Logfile.print(now.minute(), DEC); Logfile.print(\":\"); Logfile.print(now.second(), DEC);-We print the message or valuesLogfile.print(\" Hello World\");                   //Print message(not saved yet) Logfile.println();                               //Jump to the next line Logfile.close();                                 //Print saved  }   delay(1000);                                    //One data per second}", "step_imgs": ["https://cdn.instructables.com/FTF/J1LW/IQFCETNM/FTFJ1LWIQFCETNM.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 5: SD and RTC Together"}, {"step": 6, "steps_text": "If you want, You can make this temperature datalogger:Arduino Data Logger With 2 DS18B20 and Sample Rate Controlhttps://www.instructables.com/id/Arduino-Data-Logger-With-2-DS18B20-and-Sample-Rate/Now we add the code for the sensor. I am using the DHT 11 sensor module (with the circuit ready). If not ,follow the instructions of the DHT library. This is not a fast sensor and sometimes you don\u00b4t get data . It\u00b4s just to show you how it works.We take the code of the last step and add the lines we need. You can take this example and add other sensor.I\u00b4m using the pin 2 of the arduino to conect with the sensor data ,Vcc to 5V  and GND to GND.We also have to change the prints.Logfile.println(\"  Date    Time    Humidity   Temp\");     //Print headers (not saved yet)--------------------------------------------------------------------------Logfile.print(h);                               //Print humidity(not saved yet)Logfile.print(\"%\");                             //Print simbol Logfile.print(\"  \");                            //Space between data Logfile.print(t);                               //Print temperature Logfile.print(\"\u00b0C\");                            //Print simbol Logfile.println();                               //Jump to the next line Logfile.close();                                 //Print savedYou can use the sample rate of the above steps. You can polish the codes according to your needs.I hope this tutorial is useful for you !", "step_imgs": ["https://cdn.instructables.com/FLT/H8P4/IQGWUZJ9/FLTH8P4IQGWUZJ9.LARGE.jpg", "https://cdn.instructables.com/F7R/39J4/IQFCEVD1/F7R39J4IQFCEVD1.LARGE.jpg", "https://cdn.instructables.com/F1S/LUYV/IQFCEW37/F1SLUYVIQFCEW37.LARGE.jpg", "https://cdn.instructables.com/F9L/XLDL/IQFHJO8K/F9LXLDLIQFHJO8K.LARGE.jpg", "/assets/img/pixel.png", "/assets/img/pixel.png"], "step_title": "Step 6: Working With a Sensor"}], "channel": "Arduino"}, {"category": "technology", "description": "Many college students have little or no experience in handling money. Students should write down the monthly cost of tuition and fees, books, room and board, utilities, food, public transportation, personal car, entertainment and extra-curricular activities. In order to keep a smart budget, learning the difference between needs and wants is a major factor. The student who understands the difference is on the right path for keeping up with their budget.", "title": "Monthly Budgeting in Excel", "url": "https://www.instructables.com/id/Monthly-Budgeting-in-Excel/", "section": "technology", "steps": [{"step": 1, "steps_text": "Making a budget can help you keep track of where you money goes, and help you set goals to get more out of your money. Excel is a great way to do this.\nWe'll be using Excel 2010 for this tutorial.\nExcel is based on \u201ccells,\u201d boxes that can contain numbers or the results of mathematical formulas. These are the parts of Excel you will need to know for this tutorial.\nName Box: This is the name of the active cell. In this case, the cell being edited is A1.\nFormula Bar: Rather than type in the cells, cells are edited in the formula bar.\nActive Cell: The cell being edited at the moment is called the active cell, and is highlighted with a thicker black outline.\nColumn Letters: Cells are given a letter depending on which column they're in. The active cell is in row \u201cA.\u201d\nRow Numbers: Cells are given a number for they're column. The active cell is in row \u201c1.\u201d", "step_imgs": ["https://cdn.instructables.com/FZX/VFUJ/GSUT3C6G/FZXVFUJGSUT3C6G.LARGE.jpg"], "step_title": "Step 1: Using Excel"}, {"step": 2, "steps_text": "To start, the budget needs some basic parts, such as a date and an outline. By the end of this step, it should look like the picture.\nGetting Started\n1. First, name the budget template by entering \u201cMonthly Budget\u201d into cell A1. Save the file as \u201cMonthly Budget\u201d as well. This will allow you to always begin your monthly budgets from the template you\u2019re about to create.\n2. In cell A2, enter \u201cMonth\u201d. In cell A3 enter \u201cYear\u201d. Cells B2 and B3 will be the input cells for the month and year of the budget sheet. In our example, we\u2019ll assume the budget is for October of 2011. Type \u201c10\u201d into cell B2 and \u201c2011\u201d into cell B3. You can change these inputs as the months and years change.\n3. Tip: if the text you enter into a cell doesn\u2019t fit, you can always resize the width of the cell by clicking on the border between the two column headers (for example, the line segment between the column headers \u201cA\u201d and \u201cB\u201d) and dragging the column to a more appropriate width.\nThe Budget Table\n1. Now you will assemble your Budget Table, a data table allowing you to input budgeted amounts for particular categories of expenses such as \u201cFood\u201d or \u201cEntertainment.\u201d In cell A5, enter \u201cExpenses\u201d. In cell B5, enter \u201cBudget\u201d. In cell C5, enter \u201cSpent\u201d. Finally, in cell D5, enter \u201cDifference\u201d.\n2. In the cells of column A, underneath \u201cExpenses,\u201d enter the categories of expenses that you\u2019re anticipating for your monthly budget. In our example, in A6, we enter \u201cRent/Utilities\u201d , A7 is \u201cFood\u201d, A8 is \u201cTransportation\u201d, A9 is \u201cSchool\u201d, and A10 is \u201cEntertainment\u201d. After all expenses categories have been created, enter \u201cTotal\u201d at the bottom of the column (in our example, this is cell A11).", "step_imgs": ["https://cdn.instructables.com/F37/GCKO/GSUSPQV7/F37GCKOGSUSPQV7.LARGE.jpg"], "step_title": "Step 2: "}, {"step": 3, "steps_text": "By entering the correct formulas into the \"total\" row, the budget can automatically sum your goals, spending and the difference.\n1. In cell B11, enter the formula \u201c=SUM(B6:B10)\u201d; this will sum the dollar amounts in the cells B6 through B10 and show the total in cell B11.\n2. Right click cell B11 and select \u201ccopy\u201d in the box that appears. Right click and select \u201cpaste\u201d on cell C11 and again on D11. Excel will \u00a0modify the cells from the formula in cell B11 so that C11 and D11 will their own columns.", "step_imgs": ["https://cdn.instructables.com/FW5/ITA9/GSUT3C6I/FW5ITA9GSUT3C6I.LARGE.jpg"], "step_title": "Step 3: "}, {"step": 4, "steps_text": "Cells can be formatted to show different things. This table is for keeping track of money, so we can make it show dollar signs and cents without us having to manually enter it,\nSelect the cell group B6 through D11 by dragging the mouse across this rectangular area of cells. Format the cells as \u201cCurrency\u201d cells by clicking [Home]> [Format]> [Format Cells] and then selecting the \u201cCurrency\u201d category in the \u201cNumbers\u201d tab of the \u201cFormat Cells\u201d window. We\u2019ll use \u201c2\u201d decimal places and select the option of having negative numbers appear in red font.\u00a0", "step_imgs": ["https://cdn.instructables.com/FOI/URI0/GTCP4AYH/FOIURI0GTCP4AYH.LARGE.jpg", "https://cdn.instructables.com/F76/S2BF/GTCP4DNW/F76S2BFGTCP4DNW.LARGE.jpg"], "step_title": "Step 4: "}, {"step": 5, "steps_text": "With the table made to show budgets, total spendings, and the difference, you'll need a section to keep detailed track of spendings.\nNow you will put together your Expenses Table, another data table allowing you to input the particular expenses of each calendar day into columns of your expense categories. In cell A13 enter \u201cNotes\u201d , cell B13 is \u201cDate\u201d, and in C13, enter your first expense category (in our example, we\u2019ll enter \u201cRent/Utilities into cell C13). Enter each expense category into the adjacent cells in row 13.", "step_imgs": ["https://cdn.instructables.com/F37/39H9/GSUT3C6J/F3739H9GSUT3C6J.LARGE.jpg"], "step_title": "Step 5: "}, {"step": 6, "steps_text": "Select cells B14 through B44, under the \u201cDate\u201d column. Format the cells as \u201cDate\u201d cells using the same method shown earlier, only this time select the \u201cDate\u201d category in the \u201cNumbers\u201d tab of the \u201cFormat Cells\u201d window. In our example we\u2019ll use \u201cMM/DD/YY\u201d for our date format.", "step_imgs": ["https://cdn.instructables.com/FYH/KVQX/GSUSPQVA/FYHKVQXGSUSPQVA.LARGE.jpg"], "step_title": "Step 6: "}, {"step": 7, "steps_text": "In cell B14, enter the formula \u201c=DATE(B3,B2,1)\u201d; this cell will output the date based on the inputs you entered into cells B2 and B3 earlier.\nIn cell B15 , enter the formula \u201c=B14+1\u201d; this cell will add one day to the date in cell B15. Highlight cell B15, right click, and select \"copy\". Now drag and highlight cells B16 through B44, right click, and select \"paste\". The dates should fill themselves in.", "step_imgs": ["https://cdn.instructables.com/FIT/ZW0L/GTCP4DNZ/FITZW0LGTCP4DNZ.LARGE.jpg"], "step_title": "Step 7: "}, {"step": 8, "steps_text": "In cell C6, enter the formula \u201c=SUM(C14:C44)\u201d; this cell (C6) will output the sum of all dollar amounts entered into the corresponding column in the Expenses Table (cells C14 through C44). Enter the same formula into cells C7 through C10, each time paying attention to the input cells of the formula. For example, C7 denotes the amount \u201cSpent\u201d in the \u201cFood\u201d category, so you will enter the formula \u201c=SUM(D14:D44)\u201d into cell C7.\n\u00a0After that's done, select the cell group C14 through G44. Format the cells as \u201cCurrency\u201d cells. (For a reminder on how to do this, go to step 4.)", "step_imgs": ["https://cdn.instructables.com/F1Z/HRKK/GTCP4AYI/F1ZHRKKGTCP4AYI.LARGE.jpg", "https://cdn.instructables.com/FR6/LB2E/GTCP4DO2/FR6LB2EGTCP4DO2.LARGE.jpg"], "step_title": "Step 8: "}, {"step": 9, "steps_text": "In cell D6, enter the formula \u201c=B6+C6\u201d. Right click cell D6 and select \"copy\", then select cells D7 to D10, right click, and select \"copy\".\nNow that you have completed the steps, your ready to begin budgeting on your own. You can add in your own numbers in what you have spent and what you want your budget to be. You can even customize the \u201cexpenses\u201d to fit your needs.\nSave this as a template, you can use it month to month by changing the numbers in cell B2 and B3.\nOnce the budget is made, it's time to set goals. In cells B6 through B10, estimate how much you plan to spend. Set reasonable goals that will help you save.\nAs you spend money, keep track of when and how much you spend, open up your budget, and put it in the spending table that starts in row 13. When you put expenses in there, it will automatically compare what you've already spent (in cell C6 to C11) with your budget (B6 to B10) and show you the difference in D6 to D10.\nThe key to using a budget is keeping it current. As a new month comes, make a new budget and set new goals.", "step_imgs": ["https://cdn.instructables.com/FJM/D2JR/GTCP4AYJ/FJMD2JRGTCP4AYJ.LARGE.jpg"], "step_title": "Step 9: "}, {"step": 10, "steps_text": "Here is a quick video demonstration to help you see all the steps in action.\nAlso attached is the example budget.", "step_imgs": ["/assets/img/pixel.png"], "step_title": "Step 10: Video Demonstration"}], "channel": "Software"}, {"category": "outside", "description": "\u00a0An easy way to change your bicycle tube.", "title": "Changing a Bicycle Tube", "url": "https://www.instructables.com/id/Changing-a-bicycle-tube/", "section": "outside", "steps": [{"step": 1, "steps_text": "Loosen axle bolts. To make it easy to get the chain off, push the wheel all the way forward.", "step_imgs": ["https://cdn.instructables.com/FUK/CSGT/G5KP7XEG/FUKCSGTG5KP7XEG.LARGE.jpg", "https://cdn.instructables.com/FV4/ITQI/G5KP7XD8/FV4ITQIG5KP7XD8.LARGE.jpg"], "step_title": "Step 1: First Things First"}, {"step": 2, "steps_text": "With your left hand, push the chain to the inside of the bike. While pushing the chain, rotate the cranks with your right hang. If you have done it correctly, your chain should rest on the the inside of the sprocket.", "step_imgs": ["https://cdn.instructables.com/F3W/QWMX/G5KP7XG6/F3WQWMXG5KP7XG6.LARGE.jpg", "https://cdn.instructables.com/FC6/CCVI/G5KP7XG9/FC6CCVIG5KP7XG9.LARGE.jpg"], "step_title": "Step 2: Getting the Chain Off"}, {"step": 3, "steps_text": "Now that you have popped the chain off the sprocket, pull the wheel towards you. Make sure the wheel is out of the drop out to remove the chain. Remove the chain from the cog and place it in the drop out to help keep the chain from knotting up.\u00a0", "step_imgs": ["https://cdn.instructables.com/FJ0/K4XB/G5KP7XH2/FJ0K4XBG5KP7XH2.LARGE.jpg", "https://cdn.instructables.com/FNT/B9XF/G5KP7XH6/FNTB9XFG5KP7XH6.LARGE.jpg"], "step_title": "Step 3: A Helpful Hint"}, {"step": 4, "steps_text": "Always a problem here. The best way to get the tire off is to insert tire levers under the bead of the tire at 12 and 1 o'clock. Apply pressure to pull the tire's bead out. Once you have started, follow in a circular motion around the rim until the beat is out around the whole rim.", "step_imgs": ["https://cdn.instructables.com/F6X/DX26/G5KP7XI5/F6XDX26G5KP7XI5.LARGE.jpg", "https://cdn.instructables.com/FEM/IV0P/G5KP7XIU/FEMIV0PG5KP7XIU.LARGE.jpg"], "step_title": "Step 4: The Tire and the Rim"}, {"step": 5, "steps_text": "At this point, press the valve stem up into the tire and pull the old tube out.", "step_imgs": ["https://cdn.instructables.com/FIN/MYZ9/G5KP7XJK/FINMYZ9G5KP7XJK.LARGE.jpg", "https://cdn.instructables.com/FXQ/F4FU/G5KP7XJJ/FXQF4FUG5KP7XJJ.LARGE.jpg"], "step_title": "Step 5: The Old Tube"}, {"step": 6, "steps_text": "Place the new tube in the tire. Make sure to line up the valve stem in the valve stem hole on the rim first, before putting the rest of the tube in the tire.", "step_imgs": ["https://cdn.instructables.com/FIG/0RO3/G5KP7XK1/FIG0RO3G5KP7XK1.LARGE.jpg", "https://cdn.instructables.com/FAT/E7ES/G5KP7XJW/FATE7ESG5KP7XJW.LARGE.jpg"], "step_title": "Step 6: The New Tube"}, {"step": 7, "steps_text": "Probably the hardest part of the whole process. In a circular motion, rotate your wrist away from you, pressing the bead of the tire inside the rim. If you need help you can use the tire levers for leverage.", "step_imgs": ["https://cdn.instructables.com/FZT/5UTJ/G5KP7XKW/FZT5UTJG5KP7XKW.LARGE.jpg"], "step_title": "Step 7: Putting the Tire Back On"}, {"step": 8, "steps_text": "Now you are basically putting everything back into place. Put the chain on the cog and slide the wheel into the dropouts.", "step_imgs": ["https://cdn.instructables.com/F1L/W6YO/G5KP7XM4/F1LW6YOG5KP7XM4.LARGE.jpg"], "step_title": "Step 8: Its Down Hill From Here!"}, {"step": 9, "steps_text": "This can be scary, but don't worry it will be okay! To get the chain back on, you have to put the chain on the top of the sprocket and quickly rotate the cranks with your opposite hand.", "step_imgs": ["https://cdn.instructables.com/F1Z/TBB8/G5KP7XNQ/F1ZTBB8G5KP7XNQ.LARGE.jpg"], "step_title": "Step 9: The Chain"}, {"step": 10, "steps_text": "Once you have the chain on, you must pull the wheel back and tighten the axle bolts. Make sure there is enough tension so the chain will not keep popping off.", "step_imgs": ["https://cdn.instructables.com/F4V/DJOX/G5KP7XO8/F4VDJOXG5KP7XO8.LARGE.jpg"], "step_title": "Step 10: Tightening Up!"}, {"step": 11, "steps_text": "\u00a0Now that everything is dialed in, you only need to pump the right amount of PSI (pounds per square inch) into the tire. To find this information out look on the side of the tire. After you are done, go have some fun!", "step_imgs": ["https://cdn.instructables.com/FH8/E36W/G5KP7XPC/FH8E36WG5KP7XPC.LARGE.jpg"], "step_title": "Step 11: Pumping It Up!"}], "channel": "Bikes"}, {"category": "outside", "description": "WARNING: WEAR PROTECTIVE GEAR AT ALL TIMES. GLOVES, BOOTS, AND WHEN PAINTING A GAS MASK. DO NOT TRY TO SAIL THIS ON THE SEA OR IN DEEP WATER WITHOUT A LIFE VEST. This boat is made for calmer water, and rough waves may shred the boat.\u00a0\nDO NOT sail if you cant swim!\nHi guys, I'm publishing yet a new instructable of something made last May (2011) Its the project i did right after the Gondorian armor you can view at This link\nIts something that was born out of desire for sailing and being on water. Buying a boat would be extremely costly, so i ended up saying \"How hard can it be?\"\nThis is in a way less tedious (chainmaille) to make than the armour. However it required a totaly different level of ingenuity because of the the various problems arising from things such as sail rigidity, and water-proofing (those things can can be easily done, but can they easily be done with a lack of tools and on the cheap?) among others you may encounter yourself.\nThis time i moved out of my room into the garage to build this, partly because my room was too small and because it created a lot of chaos.\nThe amount of tools required here is surprisingly low. I had a saw, a drill and a measuring tape (as well as painting tools and protective gear and pliers etc the usual small tools) The boat was built entirely from my head (I drew stuff down of course) without any marine knowledge of any sorts when i began (google searches quickly remedied that) The only thing i knew how to do was sail a boat. The rest came as i went.\u00a0\nMost boats cost in the thousands of dollars to buy, and sail boats can cost in the tens of thousands (of course depending on size and materials, you will pay more for a boat made from mahogany compared to a boat made from a cheaper wood). I am offering you an instructable that lets you make a boat that is perfectly water worthy, for under 500$ (That excludes the cost of tools if you don't have them, and DOES NOT mean 499$, it means somewhere under 500$ depending on where you live) However there is a down side to this instructable. Once again, this was done a while ago, and at that time i had little knowledge of instructables and\u00a0didn't\u00a0think to take photos of every step. I did go down to my garage yesterday to take as many productive photos as i could to benefit the audience here.\nSpeaking of going down to my garage, (this was built 1.5 years ago) when i uncovered the boat it was in the same state as it was when i initially finished it in May of 2011, so this design is pretty durable as well.\u00a0\nThis will not be as cheap as other stuff on instructables, however its well worth it if you live near a constant body of water (By constant i mean something that\u00a0doesn't\u00a0fluctuate with tide, as that will mess up your timetable, and may leave you stuck in the mud)\u00a0\nYou must view this instructable from a different point of view. Its Cheap for boats. Its like buying a 10$ coke can, thats way expensive for Coke cans. However, a 10c Coke can would be cheap. It all depends on perspective.\u00a0\nI understand not everyone uses the metric system, so i will convert as many values as possible into the imperial system (inches, lbs feet)\u00a0\nReasons for why i made this:\n\t\tI went sailing last summer, and missed sailing a lot, and wanted to sail in a boat whenever i wanted to, not only when i went to the beach. Buying a boat was too expensive so i just said \"leme make one\"\n\t\tI Just love building stuff, and would build stuff anyways had i not made this boat.\u00a0\n\t\tIt was a new challenge, and i love taking stuff on where limits my are stretched\n\t\tSailing is an awesome and relaxing experience, that takes your minds of the stresses of life.\u00a0\nNow enough of my blabbering, on to the fun stuff.\u00a0", "title": "How to Build a Sail Boat That Is Much Cheaper Than Retail Ones.", "url": "https://www.instructables.com/id/Build-a-sail-boat-that-is-much-cheaper-than-retail/", "section": "outside", "steps": [{"step": 1, "steps_text": "\n          All right guys. Before we begin (and i know i have already stated this at the start) Please wear protective gear. As my warning at the start of this instructable may not be enough, i will outline in more detail what exactly i mean.\u00a0\nYou will be handling tools that spin at high Rpm as well as sharp objects. You will also be working with some solvents, so pleasework in well ventilated areas. Take extreme care and dont rush your work. When sailing the boat take aproptiate safety measures and try not to sail in the winter as it is a bit cold.\u00a0\nPlease read the following.\u00a0ALWAYS\u00a0have a first aid kit near you.\u00a0\n\t\tWhen building the boat. Wear thick gloves and protective glasses, as well as long sleeved shirts and trousers.\u00a0\n\t\tYour clothes should be of low quality and cheap as they will most definitely get ruined by the paint.\u00a0\n\t\tWhen painting, wear a gas mask and preferably do it in a well ventilated area.\n\t\tIf you chose to go via fiberglass, make sure everything the resin touches is disposable, and you do it in a ventilated area with a gas mask. ALSO, Please read up on fiberglass before you use it.\u00a0\n\t\tWhen sailing, wear a life vest, and don't sail in open water (as in the sea or ocean, lakes dont count)\u00a0\n\t\tIf you do go sailing, have a friend somewhere nearby with a rowboat or a motorboat to rescue you should you (god forbid) sink.\u00a0\n\t\tIf you do happen to plunge into the water,\u00a0swim to shore and take some clothes off (within reason) so that you can dry out faster.\u00a0", "step_imgs": ["https://cdn.instructables.com/F2M/Q2NU/H7434JVB/F2MQ2NUH7434JVB.LARGE.jpg"], "step_title": "Step 1: Safety (common Sense)"}, {"step": 2, "steps_text": "Terminology and parts of the boat.\nOk guys, you need to know this before we begin. I googled most of this as i went along building the boat. Ill try to summarize as much as i can.\u00a0\nRelate to pictures to see what i mean. The picture below with the 2D boat is well labeled and should be easy to read. Ill give simple translations below to what isnt clear or may be obscure.\u00a0\nMain sail: Gives primary power to the boat\nMast: Holds the sails\nRudder: Steers the boat:\u00a0\nBoom: Holds the main sail in a firmer shape (not completely firm, that comes later)\u00a0\nHull: The main \"armor\" of the boat, something that needs to be waterproof, hydrodynamic and durable.\u00a0\nJib=Front sail\u00a0\nYou do not have a centreboard, instead you have side pontoons (the centreboard acts as a counter balance when the boat rocks from side to side as the wind blows into the sail)\nTiller= The stick that turns the rudder.\u00a0\nThe shroud and other stuff i don't mention are irrelevant to the construction of this boat.\n\u00a0How basic sailing works (and boats in general) \nBoats float because the surface of the boat pushes against the water. The larger the surface area, the larger the force that pushes up your boat is. \u00a0A boat that floats is one that has a larger force of upthrust, and a smaller overall weight (This is why metal boats can float, metal usually sinks, but that is because of the small surface area (and volume) it has.\u00a0\nStuff floats because of density, If something is more dense, it will sink through the less dense stuff (thats why oil floats on water, because it is less dense) However finding out the density of your boats hull is a bit impractical (you need to know the weight that acts upon the hull, including the hulls own weight, and yourself)\u00a0\nWe will be using buoyancy to find out if the boat floats. To do this Find out the volume of the boats hull in cubic metres(use pythagoras and trigonometry to measure out the triangle, then make some educated guesses and estimate the size of the tip of the boat, which is more difficult to measure) Use tape measures and protractors to find that stuff out.\u00a0\nWater has a density of 1000kg/m^3 (62.48 lbs/ft^3) \u00a0Now, all you have to do is\u00a0Multiply the volume of the object (Your boat) \u00a0by the density of the fluid. The result will be the mass of fluid displaced, and the weight of that fluid is the buoyancy of the object. If that force is smaller than the weight of the object (you and the boat) You will sink. Remember to keep the units the same when multiplying, else you will get a very strange result.\u00a0\nThe result i got allowed me to bring 276kg (608lbs) \u00a0of weight onto the boat (This includes the boats own weight) Your looking for something that allows you to bring about 3 times your own weight upon the boat, considering your boat will weigh in at around 50kg or more, you want a margin of error for calculation mistakes and stuff like that. So, 3 times your weight should be pretty safe for sailing.\u00a0", "step_imgs": ["https://cdn.instructables.com/FEJ/DLF8/H6MF31VD/FEJDLF8H6MF31VD.LARGE.jpg", "https://cdn.instructables.com/F5H/A0G6/H672MR7U/F5HA0G6H672MR7U.LARGE.jpg"], "step_title": "Step 2: Boat Terminology and How Basic Sailing Works."}, {"step": 3, "steps_text": "Materials you will need\nMost of this can be acquired at hardware stores : In the US Home Depot, in the UK B&Q\n\t\tA drill\n\t\tLong wooden beams about 1-2 (3.2-6.5 feet)\u00a0meters long and to measure about 20x20cm (7.9x7.9 inches)\u00a0\u00a0approximately (The wood i used was pine wood. Pine wood is fairly weak, but works fine. If you have a larger budget, you can use oak wood which is awesome and very strong.\u00a0\u00a0\n\t\tDuct tape (as always)\u00a0\n\t\tA wood saw\n\t\ta measuring tape\n\t\twood glue\n\t\twood screws\n\t\tplexi-glass\n\t\tcompressed cardboard drywall (NOT Gypsum, Compressed cardboard, its more flexible)\u00a0\n\t\tOil Paint\n\t\tLacquer (Boat lacquer to be more precise)\u00a0\n\t\tWaterproof silicone (The stuff used in the bathroom to seal off large spaces, its black, and i think its also used on drainpipes)\u00a0\n\t\tA hollow aluminium pipe thick enough so that the Wooden railing can fit into it (i just used another shorter aluminum railing)\u00a0\n\t\tPaintbrushes and various items to spread the liquid components\n\t\tBasic workshop tools (Screwdrivers, pliers etc etc)\u00a0\n\t\tOne 3-4 meter (9.8-13.1 feet)\u00a0\u00a0long circular\u00a0railing made of wood\u00a0(this is for the mast) This can be any circular long thick piece of wood. Diameter aprox 5-8cm (2-3.1 inches)\u00a0\n\t\tThreaded rods (12mm and 16mm with nuts to fit the rods as well as washers)\u00a0\n\t\twood slabs or table tops.\u00a0\n\t\tRope\n\t\tCable (3mm thick is enough, and cable clippers, like the things that stop the cables from moving)\u00a0\n\t\tThick material (I used window curtains)\u00a0\n\t\tStyrofoam\n\t\tstyrofoam glue.\u00a0\n\t\ta gas mask\n\t\tA sewing machine\n\t\tscrews and bolts with a ring/loop attached to them\n\t\tSilicone (for bathtubs)\u00a0Materials i did not use, but are\u00a0useful\u00a0albiet costly (Optional)\u00a0\n\t\tFiberglass sheets\u00a0\n\t\tFiberglass resin\n\t\tPlastic cans to mix this stuff in that you will throw away.\u00a0BRING A SNOW SHOVEL. THAT IS BECAUSE IF THERE IS NO WIND, YOU MUST ROW YOUR BOAT.", "step_imgs": ["https://cdn.instructables.com/FGL/IW59/H6MF36XV/FGLIW59H6MF36XV.LARGE.jpg", "https://cdn.instructables.com/FRW/OPOZ/H6S499UN/FRWOPOZH6S499UN.LARGE.jpg", "https://cdn.instructables.com/F5E/ML58/H6S4FVEK/F5EML58H6S4FVEK.LARGE.jpg", "https://cdn.instructables.com/F7M/8J8O/H6S499UH/F7M8J8OH6S499UH.LARGE.jpg"], "step_title": "Step 3: Materials and Tools."}, {"step": 4, "steps_text": "The Frame of the Boat\nThe skeleton of the boat is the most important part of the build. I made a slight error here due to inexperience, but quickly found a solution to it later in the build. The error was that i made the bottom of the boat pointed and not flat, something you do when you have a heavy fin on the bottom of the boat, which i had no way of making. The way you should do it (but i won't explain since i haven't done it) is make the bottom of the boat flat.\u00a0\nAs every person has a preference, you can make the links as you wish, i will just give you guidelines on how I've done it myself.\u00a0\n\u00a0Note:\u00a0When connecting wood together, make sure the joint is flat on flat. And when making these connections, add wood glue into the joint, and then screw it together. This makes it even stronger.\u00a0\nBegin by cutting your wooden beams (Check the photos in the materials step for what wooden beams look like) and line up, end to end, 3 together and then overlap 3 more, side by side so that you can screw them together into one big length of wood. Screw them together with screws (Screw them in with the drill) You now have a fat piece of wood. Make it about 2.5 meters to 3 meters long (8.2-9.8 feet). This is the keel of the boat and has to be the sturdiest part of the boat. Add more wooden beams on the side to reinforce it if needed. \u00a0Cut of any excess (this means bits that don't match together at the ends) and keep it for later.\u00a0\nAfter the keel is done, make some equilateral triangles out of the wood beams (refer to photo) but don't \u00a0screw the triangles together yet. Once you have the triangles, make the top side, about 20-40cm (7.8-15.8 inches) \u00a0longer than the other 2 parts. This long part will be the top face of your boat (That part that faces the sky) Screw the triangles together and then screw them to the bottom (The thick beam/keel) of the boat.\u00a0\nAfter the triangles are screwed in, add wooden beams to the top to connect all the triangles on all their corners (The bottom beam connects one corner, you gota do the other 2) Once that is done, you should have something looking like a toblerone bar.\u00a0\nNow pick one end to be the tip of the boat (the Bow) Add lengths of wood to each corner of the final triangle and link them so that the wooden beams meet at level with the deck of the boat (check the pictures) \u00a0The length of wood coming from the bottom of the boat (keel) should be the longest of the three.\u00a0\nAdd wooden beams halfway down the frame of the boat so that the hull of the boat can be screwed on to it.\u00a0\nOnce you are sure everything is completely secured and sturdy, only then do you move to the next step.\u00a0", "step_imgs": ["https://cdn.instructables.com/FUH/B9ZY/H6MF31VP/FUHB9ZYH6MF31VP.LARGE.jpg", "https://cdn.instructables.com/FUG/YXLT/H6MF31VG/FUGYXLTH6MF31VG.LARGE.jpg", "https://cdn.instructables.com/FT7/QTS6/H6S499UM/FT7QTS6H6S499UM.LARGE.jpg"], "step_title": "Step 4: Making the Frame (skeleton) of the Boat."}, {"step": 5, "steps_text": "The Mast and its attachments.\u00a0\nAbout one thirds into the boat from the tip. Add another beam so that there is a small gap near the place where the triangle mets the keel. This is where your mast will be secured.\u00a0\nGet your aluminum bar, the fat one. And then screw it into one thirds of a way from the tip of the boat (approximately) Secure it into the bottom of one of the Triangles with threaded rods \u00a0and nuts. It should be held in place as tight as possible to the bottom of the boat, so that the mast does not break from the boat structure (check photos for reference)\u00a0\nAfter this aluminum bar is installed, you have your mast socket. This allows you to remove the mast from the boat and park the boat in a garage (check photos)\u00a0\nNow take your wooden rail, and sculpt the bottom 20-40cm (7.8-15.8in) of it so that it fits into the aluminum bar (this depends on the aluminum bar you have). Then stick it in. Now drill 2 holes 10cm apart into the aluminum bar AND into the wooden bar at the same time. The hole should fit a 12mm threaded rod. Stick your threaded rods in and secure them with nuts. Add a loop headed screw to the tip of the mast. This is for the wire.\u00a0\nNow, i have frankly no idea how to explain this next step to you, but i will give you a photo that shows you what i mean. I invented a piece out of some metal shackles and a bar of aluminum that i modeled in my forge.\u00a0\nThe piece i invented is called, a gooseneck. It holds the boom to the mast. If you can buy one great. What i did was bolt in a shackle into the mast (the wooden mast structure) and then drill a hole through a metal bar. I take this bar and round off the corners with a file then jam it into a thinner (about 15mm) aluminum bar that is about 1.5-2m (2-6.5 feet) long (depending on your sail). This becomes the boom mast, and when removed folds nicely onto the mast saving space and also folds the sail up quite nicely. After that, you just put the shackle pin through the hole in the bad, and viola, you have a boom mast. This shackle should be bolted into the wooden mast \u00a0 20-40 cm (7.8-15.8in)\u00a0above where your aluminum mast socket ends and it meets the wooden mast. THis is so that the boom is high enough for you to have some head space (you still need to duck tho when you move the boom)\u00a0", "step_imgs": ["https://cdn.instructables.com/F2N/GRRJ/H6S499UG/F2NGRRJH6S499UG.LARGE.jpg", "https://cdn.instructables.com/F7F/CKX8/H672XEXS/F7FCKX8H672XEXS.LARGE.jpg", "https://cdn.instructables.com/FJI/BKZG/H6MF36XO/FJIBKZGH6MF36XO.LARGE.jpg", "https://cdn.instructables.com/FQY/LUA8/H67NSL7N/FQYLUA8H67NSL7N.LARGE.jpg", "https://cdn.instructables.com/FCF/NIYD/H6S499UI/FCFNIYDH6S499UI.LARGE.jpg", "https://cdn.instructables.com/F06/XZYX/H6S4FVEG/F06XZYXH6S4FVEG.LARGE.jpg", "https://cdn.instructables.com/FCM/IHCH/H6S4FVDU/FCMIHCHH6S4FVDU.LARGE.jpg", "https://cdn.instructables.com/F30/EM5Z/H6MF31VB/F30EM5ZH6MF31VB.LARGE.jpg"], "step_title": "Step 5: Making the Mast Installation."}, {"step": 6, "steps_text": "Making a hull (With an\u00a0addition\u00a0that i am working on now)\u00a0\nGet your cardboard drywall, and cut pieces that fit the walls of the boat. Then simply screw them one like you would screw drywall to a building frame. Do this to 2 of the boat sides (The ones touching the water, not the deck). The drywall should be able to bend and flex so you can shape it around the tip of the boat easily.\nNow, take your wood glue or paste. Its a thick paste that hardens to something similar to skate board wheel rubber and sticks very well to glue. Use it to fill every existing gap between any piece of wood and drywall you can find on the boat. On the inside and the outside. This will be your first \u00a0barrier against water, and it has to be the strongest one as well. ADD A LOT OF THIS GLUE TO BE SAFE.\u00a0\nAfter the hull is done. Flip the boat so that the deck faces the roof, and cut out table tops, or wooden planks to make the deck. Make the deck a bit lower (Check the photos for what lower means) than the skeleton of the boat so that you have a space to sit in.\u00a0\nWood glue up the top of the boat as well. Drill a small hole in the deck of the boat so that air pressure changes can happen so that your hull is not pressurized when put into the water.\u00a0\nNow, im about to explain something i found out very recently (2-3 weeks ago). This involves making the hull MUCH stronger than what it is now. This addition is under the form of Fiber glass. I would like to state the\u00a0following\u00a0before you read further (Look at the thing below)\u00a0If you want do to do this step, google it properly and get well informed. I am just giving you an idea to open up your options.\u00a0\nFiberglass is like a cloth, but becomes super strong when you paint it over with fiberglass resin. It is also completely waterproof and what pro race boats use. I havent done this method, but i am telling you anyway because you may want to do this if you are taking the boat to sea.\u00a0\nDo the above steps, but instead of moving onto the next step \"Making the Sail\" continue by putting the cloth onto the cardboard drywall, and paint it over with resin. Do this outside. DO NOT do this inside because the fumes are absolutely horrible. Use a gas mask as well.\u00a0", "step_imgs": ["https://cdn.instructables.com/FT7/QTS6/H6S499UM/FT7QTS6H6S499UM.LARGE.jpg", "https://cdn.instructables.com/F7F/CKX8/H672XEXS/F7FCKX8H672XEXS.LARGE.jpg", "https://cdn.instructables.com/FIA/6W1W/H6S4FVE4/FIA6W1WH6S4FVE4.LARGE.jpg"], "step_title": "Step 6: Making the Hull."}, {"step": 7, "steps_text": "The sail configuration\nThis is so difficult to explain, i will probably ask you to use the photos as reference a lot.\u00a0\nThis is where i had to go quite far out of the box and use some strange unconventional methods to reach the goal required (a sail that doesnt flop around) The problem was that the sail would droop under its own weight because it was so huge. To get it firm, i had to plant some sort of stick into the sail, like the wings on a birdhave small bones to support the membrane. I eventually came up with a way that allowed me to do it for nearly nothing. This way involves sticking plexi glass strips into the sail to keep it proped up.\u00a0\nHowever, the sail needed to bend and flex around the mast, which was fixed. This had to happen without the strips of plastic breaking, so i added a secondary \"Mobile\" \u00a0mast into the sail that had the sole role of holding the plastic strips. This piece of wood had to be as close to the orignal mast as possible because it had to use the mast as support so that it wouldn't bend forward.\u00a0\nBegin by cutting your curtain into a right angled triangle. After you have your triangle (it has to be as long and tall so that it fits the triangle created by the mast and boom) Cut strips of curtain and then sew them onto the curtain \"X\" distance apart from the bottom of the sail.\u00a0 The pockets should be a bit wider than 5cm (2in).\u00a0 Refer to pictures to see what i mean. These pockets should match up with the marks you made earlier in this step.\u00a0\nDo the same for the front sail (but without pockets or marks) , however this should be an irregular triangle that has its longest side (Hypotenuse) From the tip of the boat to the top of the mast The wire supporting the front sail should run through the hypotenuse.. The other 2 sides should meet near the deck of the boat (refer to picture of me sailing in water)\nTo attach the Main sail to the mast, you must create a tight loop at the end of the sail. Wrap the last 20cm of the sail around the mast, and mark the point where the sail closes in on itself. this is where you have to sew using a sewing machine the seam of the sail so that you can slip it onto the mast like a sock. It should slide on easily without difficulty.\nTo attach it to the boom mast, screw in looped bolts into the boom at regular intervals, and just sew on strips of fabric onto the mast, then tie this fabric into the loop. This allows you to wrap up the mast when you want to pack it up as well as making the joint flexible.\nTo attach the front sail, you must run a wire from the tip of the mast, through your font sail (same sock method as with the main sail) and then tie the end of the wire to the tip of the boat.\nNow where i mark on the sail in the photo (Photo with tag labeled \"install here\") you must add a thin piece of wood. In this piece of wood you will cut some holes for thin strips of plexi-glass to enter. These thin channels in the wood must be exactly where the marks on the mast are or where the pockets on the sail meet the mast. The channels must be about 0.5cm wider than the strips of plastic you cut above.\u00a0 To install the piece of wood, simply place it as close to the mast, then drape a piece of cloth over it. Hand sew the cloth into the sail so that it stays there when you move it. Remove the wooden piece from the sail and properly sew the cloth added on a sewing machine.\nThe reason this piece of wood does not connect to the mast is because the sail must be able to turn, however, the mast can not turn. If the mast can not turn, the plastic bits you cut earlier will snap and become useless.\nOn the wooden strip you just installed, measure about 20-50cm (7.8-19.7in) upwards form the gooseneck. Mark this distance and consider it as \"X\". Keep marking upwards this exact distance until you hit the top of the mast. You should have about 5-9 marks on your mast, no more no less. If you have less or more, change the value of \"X\".\u00a0\nAfter your sail is done, cut strips of plexi glass using a hacksaw. These strips should be 4.5cm wide at the most, and as long as the pocket you are making them for. (Reffer to pictures again) Once those are done, make 3 more identical ones, and stick them together with their corresponding partner (That is if your plexiglass is thinner than 2cm thick) Once that is done, duct tape each individual set of these plastic strips. This helps them flex better and if the plastic breaks (which it will) It will not affect the structure of the sail because the duct tape will hold it all together (YAY duct tape)\u00a0\nStick the plexi glass into the main sail, and hold the mast upright and see if the sail droops or not.\u00a0", "step_imgs": ["https://cdn.instructables.com/FGE/JDV1/H672MRBC/FGEJDV1H672MRBC.LARGE.jpg", "https://cdn.instructables.com/FCS/EV9U/H6R3CP1Z/FCSEV9UH6R3CP1Z.LARGE.jpg", "https://cdn.instructables.com/FGR/IHIJ/H6R3COYN/FGRIHIJH6R3COYN.LARGE.jpg", "https://cdn.instructables.com/FU7/W7DS/H6MF36XR/FU7W7DSH6MF36XR.LARGE.jpg", "https://cdn.instructables.com/F7T/KGLA/H672XEXR/F7TKGLAH672XEXR.LARGE.jpg"], "step_title": "Step 7: Making the Sail and the Sail Supports."}, {"step": 8, "steps_text": "Rudder\nThis is easy, add a threaded rod into the back of the boat from the deck sticking upwards. Oton this threaded rod will go your rudder\nAtatch any flat hard object to any stick you can find that is sturdy. Then drill a hole into that stick and place it over the threaded rod. You now have a rudder.\u00a0", "step_imgs": ["https://cdn.instructables.com/FHZ/ZHSI/H6MF36XU/FHZZHSIH6MF36XU.LARGE.jpg"], "step_title": "Step 8: Making the Rudder."}, {"step": 9, "steps_text": "The Pontoons (balance)\u00a0\nThis is slightly tricky. You need this because it helps with boat stability a lot when the wind is a bit stronger. This is one of the things i spent time thinking about and came up with while reading a magazine on the loo (The best place for ideas :) \u00a0) The trouble that i had was keeping the boat upright while the wind was blowing into the sail (This creating an unbalanced force pushing the boat sideways)\u00a0\nThe solution would normally be a counterbalance keel. This is VERY difficult to make because of the water that needs to be sealed out, while making the keel removable. The REAL solution was adding side pontoons, simple and very cheap alternatives that are removable and easy to install.\nMeasure about 50cm from the back of the boat and mark the side of the boat (on both sides) Then measure about 80cm to a meter in front of your mark and mark that place again on both sides of the boat. This is where you will drill a 12mm hole into the body of your boat (The skeleton) and will glue in using epoxy 12mm threaded rods which will ultimately hold the frame of the pontoons.\u00a0\nNow, get 4 lengths of wood that you used for the frame of the boat. 2 will go on each side. Connect 2 together to produce 2 long lengths of wood. These should measure about 4 meters in length each. Now, connect them in the ends and produce a very long rectangle shape. Now, measure out the spaces on that rectangle where your threaded rods will screw in. Measure so that the rectangle spans equal lengths on each side of the boat.\u00a0\nBolt in your rectangle.\u00a0\nNow, you will need some 16mm threaded rods. Go to the ends of your rectangle (the bits paralel to the boat hull) and drill 16mm holes into the ends, drill 2 holes on each side. The holes should be close to the corners of the rectangle shape. Bolt your threaded 16mm rods into these holes. You should have bolts on both sides of the frame (this is because the bolts should be adjustable)\u00a0\nYou now must get your huge styrofoam blocks and cut them using a knife (or as i did, a modified solder gun that would hot wire through the styrofoam) Cut them so that they are about 50-1m longer than the shortest length of the rectangle, but not longer than the boat itself. \u00a0Once you are happy with your shapes, stick them together (If they are too thin) and then drill 16mm holes through the styrofoam.\u00a0\nBolt the 16mm bolts into the styrofoam and fill the excess holes with styrofoam glue. Shape the Styrofoam pontoons to have a sort of a bow (Sharp tip to cut the water) Once everything is dry, Screw the entire thing onto your boat. It should NOT move when screwed in properly. Use washers if you need extra force.\u00a0Calibrating pontoons for your weight.\u00a0\nYour pontoons should be screwed into the wood rectangle frame via 16mm threaded rods that are adjustable. Adjust these by screwing the Bolts that hold them into the frame tighter or more loose. Move the pontoons up and down on each side, so that the boat is completely straight. Get a bottle of water and put it on the boat, if the bubble is in the middle of the bottle, its straight. There is a tool (spirit level) specifically made for this, but using a bottle is more fun, and\u00a0doesn't\u00a0require you to pay for an extra tool that\u00a0you'll\u00a0use only once (by all means use it if you already\u00a0purchased\u00a0it for a previous project)\nOnce the boat is straight, move the pontoons (On both sides) up by about 20-30cm, which is \u00a07.8-11.8in) this is because your boat will sink into the water a bit\u00a0because\u00a0of weight and force the pontoons into the water. Pontoons will not sink into the water because they are made of styrofoam, which is SUPER floatable. If you do not adjust the height for the sinking, it will rip your structure appart and you will have a bad day.\u00a0\nThe pontoons\u00a0shouldn't really be in the water. they just need to rest on top of the water, and take any sway produced by the wind. They are solely there for balance.\nI weighed at the time (and still do) around 75kg. You may be a different weight, and the 20-30cm (7.8-11.8in) adjustment may not be accurate for you. This is why you should get the boat into the water on shore and fine adjust the pontoons on each side (do this by counting how many times you must turn the nuts on the rods 360 degrees) \u00a0", "step_imgs": ["https://cdn.instructables.com/FRW/OPOZ/H6S499UN/FRWOPOZH6S499UN.LARGE.jpg", "https://cdn.instructables.com/F5H/A0G6/H672MR7U/F5HA0G6H672MR7U.LARGE.jpg", "https://cdn.instructables.com/FPG/9FLK/H6S40WO2/FPG9FLKH6S40WO2.LARGE.jpg"], "step_title": "Step 9: Side Pontoons."}, {"step": 10, "steps_text": "Painting and laquer.WARNING: WEAR A GAS MASK AND WORK OUTSIDE. STRONG FUMES MAY CAUSE\u00a0DIZZINESS\u00a0AND NAUSEA, AS WELL AS RESPIRATORY PROBLEMSDo not do this if you are using the Fiberglass option in the \"Making the Hull\" step.\u00a0\nThis takes a while because of the long dry time of oil paint. This is why its best to do this in a warm environment. Firstly, flip the boat upside down. And support it on something.\u00a0\nNow, put plastic sheets on the floor to protect the floor from paint and other hazards.\u00a0\nBegin by giving the boat 2 coats of Blue paint. Let each coat dry before the next one goes on. Also, On any coat of paint, sand with 300 grit sand paper to remove the gloss so that the next layer can stick on nicely.\u00a0\nNow, give the boat 3 layers of blue paint. Let this dry completely, and then wait another 3 days. This is because lacquer has a strong solvent inside and may destroy the paint job if it is even slightly wet.\u00a0\nOnce all of the above steps are completed you are then going to start the most important step of all. Lacquering the boat. This protects the hull, as well as making it completely water proof. Lacquer dries fast, so this wont take as long as paint.\u00a0\nAdd around 5 coats to be safe. Wait before each coat is dry, sand, and then stick the next one on. Dry lacquer is when you touch it, it is not tacky at all.\u00a0\nOnce that is done, your boat is almost finished.\u00a0", "step_imgs": ["https://cdn.instructables.com/FH5/Q2QE/H6MF31VI/FH5Q2QEH6MF31VI.LARGE.jpg", "https://cdn.instructables.com/FNM/XILY/H6MEZUBM/FNMXILYH6MEZUBM.LARGE.jpg"], "step_title": "Step 10: Paint Job and Lacquer."}, {"step": 11, "steps_text": "This part is easy.\u00a0\nTie 2 ropes to the end of the boom, and then tie 2 ropes to the corner of the front sail by sewing on a loop hole made from fabric.\u00a0\nThe ropes at the end of the boom must stay relatively taut and should first pass under an object (The frame of the boat that sticks through the middle, or a bolt that holds the pontoons) to act as a pulley so that the string is taut at all times which pulls the boom down and further stretches the sail and gives it a larger surface area.\u00a0\nThere , rigging is done. Read on to find out how to use this rigging to control the boat. The next step gives you a brief lesson on how to sail a boat.\u00a0\nBasically, all you need to do is pull the sails towards you, or let the wind pull it away from you by loosening your grip on the sail.\u00a0", "step_imgs": ["https://cdn.instructables.com/FJ8/7FCU/H6S499UJ/FJ87FCUH6S499UJ.LARGE.jpg", "https://cdn.instructables.com/FTW/8WPW/H6S499UK/FTW8WPWH6S499UK.LARGE.jpg"], "step_title": "Step 11: Rigging."}, {"step": 12, "steps_text": "Sailing\u00a0instructions\u00a0 (basic)\u00a0\nNow, i will give you an absolute crash course on sailing in this instructable.\u00a0WARNING: Do not take me as a sailing professor. I STRONGLY advise you go to a sailing instructor and properly learn how to sail on a liscenced boat. This is just for fun and for sailing on a small lake if you are a complete beginner.\u00a0\nAs i wrote in the first pages about sailing terminology, you have a front sail and a main sail. The main sail does the moving, and the front sail does the turning. Thats how it basically works. There is more to all this, but for now, this is whats its like.\u00a0\nThe basic rule with sailing is, get the wind behind you. That means that when you are sitting on the edge of the boat (on the boats sides) the wind should be blowing in to the back of your head. Again, this is extremely basic.\nTighten the front sail (Pull the rope towards you) and the main sail to go faster. Loosen the front sail and main sail to go slower. If your sails are flapping, either there is no wind, or the sail is too loose, or you are not with the wind to your back.\u00a0\nThe front sail should be adjusted a couple of times only, until you deem it is fit for the current wind, and then tied to something on the boat. this frees up a hand which you should use for the main sail, and the other for the rudder (unless your good at using your feet). The main sail needs to be constantly adjusted for wind movement (The front sail too, but thats way advanced)\u00a0\nThis will make you move forward.\nTo steer move the rudder. Move the rudder stick right to move left, and left to move..... Right.\u00a0\nNow, you know how to steer and move the boat forward. Let me teach you how to turn.\u00a0\nI recommend turning towards the wind (into the wind) Its safer for your boat. Build up a bit of speed and then sharply turn left or right (Depending on wind) As you do this, pull the main sail towards you and tighten the front sail. Once the sails start flapping, release all the strings, and keep turning. Once you have turned, go back to normal.\u00a0\nTroubleshooting:\u00a0\n\u00a0Q: I am not moving fast enough or at all\nA: Either there is no wind, or the sail is too loose, or you are not with your back to the wind.\u00a0\nQ: The rudder doesnt work fast enough\nA: Get a rudder that sticks deeper into the water and is wider.\u00a0\nQ: I tried the above and i am still moving slowly\nA: The main sail is too small, get a bigger mast and a bigger sail. Or go to a sailing instructor and ask him this stuff, maybe you aren't sailing properly.\u00a0", "step_imgs": ["https://cdn.instructables.com/F7T/KGLA/H672XEXR/F7TKGLAH672XEXR.LARGE.jpg"], "step_title": "Step 12: How to Sail the Boat."}, {"step": 13, "steps_text": "After finishing everything and making sure everything is done. Get it out on the water and if it floats (without water leaking into it) you are set to go. If however water does leak into it from one place or another. Try to spot the leak and stop it, and if you cant do that, add a few more layers of lacquer.\nBefore i leave you to it, i would like to say that writing this instructable brought back awesome memories, and i now close the circle by giving this boat to everyone here that loves to build and create stuff.\nI hope you enjoyed this instructable and remember, half the fun is building it :)\nGood luck in your future endeavors.\u00a0\nDuct tape.", "step_imgs": [], "step_title": "Step 13: Conclusion."}], "channel": "Boats"}, {"category": "outside", "description": "In this instructable I will show you how to make a Paracord dog collar. You can follow the same steps and make a bracelet too if you want. ", "title": "Make a Paracord Dog Collar", "url": "https://www.instructables.com/id/Make-A-Paracord-Dog-Collar/", "section": "outside", "steps": [{"step": 1, "steps_text": "To make the paracord dog collar you need 5 materials.ScissorsCollar Chain or a BuckleParacordA Different Colour of ParacordA LighterI used 14 feet of each colour and had a lot left over for a 14 inch collar so I would recommend you use less, maybe 11 feet.", "step_imgs": ["https://cdn.instructables.com/FOI/KN03/HRBNEC16/FOIKN03HRBNEC16.LARGE.jpg", "https://cdn.instructables.com/FZI/NRL4/HRBNEC13/FZINRL4HRBNEC13.LARGE.jpg", "https://cdn.instructables.com/F90/PG16/HRBNEBYM/F90PG16HRBNEBYM.LARGE.jpg", "https://cdn.instructables.com/FIU/NLUC/HRBNEBYN/FIUNLUCHRBNEBYN.LARGE.jpg", "https://cdn.instructables.com/FYJ/Q8Q8/HRBNEBYQ/FYJQ8Q8HRBNEBYQ.LARGE.jpg"], "step_title": "Step 1: Materials"}, {"step": 2, "steps_text": "You need to fuse your two colours together at the ends before you start the tying. To do this you must hold them in your hand and heat them evenly until they start to melt into a blob. The paracord should be held in the blue sectionof your flame so that it doesnt light on fire and get black.", "step_imgs": ["https://cdn.instructables.com/FX7/9694/HRBNEBYL/FX79694HRBNEBYL.LARGE.jpg", "https://cdn.instructables.com/FG5/GKBS/HRBNEBY5/FG5GKBSHRBNEBY5.LARGE.jpg", "https://cdn.instructables.com/FUB/JWM1/HRBNEBY6/FUBJWM1HRBNEBY6.LARGE.jpg"], "step_title": "Step 2: Fusing the Two Colours"}, {"step": 3, "steps_text": "You need to psuh your fused end of paracord through your chain and make a loop. After you do this push the other end of paracord through that loop all the way as i have done in the pictures.", "step_imgs": ["https://cdn.instructables.com/FTM/5OJA/HRBNEBY4/FTM5OJAHRBNEBY4.LARGE.jpg", "https://cdn.instructables.com/FV2/AVND/HRBNEBXP/FV2AVNDHRBNEBXP.LARGE.jpg"], "step_title": "Step 3: Looping on to the Chain"}, {"step": 4, "steps_text": "Now push the paracord through the other side, if you had a buckle you would want to push it up from the inside of what loop you made. ", "step_imgs": ["https://cdn.instructables.com/FXG/DV33/HRBNEC0O/FXGDV33HRBNEC0O.LARGE.jpg"], "step_title": "Step 4: Other Side"}, {"step": 5, "steps_text": "The steps for this weave are very basic and remain the same for the whole collar. First step is to take your first colour (green), the one you want to be more dominant, and make a loop with it crossing over the middle as I have shown in the picture. Second step is to wrap your other colour (yellow) around and under the middle section of the collar. The picture shows this better than I can explain.Finally you want to pull the yellow cord through the green loop and pull both ends tight. You want to check your length as it gets harder and harder to adjust length the further along you go with the weave. Make sure your knots are tight and even so the collar is uniform.", "step_imgs": ["https://cdn.instructables.com/FAB/VX7M/HRBNEC0M/FABVX7MHRBNEC0M.LARGE.jpg", "https://cdn.instructables.com/FB2/RIXO/HRBNEC07/FB2RIXOHRBNEC07.LARGE.jpg", "https://cdn.instructables.com/FUX/KU4A/HRBNEC05/FUXKU4AHRBNEC05.LARGE.jpg"], "step_title": "Step 5: The Basic Weave"}, {"step": 6, "steps_text": "This is what yours should look like", "step_imgs": ["https://cdn.instructables.com/FCF/K06D/HRBNEBZQ/FCFK06DHRBNEBZQ.LARGE.jpg"], "step_title": "Step 6: Progress"}, {"step": 7, "steps_text": "More progress", "step_imgs": ["https://cdn.instructables.com/FJL/AG95/HRBNEBZP/FJLAG95HRBNEBZP.LARGE.jpg"], "step_title": "Step 7: Progress"}, {"step": 8, "steps_text": "You can push your weave up and you will get more space for final knots", "step_imgs": ["https://cdn.instructables.com/FDH/Y7MY/HRBNEBZA/FDHY7MYHRBNEBZA.LARGE.jpg"], "step_title": "Step 8: Almost Finished"}, {"step": 9, "steps_text": "This is where I did my final knot.", "step_imgs": ["https://cdn.instructables.com/FOS/6B9X/HRBNEBYV/FOS6B9XHRBNEBYV.LARGE.jpg"], "step_title": "Step 9: Final Knot"}, {"step": 10, "steps_text": "Trim the excess paracord off.", "step_imgs": ["https://cdn.instructables.com/F6R/3D0R/HRBNEBYU/F6R3D0RHRBNEBYU.LARGE.jpg"], "step_title": "Step 10: Final Steps"}, {"step": 11, "steps_text": "Melt the trimmed paracord so that it doesn't unravel and you're done!", "step_imgs": ["https://cdn.instructables.com/FN3/4QIZ/HRBNEBYT/FN34QIZHRBNEBYT.LARGE.jpg"], "step_title": "Step 11: Last Step"}, {"step": 12, "steps_text": "Here is the final product and how yours should look too if you followed the steps correctly. I hope you enjoyed this instructable, comment pictures of your results!", "step_imgs": ["https://cdn.instructables.com/F9D/XGE2/HRBNEBYO/F9DXGE2HRBNEBYO.LARGE.jpg", "https://cdn.instructables.com/FIY/USF1/HRBNEBYP/FIYUSF1HRBNEBYP.LARGE.jpg"], "step_title": "Step 12: Conclusion"}], "channel": "Paracord"}, {"category": "technology", "description": "This is a calculator for windows 7 (I know 7 is out and 10 is in but this is a class assignment)  Now I am going to be walking you through the step by step process of getting this thing to work. Let's begin.", "title": "Calculator", "url": "https://www.instructables.com/id/Calculator-1/", "section": "technology", "steps": [{"step": 1, "steps_text": "To start things off we first must learn how to open the calculator program up. So. Start by clicking the start menu in the bottom left corner of your desktop. (I'm going to assume you know how to get to your desktop. Though if you don't. Lord help you please.)", "step_imgs": ["https://cdn.instructables.com/FRF/CUZS/IEKJ0SUP/FRFCUZSIEKJ0SUP.LARGE.jpg"], "step_title": "Step 1: Getting the Calculator on Your Screen"}, {"step": 2, "steps_text": "Next we will find the calculator app inside you files. So. Go ahead and click all programs. and then in the mess of folders and downloadable things. Go ahead and find a folder labelled accessories.", "step_imgs": ["https://cdn.instructables.com/FWQ/D77Q/IEKJ0T3F/FWQD77QIEKJ0T3F.LARGE.jpg"], "step_title": "Step 2: Digging Through Folders"}, {"step": 3, "steps_text": "Inside the accessories folder is where you will find the mystical magical beast that is your calculator application. Double click to open that sucker up and get to work :)Note: The apps are sorted by alphabetical order on my computer and is likely sorted the same way on yours. So if it isn't at the very top NEVER FEAR it is likely just located a little further down from the top than it is in the picture.", "step_imgs": ["https://cdn.instructables.com/FMU/FLRD/IEKJ0TVI/FMUFLRDIEKJ0TVI.LARGE.jpg"], "step_title": "Step 3: Finding the Calculator"}, {"step": 4, "steps_text": "Now that you're finally in the calculator it is time to go through what this lovely little invention can do. First off you're going to want to click view in the top left corner. once there you will have these option1. standard (Basic number functions including add, subtract, multiply, divide)2. scientific (More complex calculator for use on subjects such as calculus and physics)3. programmer (Used primarily by programmers for programming purposes)4. statistics (Used to keep track of and allow easy viewing of statistical data)These are the different types of calculator you have access too.", "step_imgs": ["https://cdn.instructables.com/FOK/JSHZ/IEMNGSWD/FOKJSHZIEMNGSWD.LARGE.jpg"], "step_title": "Step 4: Calculation"}, {"step": 5, "steps_text": "Now the time has come to push all of those lovely buttons to your hearts content. All you have to do is move your mouse over the button you want to push and click that mouse. Now you may be curious as to what some of those buttons do and ultimately I'm going to have to say if you don't know what they do then don't use them. (Explaining what they all do and how they work could easily make another 50-100 steps)", "step_imgs": ["https://cdn.instructables.com/FWK/JCIA/IEMNGYUP/FWKJCIAIEMNGYUP.LARGE.jpg"], "step_title": "Step 5: The Moment We've All Been Waiting For"}, {"step": 6, "steps_text": "There are a few other functions that can be used with this little device. History allows you to view your calculation history (Though it only works with some of the calculators) Digit grouping which as the name imply's groups the digits together.", "step_imgs": ["https://cdn.instructables.com/FWT/2UB0/IEMNGUW6/FWT2UB0IEMNGUW6.LARGE.jpg"], "step_title": "Step 6: Other Functions"}, {"step": 7, "steps_text": "You also have the ability to use this calculator for unit conversions, calculating the difference between to dates, or even looking into your mortgage, vehicle lease, and fuel economy. (Both in miles per gallon and liters per 100 kilometers)", "step_imgs": ["https://cdn.instructables.com/F3W/XVJK/IEMNGVTA/F3WXVJKIEMNGVTA.LARGE.jpg"], "step_title": "Step 7: Other Functions Intro"}, {"step": 8, "steps_text": "We'll begin with the unit converter. To work this little gadget here all you have to do is1. Select what type of conversion it is. (In the picture it is angle)2. Choose what you're starting with and what you are converting to. (In the picture it is degree to degree)3. Enter your value in the space marked \"from\" and it will auto convert the unit for you :D", "step_imgs": ["https://cdn.instructables.com/FUQ/8CJ6/IEO2XKNY/FUQ8CJ6IEO2XKNY.LARGE.jpg"], "step_title": "Step 8: Unit Conversions."}, {"step": 9, "steps_text": "Next comes the date calculator. It is very simple.1. Choose whether you want calculator the difference between days or add and subtract days to get a specific date2. If finding the difference between two dates select the \"from\" box and find one of the dates you want.3. select the \"to\" box and find and select the other date you want.Now if you want to get the specific date 1. click in the from box and find the one date you want to add or subtract from2. select add or subtract3. click around in the years, months, and days boxes to select the amount yo want to take away or add4. select calculate and let the magic happen", "step_imgs": ["https://cdn.instructables.com/F8X/TEI5/IEO2XLXE/F8XTEI5IEO2XLXE.LARGE.jpg"], "step_title": "Step 9: Date Calculation"}, {"step": 10, "steps_text": "Finally we get on to worksheets. Using this you can look at your mortgage, Fuel economy for your car (Both in imperial and metric) and look at your vehicle lease.For the mortgage aspect you1. Select what you want calculated (Down Payment, Purchase Price, Monthly Payment, or Term)2. Enter in the info required in all the boxes and calculateIt works the exact same way for your vehicle lease only with different information neededAs for fuel economy (Metric and Imperial) it again works much the same way.1. Select fuel economy, distance, or fuel used2. Enter in the necessary info into the boxes and there you go.", "step_imgs": ["https://cdn.instructables.com/FXC/RUFB/IEO2XM66/FXCRUFBIEO2XM66.LARGE.jpg"], "step_title": "Step 10: Worksheets"}, {"step": 11, "steps_text": "And finally we come around to editing. The editing is used mostly for people who want to change calculations they made through the use of the calculators history. If you hover your mouse over the history portion of the edit tab you can see that you have 4 options. 1. copy history (You can use this to copy the history in your calculator to place elsewhere)2. edit (This allows you to go into the calculator history and change any numbers you may have entered in incorrectly)3. Cancel edit (For those cases in which you see a mistake edit it and realize it was correct the whole time)4. Clear (Meant to clean out your history for a fresh set of numbers)There's also the basic copy and paste functions where you can copy one number from your history or current calculation so that you can paste it (using the paste function) elsewhere", "step_imgs": ["https://cdn.instructables.com/FGJ/SSUV/IEMNH3OC/FGJSSUVIEMNH3OC.LARGE.jpg"], "step_title": "Step 11: Editing"}, {"step": 12, "steps_text": "and that my friends ends the magical journey on the S.S.S. Calculator instructable. Hope this helps with any and all of your calculator needs. Bye bye.P.S. there is also a help button right next to the edit button that you can use to get further information about the calculator", "step_imgs": ["https://cdn.instructables.com/FHS/FBCW/IEMNGX86/FHSFBCWIEMNGX86.LARGE.jpg"], "step_title": "Step 12: Outro"}], "channel": "Microsoft"}, {"category": "technology", "description": "I will show you how to solve a common problem found in Calculus classes. The point is to maximize the volume of a box. I will use this example problem to show how this is done: A rectangular box without lid is to be made from a square cardboard of sides 18 cm by cutting equal squares from each corner and then folding up the sides. Find the length of the side of the square that must be cut off if the volume of the box is to be maximized. What is the maximum volume?", "title": "How to Maximize Box Volume Using Calculus by Maria Clark", "url": "https://www.instructables.com/id/How-to-Maximize-Box-Volume-Using-Calculus-by-Maria/", "section": "technology", "steps": [{"step": 1, "steps_text": "When you first hear the problem, what is your initial guess as to how large the squares should be? Here, I have done a couple of examples of what the boxes will end up looking like depending on the size of the square you have chosen. The first image is if you make the squares with 6 cm sides. It forms a cube which is shown in the second image. The third image is if you thought smaller squares would maximize your volume. The squares are formed by 1 cm sides instead. The fourth image is what that box would look like..", "step_imgs": ["https://cdn.instructables.com/FJL/3MY1/I6WOLDB0/FJL3MY1I6WOLDB0.LARGE.jpg", "https://cdn.instructables.com/FWX/1CPO/I6WOLDB7/FWX1CPOI6WOLDB7.LARGE.jpg", "https://cdn.instructables.com/FYH/BJFQ/I6WOLDB4/FYHBJFQI6WOLDB4.LARGE.jpg", "https://cdn.instructables.com/FJR/NRLD/I6WOLDB8/FJRNRLDI6WOLDB8.LARGE.jpg"], "step_title": "Step 1: Estimate"}, {"step": 2, "steps_text": "In order to maximize the volume, we must first assign a value to the sides of the squares we will be cuting out of the cardboard. We will call that value \"x\" for now. Now that we have assigned a value for the sides, we can write the equation of the volume of the box. We must multiply the width by the length by the height. The original piece of cardboard is 18 cm by 18 cm. Therefore after we cut the squares out, each side of the piece of the cardboard will be (18 - 2x). Once we fold up those sides the height will be represented by x. The volume of the final rectangular box will therefore be: (18-2x)(18-2x)(x).", "step_imgs": [], "step_title": "Step 2: Find the Equation"}, {"step": 3, "steps_text": "In order to find the value of the x that will maximize the volume of the box, we must take the derivative of the equation we found in step 2. After that is found, the equation must be set equal to 0 to get the value of x. First of all, we have to note that the values of x must be between 0 and 9 because our volume can not be 0 or less then 0. Values in this range will not give us 0 or a negative number.To take the derivative of the equation, first we must expand it. We must multiply (18-2x)(18-2x)(x) all out. Expanded, this looks like: 4x^2-72x+324. Next, we take the derivative of this expanded equation. The result of this would be: 12x^2-144x+324. This is our first derivative, and to find x, it is to be set equal to 0.To make this easier, a 12 can be factored out. 12(x^2-12x+27)=0. Reduced, this becomes 12(x-9)(x-3)=0. After this reduction, we find that x is 9 or x is 3. Earlier we stated that x must be between 0 and 9. Because of this, the only possible value of x is 3. The value 9 would give us an end volume of 0 cm^3 using the original equation. ", "step_imgs": [], "step_title": "Step 3: Find the Derivative"}, {"step": 4, "steps_text": "In order to confirm that x=3 will maximize the volume of this box, we must take the second derivative. If x=3 in the second derivative is a positive number, then the 3 is a critical point giving us a minimum. Therefore it will not maximize our box. If the value is negative, then 3 is a maximum and indeed gives us the maximum value of our box.The first derivative was 12x^2-144x+324. Taking the derivative of that, in order to get our second derivative, we get: f\"(x) = 24x-144. Plugging in 3 for x, we get: f\"(3) = 24(3)-144 = -72. ", "step_imgs": [], "step_title": "Step 4: Use the Second Derivative Test "}, {"step": 5, "steps_text": "We now know that x must be 3. Cutting out squares with sides of 3 cm and then folding up the sides will maximize the volume of the rectangular box formed by the piece of cardboard. The pictures shown give a representation of the box with the maximum volume. In order to get the value of the volume, plug in 3 to the original equation. (18-2(3))(18-2(3))(3) = 432 cm^3. This is the maximum value.", "step_imgs": ["https://cdn.instructables.com/F5J/IPU6/I6WOLDAZ/F5JIPU6I6WOLDAZ.LARGE.jpg", "https://cdn.instructables.com/FE8/Y4HT/I6WOLDB6/FE8Y4HTI6WOLDB6.LARGE.jpg"], "step_title": "Step 5: Find the Volume"}, {"step": 6, "steps_text": "We have solved our problem. Just to prove the point, we can compare the volume of our answer to the volumes of our estimations. Our first estimation was x = 6 cm. Plugging this into the volume equation, we get: (18-2(6))(18-2(6))(6) = 216 cm^3.  Our second estimation, with the smaller squares, was x = 1 cm. Plugging this value in, we get: (18-2(1))(18-2(1))(1) = 256 cm^3. Both of these volumes are considerably less than our answer of 432 cm^3. These volumes can be compared in the above picture with all three of the finished boxes. The box with the 3 cm squares cut out is shown in pink, the box with 6 cm squares cut out is in green, and the box with the 1 cm squares cut out is in blue. ", "step_imgs": ["https://cdn.instructables.com/F22/LELS/I6WOLDBC/F22LELSI6WOLDBC.LARGE.jpg"], "step_title": "Step 6: Compare the Results to Estimations"}, {"step": 7, "steps_text": "Here is a flow chart for the process just described. This can be helpful to organize your thoughts and is more handy then the whole \"how-to\" page. This chart is for maximizing or minimizing volumes.  ", "step_imgs": ["https://cdn.instructables.com/FUO/FOEV/I6ZTKN6Z/FUOFOEVI6ZTKN6Z.LARGE.jpg"], "step_title": "Step 7: "}], "channel": "Science"}, {"category": "technology", "description": "HI, This is a simple arduino based home monitoring project. here we use some sensors that can monitor the conditions of the home and upload it to cloud. the internet of platform we use here is dweet.io and freeboard.ioboth are free to use, hence you can try this at home and also the sensors we use are cheaper and works well.components required:arduino uno or megaethernet shieldethernet cableworking net connectionlaptoprain sensorDHT11ultrasonic sensorconnecting wires (few)", "title": "HOME MONITORING USING ARDUINO AND IOT", "url": "https://www.instructables.com/id/HOME-MONITORING-USING-ARDUINO-AND-IOT/", "section": "technology", "steps": [{"step": 1, "steps_text": "STEP 2:now we can create account in the cloud platform. follow the steps given belowgo to  www.freeboard.ioclick on startup. create an account in that websiteafter completing signup in freeboard.io now go to  www.dweet.ioscroll down the page till you see topic dweeting, below that you will see the link\"https://dweet.io/dweet/for/my-thing-name?hello=wor...here you can change the my-thing-name to your required name, this will act like your profile name. make sure it is smaller and remember-able. after changing the thingname go to that URLfor example the thingname i keep is tutorial yo need to type like \"https://dweet.io/dweet/for/tutorial?hello=world\"next the word hello can be replaced with some other name you want, in this tutorial we are going to show the values of temperature, humidity, waterlevel in tank,door condition, and the outdoor condition, hence in the place of hello we are going to replace with temperature, humidity, waterlevel,doorcondition,outdoorcondition. make sure everything has = symbol and should be connected by & symbolnow our cloud platform is ready, in the next step we can discuss about the arduino connections", "step_imgs": [], "step_title": "Step 1: "}, {"step": 2, "steps_text": "arduino connections:assemble all the components required arduino, ethernet shield, rain sensor,hall sensor, DHT11 sensor, breadboardmount the ethernet shield correctly on your arduino shield, connect it to the lan if you dont have lan in your home its okay, we can connect it to the laptop ethernet, make sure you bridge the lan connection with the ethernet so that only arduino can get internet connection.connect the 5v and ground to the breadboardnow first we take the DHT11 sensorconnect the 5v to 5v connection and ground to gnd correctly, the second pin in that sensor is the signal connect it to pin no 2, if you already have dht11 library it will work, if you dont have the library, download it in the manage library search for dht library and download it,next we connect the ultrasonic sensorconnect the 5v to 5v ground to gnd, trig pin to arduino pin 7 and echo pin to arduino pin 5. include the ultrasonic library to your compilerrain sensorasusual 5v and ground are connected . here we are going to use the digital pin so connect the digital pin to arduino pin 4hall sensorconnect the 5v and ground, connect the third pin to the arduino pin 8. in case if you dont know the pinouts of hall sensor  see the above imagenow your connections are over lets go to coding in next step", "step_imgs": ["https://cdn.instructables.com/FVM/5SY2/IZYGONNW/FVM5SY2IZYGONNW.LARGE.jpg"], "step_title": "Step 2: Arduino Connections"}, {"step": 3, "steps_text": "#include <SPI.h>#include <Ethernet.h> #include <SimpleDHT.h >#include <Ultrasonic.h>Ultrasonic Ultrasonic(7, 5);int pinDHT11 = 2; byte temperature = 0; byte humidity = 0; int ultra1; int hallstate=0; int hallpin=8;SimpleDHT11 dht11;byte mac[] = {   0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED }; IPAddress ip(192, xxx, xx, xx); EthernetClient client; char server[] = \"www.dweet.io\"; unsigned long lastConnectionTime = 0;  const unsigned long postingInterval = 10L * 1000L;void setup() {   Serial.begin(9600);   Serial.println(\"--- Start ---\");   delay(1000);   Ethernet.begin(mac, ip);    Serial.print(\"My IP address: \");   Serial.println(Ethernet.localIP());   pinMode(hallpin,INPUT); } void loop() {         if (client.available()) {     char c = client.read();     Serial.write(c);   }   if (millis() - lastConnectionTime > postingInterval) {     httpRequest();   }     dht11.read(pinDHT11, &temperature, &humidity, NULL);     }  void httpRequest() {   client.stop(); if (client.connect(server, 80)) {     Serial.println(\"connected\");        String s = \"POST /dweet/for/home?temperature=\";        s.concat((int)temperature);         s.concat(\"&humidity=\");        s.concat((int)humidity);      s.concat(\"&watertank=\");        s.concat(Ultrasonic.distanceRead());      s.concat(\"&room=\");        s.concat(hallsen());       s.concat(\"&outdoor=\");      s.concat(rainsen());      Serial.println(s);      client.println(s);       client.println(\"Host:  https://www.dweet.io\");       client.println(\"Connection: close\");       client.println();            lastConnectionTime = millis();   }   else {     Serial.println(\"connection failed\");   }  }   String hallsen(){     hallstate=digitalRead(hallpin);     if(hallstate==1){       return (\"dooropen\");     }     else     {       return (\"doorclose\");     }   }  String rainsen(){   int rain=digitalRead(4);  //rain sensor   if (rain==0){     return (\"raining\");   }   if (rain==1)   {     return (\"clear\");   }  }", "step_imgs": [], "step_title": "Step 3: Arduino Coding"}, {"step": 4, "steps_text": "the code should be uploaded to the arduinonote that the ipaddress above should be changed to your ip addressnow we are going to create the panels in freeboard.iologin to the freeboard.ioin the freeboard.io after login create a new freeboard enter any name you want no retrictions hereenter in to your freeboardin the data sources, click on add in select a type drop box select \"dweet.io in the name enter any name you need thingname should be \"home\"   click on savenow in the left side of the webpage you can see add pane button click on it, a new pane will be createdyou can see the plus button click on it select type as gauge title can be anythingin the value click on the +datasource you can see your data source click on the datasource you created, you will see the thing names you created click anything ex temperature, and click oklike this create panes for humidity, water level, create strings for the door condition and outdoor conditions. upload your code now , the datas will change real time as you see in the videoif you have any doubt or errors comment here", "step_imgs": [], "step_title": "Step 4: Final Step"}], "channel": "Arduino"}, {"category": "technology", "description": "There is more than one way to calculate volume.  This Instructable will show you how to calculate volume using water.  I selected this empty can because I wanted to know its internal volume.First, I dried the can out with a towel and made sure that it was clean.   ", "title": "Volume of a Cylinder", "url": "https://www.instructables.com/id/Volume-of-a-Cylinder-2/", "section": "technology", "steps": [{"step": 1, "steps_text": "Next , I placed the can on a scale and changed the units to grams.This can happens to have a mass of 48 grams.", "step_imgs": ["https://cdn.instructables.com/FXC/9G92/FQR1X5UX/FXC9G92FQR1X5UX.LARGE.jpg"], "step_title": "Step 1: Place Empty Can on Scale."}, {"step": 2, "steps_text": "My scale has a nifty feature that lets you tare out the mass of the scale.  I pressed the tare button and the scale resets back to zero with the can still resting on the scale.", "step_imgs": ["https://cdn.instructables.com/FV4/4Q81/FQR1X5UW/FV44Q81FQR1X5UW.LARGE.jpg"], "step_title": "Step 2: Tare Out the Empty Can."}, {"step": 3, "steps_text": "Now, I filled the can with water up to the brim.  I made sure that I did not spill any.The mass of the water in the can is 454 grams.   This is the true mass of the water because the mass of the can was already accounted for.Ok, here is how I can figure out the volume of the can.   The density of water is 0.9982 g/cc at 68 degrees Fahrenheit.If we take the weight of the water, 454 grams and divide this by the density of the water at 68F we will be left with the volume of the water.454 grams / 0.9982 g/cc = 454.8 cubic centimeters of water.This turns out to be 15.38 ounces of volume for this particular can.  Using this same technique the volume of a sphere or any enclosed object can be calculated.That is how you can find the volume of a cylinder using water.   I hope you enjoyed this Instructable.While your at it check out my other Instructables:https://www.instructables.com/id/Digital-Measurment-Estimator/https://www.instructables.com/id/Hanging-around/https://www.instructables.com/id/476_better_than_a_Bank/", "step_imgs": ["https://cdn.instructables.com/F0V/R4KW/FQR1X5UY/F0VR4KWFQR1X5UY.LARGE.jpg"], "step_title": "Step 3: Fill With Water."}], "channel": "Science"}, {"category": "technology", "description": "It's a pretty simple process, it may take some getting used to, but once you get the hang of it, it should come easily! ", "title": "How to Balance Equations (elements)", "url": "https://www.instructables.com/id/How-to-Balance-Equations-elements/", "section": "technology", "steps": [{"step": 1, "steps_text": "If I have HCl + Ca >> CaCl2 + H, I have one Hydrogen, one Chlorine, and one Calcium on the Reactants side, and one Calcium, two Chlorine, and one Hydrogen on the Products side. It should be written like this >> H-1, Cl-1, Ca-1 || H-1, Cl-2, Ca-1.Reactants                 ProductsThis is called counting atoms. It's very important when writing and balancing chemical equations.", "step_imgs": ["https://cdn.instructables.com/FNE/ENW7/J8F5SN4N/FNEENW7J8F5SN4N.LARGE.jpg", "https://cdn.instructables.com/FDK/0URQ/J8F5SN3K/FDK0URQJ8F5SN3K.LARGE.jpg"], "step_title": "Step 1: Step 1: Write Down the Different Elements in You Equation"}, {"step": 2, "steps_text": "Already, you can see that this >> H-1, Cl-1, Ca-1 || H-1, Cl-2, Ca-1 isn't balanced. You have two Cl on the Product side and only one Cl on the Reactant side. Since elements don't magically appear from nowhere, the formula has to be balanced. Heres how to do this.First, you would look at the equation and decide, how do I make these Reactants and Products even? HCl + Ca >> CaCl2 + H  2HCl + Ca >> CaCl2 + H See, I've added a 2 to the HCl. Now, we would change the list of elements to this:H- 2, Cl- 2, Ca-1 || H-1, Cl-2, Ca- 1 (mark through the 1 and put a 2 beside it) Hydrogen (H) and Chlorine (Cl) Both change to 2 because we added a coefficient to the front. It's still not equal though. We now have H- 2, Cl- 2, Ca-1 || H-1, Cl-2, Ca- 1 We need more Hydrogen on the Products side. So, we do this:2HCl + Ca >> CaCl2 + 2H Now we've added a 2 to the front of Hydrogen. The list of elements changes again.H- 2, Cl- 2, Ca-1 || H- 2, Cl-2, Ca- 1 (again, mark through the 1 and put a 2 beside it.) The equation is now balanced because there is 2 H, 2 Cl, and 1 Ca on the Reactants side, and 2 H, 2 Cl, and 1 Ca on the Products side.", "step_imgs": ["https://cdn.instructables.com/F4V/BDB4/J8F5SN9V/F4VBDB4J8F5SN9V.LARGE.jpg", "https://cdn.instructables.com/FC0/LE0B/J8F5SN78/FC0LE0BJ8F5SN78.LARGE.jpg", "https://cdn.instructables.com/F0V/R83U/J8F5SN63/F0VR83UJ8F5SN63.LARGE.jpg"], "step_title": "Step 2: Step 2: Adding Coefficients"}, {"step": 3, "steps_text": "Here's what we covered.Reactants: elements on the left side of the equationProducts: elements on the right side of the equationCoefficients: numbers that change the amount of elements on the Reactants or Products sides.Thanks for taking the time to learn this!", "step_imgs": [], "step_title": "Step 3: Wrapping Up"}], "channel": "Science"}, {"category": "technology", "description": "The previous section demonstrated how to predict this year\u2019s sales (the dependent variable) based on one independent variable (number of years of experience) by using simple regression analysis. Similarly, this year\u2019s sales (the dependent variable) can be predicted from more than one independent variable, such as Years of experience and Years of education, by using multiple regression analysis. Created by the ITS Training Program at CSULA for students. ", "title": "Multiple Regression to Predict a Variable: SPSS (3.5)", "url": "https://www.instructables.com/id/Multiple-Regression-to-Predict-a-Variable-SPSS-3/", "section": "technology", "steps": [], "channel": "Software"}, {"category": "technology", "description": "This is my third instructable of my Linkit One IoT series. Do check my previous instructables because this instructables is a continuation of it.Here are the link:1st Linkit one IoT Instructable2nd Linkit one IoT InstructableIn This tutorial I will show you how to trigger an email alert with Linkit One board by using ubidots Platform", "title": "Linkit One IoT: Sending Alert Email", "url": "https://www.instructables.com/id/Linkit-One-IoT-sending-alert-email/", "section": "technology", "steps": [{"step": 1, "steps_text": "as I mention before you do need to check my previous instructable here. because we will not do any coding or different hardware setup in here.The email that will be sent contain alert notification if the Gas level are above normal based on the data uploaded to the ubidots platform.We will start at your ubidots dasboard, click the \"Event\" Menu just like in the picture.", "step_imgs": ["https://cdn.instructables.com/FVG/7PS4/IFY7BSS5/FVG7PS4IFY7BSS5.LARGE.jpg", "https://cdn.instructables.com/FSH/H28L/IFVC9EMY/FSHH28LIFVC9EMY.LARGE.jpg"], "step_title": "Step 1: Setting an Event"}, {"step": 2, "steps_text": "Click on the \"add event\" box.Then choose the gas data that we will use", "step_imgs": ["https://cdn.instructables.com/FOZ/9D0A/IFY7BPJ3/FOZ9D0AIFY7BPJ3.LARGE.jpg", "https://cdn.instructables.com/FGX/WFPM/IFY7BPI2/FGXWFPMIFY7BPI2.LARGE.jpg"], "step_title": "Step 2: Create a New Event"}, {"step": 3, "steps_text": "Choose the MQ 2 data variable", "step_imgs": ["https://cdn.instructables.com/F7A/YIWL/IFY7BPF9/F7AYIWLIFY7BPF9.LARGE.jpg"], "step_title": "Step 3: Data Variable"}, {"step": 4, "steps_text": "this is the section where you set the data value that will trigger the alert notification.The gas normal data is below 100, so the abnormal data is above or greater than 100.", "step_imgs": ["https://cdn.instructables.com/FG9/RN8U/IFY7BPE8/FG9RN8UIFY7BPE8.LARGE.jpg", "https://cdn.instructables.com/F9R/V95B/IFY7BPBI/F9RV95BIFY7BPBI.LARGE.jpg"], "step_title": "Step 4: IFTTT (If This Then That)"}, {"step": 5, "steps_text": "Choose the email iconeFill the box with your own email address and set the subject as you like.after you do that, you will ask to give a name to this event. Name it whatever you like", "step_imgs": ["https://cdn.instructables.com/FSZ/ZTDI/IFY7BPAH/FSZZTDIIFY7BPAH.LARGE.jpg", "https://cdn.instructables.com/FPL/L9L6/IFY7BSP9/FPLL9L6IFY7BSP9.LARGE.jpg", "https://cdn.instructables.com/F2B/C4NA/IFY7BSP3/F2BC4NAIFY7BSP3.LARGE.jpg"], "step_title": "Step 5: Set Your Email Address and Subject"}, {"step": 6, "steps_text": "now you have a new event for your project.Try to give the sensor gas from a gas lighter to get a big sensor data above 100 then you will receive the email that you've just set before.", "step_imgs": ["https://cdn.instructables.com/FY6/FUNX/IFY7BSOZ/FY6FUNXIFY7BSOZ.LARGE.jpg", "https://cdn.instructables.com/FW9/BXZQ/IFY7BSOV/FW9BXZQIFY7BSOV.LARGE.jpg"], "step_title": "Step 6: You Got Mail"}], "channel": "Arduino"}, {"category": "technology", "description": "Hey guys this is Gaige TheEngineer here to give you a basic arduino project: The Arduino LCD thermometer This is something a 12 year old can do pretty easy. So please enjoy and check out my Youtube Channel (even if there is nothing on there yet! There will be videos soon!!!)Please subscribe and I will do many more projects, Please also if you have any suggestions on projects, please comment on my Channel as well. ", "title": "Arduino LCD Thermometer", "url": "https://www.instructables.com/id/Arduino-LCD-Thermometer/", "section": "technology", "steps": [{"step": 1, "steps_text": "This simple Project Requires A couple thing You might have if you have the arduino kits or parts.ComponentsArduino Uno R3 Jumpers LCD Liquid Crystal Display 16x2 Potentiometer LM36Gz Bread Board, or PCB if your making this permanent( but I recommend bread board prototype first!) 9V Power Source", "step_imgs": ["https://cdn.instructables.com/FCB/I3HJ/I88LOFHT/FCBI3HJI88LOFHT.LARGE.jpg", "https://cdn.instructables.com/FV5/Z9TJ/I88LOF8V/FV5Z9TJI88LOF8V.LARGE.jpg", "https://cdn.instructables.com/F3W/H1IT/I88LOFCX/F3WH1ITI88LOFCX.LARGE.jpg", "https://cdn.instructables.com/FQN/RLBF/I88LOFH5/FQNRLBFI88LOFH5.LARGE.jpg", "https://cdn.instructables.com/FCW/QMLL/I88LOFQ7/FCWQMLLI88LOFQ7.LARGE.jpg", "https://cdn.instructables.com/F2U/RKY3/I88LOFQ5/F2URKY3I88LOFQ5.LARGE.jpg"], "step_title": "Step 1: What You Will Need"}, {"step": 2, "steps_text": "LCD Pins connections:Pin 1 to Arduino GNDPin 2 to Arduino 5VPin 3 to wiper ( this is the middle pin of the 10k potentiometer )Pin 4 to Arduino pin 12Pin 5 to Arduino GNDPin 6 to Arduino pin 11Pin 11 to Arduino pin 5Pin 12 to Arduino  pin 4Pin 13 to Arduino pin 3Pin 14 to Arduino pin 2The Temperature Sensor is easy: Just connect the Middle To Arduino Analog Pin A0and the Positive to one side and negative to the other. CAUTION IF YOU CONNECT THE GND AND + PINS WRONG ON THE TEMP SENSOR IT WILL GET VERY HOT> USE AT YOUR OWN RISK AND YOU WILL BREAK THE SENSOR.The temp sensor isn't shown on the picture.", "step_imgs": ["https://cdn.instructables.com/F7D/5OVG/I88LPD0M/F7D5OVGI88LPD0M.LARGE.jpg"], "step_title": "Step 2: Putting It Together"}, {"step": 3, "steps_text": "Here is the code.Author: Gaige KernsAuthor:       Gaige Kerns--------------------------------------------------------------*/\n#include \n// Arduino pins used for LCD\nLiquidCrystal lcd(12, 11, 5, 4, 3, 2);void setup() {\n    // initialize the LCD display\n    lcd.begin(16, 2);\n}void loop() {\n    float temperature = 0.0;   // stores the calculated temperature\n    int sample;                // counts through ADC samples\n    float ten_samples = 0.0;   // stores sum of 10 samples\n  \n    // take 10 samples from the MCP9700\n    for (sample = 0; sample < 10; sample++) {\n        // convert A0 value to temperature\n        temperature = ((float)analogRead(A0) * 5.0 / 1024.0) - 0.5;\n        temperature = temperature / 0.01;\n        // sample every 0.1 seconds\n        delay(100);\n        // sum of all samples\n        ten_samples = ten_samples + temperature;\n    }\n    // get the average value of 10 temperatures\n    temperature = ten_samples / 10.0;\n    // display the temperature on the LCD\n    lcd.setCursor(0, 0);\n    lcd.print(temperature);\n    lcd.print(\" deg. C  \");\n    ten_samples = 0.0;\n}", "step_imgs": [], "step_title": "Step 3: CODE"}], "channel": "Arduino"}, {"category": "technology", "description": "This is the my first personnel Arduino project. Even through i plan to automate our over tank water level i don't like to invest more money on instruments. I have some Arduino board and relay boards from my friends. So use that boards and some cheap rate sensors purchase from store.Most of the automation come to effect because of the laziness of people. Like wise this is because of my laziness i did this project. When ever my mom want i want to go to roof top to see the water level. Now Arduino do my work.", "title": "Accurate Liquid Level Controller With Low Cost Sensor and TV Remote for Settings", "url": "https://www.instructables.com/id/Accurate-Liquid-level-Controller-with-low-cost-sen/", "section": "technology", "steps": [{"step": 1, "steps_text": "Materials requiredElectronics Parts1) Arduino UNO board.2) Plain pcb.3) 16 X 2 LCD display (I use serial LCD display it only needed 3 wires)4) Output relay board.5) IR sensor for remote settings.6) Multiple rotation potentiometer(i use 5 rotation 47k potentiometer).7) Wires.Mechanical Parts1) Pipe for fix the sensor.2) Wheel.3) Strong thread or String(used to join necklace).4) Counter weight.5) Ball or thermocol (for floating)Tools needed1) Soldering iron, lead and paste.2) Screw drivers.3) Spanners.4) Hacksaw blade.", "step_imgs": ["https://cdn.instructables.com/FVX/8LGR/I8OH3RFY/FVX8LGRI8OH3RFY.LARGE.jpg", "https://cdn.instructables.com/FBN/W9FH/I8OH3RH3/FBNW9FHI8OH3RH3.LARGE.jpg"], "step_title": "Step 1: Materials Required"}, {"step": 2, "steps_text": "This is my house. on the top of the second floor we have water tank. we pump water from boring to the tank. Pump is fixed under the steps of the first floor. The problem now i facing is once the water is empty then only we able to know. If we switch on the pump once it got filled on hear the over flow sound we switch off the pump. Some times it more irritate me while taking shower water empty in the tank. For drinking water we have separate tank So want to check the water level frequently in a week. My mom many time ask me to check the water level of the tank, I go to the second floor and climb over it to see the water level.I want to stop all this in a very low cost effective and long run solution. Low cost level switches only on and off the pump. I also want to know the exact water level.So plan to fix a low cost sensor on the tank. With that sensor i want to see the water level and also automatically switch on and off the pump. That indicator is plan to fix in the ground floor so that all the family members able to see the water level.", "step_imgs": ["https://cdn.instructables.com/F3W/Q0JG/I8OH41ZA/F3WQ0JGI8OH41ZA.LARGE.jpg", "https://cdn.instructables.com/FZG/ISHX/I8OH41Z8/FZGISHXI8OH41Z8.LARGE.jpg"], "step_title": "Step 2: Current Situation and Plan"}, {"step": 3, "steps_text": "CircuitI don't want to take risk by develop a large circuit. A simple circuit as shown in the figure. I use IR Sensor because for setting if i use buttons then want to provide a strong en closer, so if remote is used once installed don't want to touch it for any purpose.MechanicalAs per diagram choose the wheel size according to no of rotation in potentiometer and  the height of the tank. For example i using a potentiometer with 5 rotation. I plan to use only 4 rotation. So if i use 3 inch radius wheel then the circumference is 18.85 inch. So for 4 rotation its is 75.4 inch (more than 6 feet) its more for my tank. So like wise calculate for your tank.Stick the middle of the thread on the wheel and roll one in clock wise and another one on anticlock wise. So as to stop thread from rotate itself with out potentiometer. Weight with ball or thermocol must be greater than the weight in the opposite side.", "step_imgs": ["https://cdn.instructables.com/FVV/N0VH/I8OH47IJ/FVVN0VHI8OH47IJ.LARGE.jpg", "https://cdn.instructables.com/FWQ/25LM/I8OH47KV/FWQ25LMI8OH47KV.LARGE.jpg"], "step_title": "Step 3: Circuit and Mechanical Plan"}, {"step": 4, "steps_text": "At first Using the plain PCB take the pins required, pins want to solder are +5V, +12V, GND, A1, 2, 4, 11. +5V,GND-LCD power, Potentiometer, IR Receiver+12v,GND-Relay moduleA1 - Potentiometer Analog input2 - Serial LCD data pin4 - Relay module control pin11-IR receiver data pinMake some knot for each set of wire to avoid wired from crossed and confused. The did a bracelet knot here.Leave enough wire for each module. For potentiometer only leave a very long wire because it is want to be fixed on the third floor.", "step_imgs": ["https://cdn.instructables.com/FK9/ZVXQ/I8OH3RGG/FK9ZVXQI8OH3RGG.LARGE.jpg", "https://cdn.instructables.com/FSZ/LTGS/I8OH3RGI/FSZLTGSI8OH3RGI.LARGE.jpg", "https://cdn.instructables.com/FXW/Z8CP/I8OH3RH4/FXWZ8CPI8OH3RH4.LARGE.jpg"], "step_title": "Step 4: Soldering the Circuit"}, {"step": 5, "steps_text": "ProgrammingOpen arduino developer and start write the program even as per your style. Before writing list down what is want to done. List the actions.1) Auto on and off - want to save the upper and lower set point and when it goes up switch off and goes down switch  on2) Calibration - To record the resistance value when tank empty known as zero calibration and Record the resistance at tank full span calibration).3) Level indication - As per calibrated value with the current resistance show the tank water percentage.4) Remote control - To Calibrate and change the set point.Ok, this are our requirement then chose which libraries we want to use1) EEPROM - To save the set points and calibration value and retrieve it after power on and off.2) IRremote - To get data from Tv remote and set.3) Softwareserial - If normal LCD is used this one is not needed, i use serial LCD so a software serial TX is created and used for display data.Lot of way to program i used my way. If u want keep the requirement and do programming in your style or copy the attached program and execute.TestingAfter programming upload the data to the Arduino and connect the 12V power supply also, if not connected relay not working. Just change the potentiometer value and see the value show in the display. Lower the value below the min set point and conform the relay switched on. Likewise increase the value more than the max set point and conform the relay switch off. I set low set point at 20% and high set point at 80%. Then use the remote and check the calibration and then change the set point and check again.Now the programming is over. Want to prepare mechanical arrangement.", "step_imgs": ["https://cdn.instructables.com/FBU/9HKO/I8PQTEVO/FBU9HKOI8PQTEVO.LARGE.jpg", "https://cdn.instructables.com/F8Z/M2QY/I8OH3R8X/F8ZM2QYI8OH3R8X.LARGE.jpg", "/assets/img/pixel.png"], "step_title": "Step 5: Program and Testing"}, {"step": 6, "steps_text": "Take a PVC pipe and drill one side to the size of the potentiometer shaft. Cut the other side of the PVC pipe to insert the potentiometer. Insert the potentiometer and screw from front side. Fully tight the screw using spanner so that it cant move. Paste the knob in the potentiometer shaft. Now take two weights one is immerse in water and another one is float in water but weight greater than the first one, for that wrap the weight with thermocol. Test how it float. if ok then. Tie both the weight in a long thread or string and paste the middle in the knob, so that the thread can't rotate freely. then leave the float able weight as it is and rotate the thread on the other weight in clock wise and make the weight hang near the knob. see the arrangement and fix it in the top of the tank. Now i am only checking. so i use bucket for testing.", "step_imgs": ["https://cdn.instructables.com/F17/KLRP/I8OH3RE4/F17KLRPI8OH3RE4.LARGE.jpg", "https://cdn.instructables.com/FYH/3U94/I8OH3REL/FYH3U94I8OH3REL.LARGE.jpg", "https://cdn.instructables.com/F5A/ML8H/I8OH3REM/F5AML8HI8OH3REM.LARGE.jpg", "https://cdn.instructables.com/FQI/K3B0/I8OH3RES/FQIK3B0I8OH3RES.LARGE.jpg", "https://cdn.instructables.com/FFI/AZZN/I8OH3RF9/FFIAZZNI8OH3RF9.LARGE.jpg", "https://cdn.instructables.com/FMD/OK0T/I8PQUAKJ/FMDOK0TI8PQUAKJ.LARGE.jpg", "https://cdn.instructables.com/FUD/T7DB/I8PQUALF/FUDT7DBI8PQUALF.LARGE.jpg", "https://cdn.instructables.com/FG1/PDNL/I8PQUALD/FG1PDNLI8PQUALD.LARGE.jpg", "https://cdn.instructables.com/FM8/XN60/I8PQUAJV/FM8XN60I8PQUAJV.LARGE.jpg"], "step_title": "Step 6: Fix the Potentiometer"}, {"step": 7, "steps_text": "I am going to fix the level indicator in side the starter box which is fixed on the wall with glass enclosure. So a low weight box is enough for me. If you want to put it in open then u want a weather proof box. I use a plastic sweet box to assemble the indicator. Fix the LCD and IR receiver in the front cover and remaining circuit on the back cover. Close the box and now the indicator is ready to use.", "step_imgs": ["https://cdn.instructables.com/FSD/9Q00/I8OH3RFC/FSD9Q00I8OH3RFC.LARGE.jpg", "https://cdn.instructables.com/FH2/HKI4/I8OH3RFW/FH2HKI4I8OH3RFW.LARGE.jpg"], "step_title": "Step 7: Fix in a Enclosure"}, {"step": 8, "steps_text": "Steps1) Press the enter button in the remote -> Display show zero cal with analog reading.2) Move the floating weight to the bottom of the tank.3) Display shows the analog value of the position4) Press enter zero calibration completed and Display shows full calibration(Span Calibration).5) Move the floating side to the top of the tank.6) Now Display shows its analog value.7) Press enter again now the system is calibrated for its range and shows the reading.", "step_imgs": ["https://cdn.instructables.com/FPL/UR3E/I8PQW1LB/FPLUR3EI8PQW1LB.LARGE.jpg", "https://cdn.instructables.com/FI0/E23Q/I8PQW1LL/FI0E23QI8PQW1LL.LARGE.jpg", "https://cdn.instructables.com/FU6/6PC1/I8PQW1LM/FU66PC1I8PQW1LM.LARGE.jpg", "https://cdn.instructables.com/FPW/11JJ/I8PQW1LN/FPW11JJI8PQW1LN.LARGE.jpg", "https://cdn.instructables.com/FKF/6FEF/I8PQW1M7/FKF6FEFI8PQW1M7.LARGE.jpg", "https://cdn.instructables.com/FN6/3F5S/I8PQW1M8/FN63F5SI8PQW1M8.LARGE.jpg", "https://cdn.instructables.com/FGB/W2PG/I8PQW1MA/FGBW2PGI8PQW1MA.LARGE.jpg"], "step_title": "Step 8: After Finishing Calibration"}, {"step": 9, "steps_text": "Steps1) Press the setup button in the remote.2) Center of the second line shows MI means (change the minimum value)3) Use volume control to change the value.4) Again press setup button.5) Minimum value saved and center screen shows MA(change the maximum value)6) Use volume control to change the value.7) Minimum value saved and display shows the changed value", "step_imgs": ["https://cdn.instructables.com/FBH/F392/I8PQW1MB/FBHF392I8PQW1MB.LARGE.jpg", "https://cdn.instructables.com/FML/Z09S/I8PQW1ME/FMLZ09SI8PQW1ME.LARGE.jpg", "https://cdn.instructables.com/FAG/A340/I8PQW1MG/FAGA340I8PQW1MG.LARGE.jpg", "https://cdn.instructables.com/FM7/DIUO/I8PQW1MH/FM7DIUOI8PQW1MH.LARGE.jpg", "https://cdn.instructables.com/F0K/AO37/I8PQW1MI/F0KAO37I8PQW1MI.LARGE.jpg", "https://cdn.instructables.com/FSF/A4J0/I8PQW1MF/FSFA4J0I8PQW1MF.LARGE.jpg", "https://cdn.instructables.com/FYH/GZ4D/I8PQW1MJ/FYHGZ4DI8PQW1MJ.LARGE.jpg", "https://cdn.instructables.com/FLI/H9MV/I8PQW1KV/FLIH9MVI8PQW1KV.LARGE.jpg"], "step_title": "Step 9: Change Set Points"}, {"step": 10, "steps_text": "See when the liquid level is low rely on and this switch off the pump. When the liquid raise it display in the lcd. and when it reach the upper limit relay switch off.Want to fix the potentiometer inside a weather proof enclosure then only able to fix it in the over head tank. After fixing i upload another video. Up to that try this for any liquid, Any tank size and Tell me how it works.If any doubt please comment me. I am waiting for queries.", "step_imgs": [], "step_title": "Step 10: Check the Function"}], "channel": "Microcontrollers"}, {"category": "technology", "description": "In this tutorial we will go over how you can use a PIC16F886 microcontroller to detect differances in capacitance, this can later be used to tell if a touch pad is being pressed. It's good to be familiar with pic microcontrollers prior to making this project.", "title": "Capacitive Touch With PIC16F886 Microcontroller", "url": "https://www.instructables.com/id/Capacitive-Touch-With-PIC16F886-Microcontroller/", "section": "technology", "steps": [{"step": 1, "steps_text": "First, let's start by wiring up the circuit according to the schematic above. To make the touch pad you can fold aluminium foil into a square and tape on a wire. You can experiment around with different values for the 100k resistor, I found 100k worked well for me.The RC4 pin is used to start charging/discharging the capacitance to be measured. C12IN0 is connected to the - side of an internal comparator and the C1IN pin is connected to the + side of the same comparator. The microcontroller sees the capacitance as fully charged when the C12IN0 voltage reaches above the C1IN voltage. The resistive voltage divider makes sure C1IN is close to 5 volts.Since the touch pad depends of there being a significant capacitance between you and the circuit ground there is a possibility that a battery might not work.", "step_imgs": ["https://cdn.instructables.com/FY1/JQRG/JEST0OIM/FY1JQRGJEST0OIM.LARGE.jpg"], "step_title": "Step 1: Wire Up Your Circuit"}, {"step": 2, "steps_text": "Finished with all the connections? Good, we will proceed with the header file. We will be using the XC8 compiler and as the title suggests you shall now create a new header file in your project and copy-paste the following code. You can just as well copy-paste it above your main code without any header file.#define CALIBRATION_SAMPLE 20#define TOUCH_SAMPLE 10\n#define DISCHARGE_TIME 5int count;\nint calibrationValue, maxCalibrationValue, minCalibrationValue;int getChargeTime(){\n    int timerCount = 0;\n    int overflowCount = 0;\n    //discharge capacitance to be measured\n    RC4 = 0;\n    __delay_ms(DISCHARGE_TIME);  //give enough delay to fully (almost fully actually) discharge the \"capacitor\"\n    //clear the timer overflow flag\n    T0IF = 0;\n    //wait for timer to overflow, start count from 0\n    while(!T0IF);\n    T0IF = 0;\n    //start charging capacitance to be measured\n    RC4 = 1;\n    //wait for capacitance to charge up to the referance voltage\n    while(C1OUT){\n        timerCount = TMR0;\n        if(T0IF){\n            overflowCount++;\n            T0IF = 0;\n        }\n    }\n    count = (256 * overflowCount) + timerCount;\n    //reset timerCount\n    timerCount = 0;\n    overflowCount = 0;\n    \n    return count;\n}int isTouching(int tolerance){\n    //average of multiple samples\n    double average = 0;\n    for(int i = 0; i < TOUCH_SAMPLE; i++){\n        if(getChargeTime() > calibrationValue + tolerance)\n            average++;\n    }\n    average /= TOUCH_SAMPLE;\n    \n    //average will be a number between 0 and 1\n    if(average > 0.2)\n        return 1;\n    \n    return 0;\n}void calibrate(){\n    int average = 0;\n    int samples[CALIBRATION_SAMPLE];\n    \n    //get average value\n    for(int i = 0; i < CALIBRATION_SAMPLE; i++){\n        samples[i] = getChargeTime();\n        average += samples[i];\n    }\n    average /= CALIBRATION_SAMPLE;\n    calibrationValue = average;\n    \n    //get max/min values\n    maxCalibrationValue = samples[0];\n    minCalibrationValue = samples[0];\n    for(int i = 0; i < CALIBRATION_SAMPLE; i++){\n        if(samples[i] > maxCalibrationValue)\n            maxCalibrationValue = samples[i];\n        if(samples[i] < minCalibrationValue)\n            minCalibrationValue = samples[i];\n    }\n}void setupCapacitiveTouch(){\n    //setting charge/discharge pin as output, in this case it's RC4\n    TRISCbits.TRISC4 = 0;\n    \n    //setting up timer0\n    T0CS = 0;\n    PSA = 1;\n    \n    //setting up comparator\n    C1CH0 = 0;\n    C1CH1 = 0;\n    \n    C1R = 0;\n    \n    C1ON = 1;\n    C1POL = 0;\n    \n    //clearing count values\n    count = 0;\n    \n    //clearing calibration values\n    calibrationValue = 0;\n    maxCalibrationValue = 0;\n    minCalibrationValue = 0;\n    \n    //run calibration on start\n    calibrate();\n}", "step_imgs": ["https://cdn.instructables.com/FES/GZ7J/JE95EUK5/FESGZ7JJE95EUK5.LARGE.jpg"], "step_title": "Step 2: The Header File"}, {"step": 3, "steps_text": "Starting with the main code, you'll need to include the header file created in the previous step. The following code is an example of how you can use the isTouching function as a switch. In my case i gave the header the name capacitiveTouch.h.#include <xc.h>\n#include \"capacitiveTouch.h\"// this variable tells if the button is or is not already pressed\nint lastState = 0;void main(){\n    //setting RC5 as output\n    TRISCbits.TRISC5 = 0;\n    \n    //you need to call this function up on start of the program\n    setupCapacitiveTouch();\n    \n    __delay_ms(1000);\n    \n    //calibrate after your exact setup\n    calibrate();\n    \n    while(1){\n        //checking if the button is getting pressed\n        if(isTouching(15) && lastState == 0){\n            if(RC5)\n                RC5 = 0;\n            else\n                RC5 = 1;\n            lastState = 1;\n        }\n        //checking if button is getting released\n        else if(lastState == 1 && !isTouching(15))\n            lastState = 0;\n        \n        __delay_ms(20);\n    }\n}calibrate:When this function gets called the variables calibrationValue, maxCalibrationValue and minCalibrationValue will be updated. calibrationValue is used by the isTouching function. Keep in mind that the touch pad should be left alone during calibration.setupCapacitiveTouch:Needs to be called in the beginning of your program. It sets up the necessary bits used by the other functions. It also runs a callibration. However I got better results by waiting a second and run the calibration again separately.isTouching:This function returns 1 if it detects an increase in capacitance on the C12IN0 and returns 0 if the capacitance is close to the one it was during calibration. Simply stated, if someone touches the pad the isTouching function will return 1. The function also wants a parameter as an input, this is the tolerance for it to trigger. The higher the tolerance value the less sensitive it gets. In my setup I found 15 worked well, but because this depends on ocsillator frequency and how much capacitance is added when you press it you should experiment around with this value until you find something that works for you.getChargeTime:When you want to know how long time it would take to charge up the capacitance to the CVREF voltage, this function will test it and return an integer. To get the time in seconds you use this formula:(4 * getChargeTime) / oscillatorFrequency = chargeTimeInSecondsThis formula can also be used to get the tolerance input from the isTouching function to seconds.", "step_imgs": [], "step_title": "Step 3: Writing the Main Code"}], "channel": "Microcontrollers"}, {"category": "technology", "description": "I did this project because I often climb mountains like the one in the picture and I need to know the altitude, the temperature, and also changes in the weather, sometimes in just minutes the weather get very bad, with hail, snow and a very dense mist. All you need are a DHT11 Sensor, a BMP085 barometric Sensor, a Serial enabled LCD and of course an arduino.", "title": "Arduino Portable Weather Monitor, Altimeter, Temperature, Humidity, Using DHT11 and BMP85 With LCD Using Only 3 Pins", "url": "https://www.instructables.com/id/Arduino-Portable-Weather-Monitor-DHT11-and-BMP85-w/", "section": "technology", "steps": [{"step": 1, "steps_text": "Materials: 1 Arduino 1 DHT11 Sensor (Temperature and Humidity Sensor) 1 BMP085 Sensor (Barometric Sensor) // Note: I have a GY-65 Modue it can handle 5v 1 Serial enabled LCD 1 10k resistor", "step_imgs": ["https://cdn.instructables.com/F6L/5GIG/HOW0I8GH/F6L5GIGHOW0I8GH.LARGE.jpg"], "step_title": "Step 1: Step 1: Get the Parts"}, {"step": 2, "steps_text": "1 Attach the BMP085 to Arduino Arduino 5v Pin to VCC Pin on BMP085(Important!! some Modules only support 3.3 v!! use the 3.3v Pin instead!) Arduino GND Pin to GND Pin on BMP085 Arduino A5 Pin to SCL Pin on BMP085 (Analog 5 Pin to Clock Pin) Arduino A4 Pin to SDA Pin on BMP085(Analog 4 Pin to Data Pin) 2 Attach the DHT11 Sensor to Arduino Arduino 5V Pin to VCC Pin on DHT11 Arduino GND Pin to GDN Pin on DHT11 Arduino Digital Pin 2 to Data Pin on DHT11 and 10k resistor to GND on Arduino 3 Attach the serial enabled LCD to Arduino Arduino 5v Pin to VCC Pin on Serial enabled LCD Arduino GND Pin to GND Pin on Serial enabled LCDNow the tricky part we will use the same ports as the BMP085 Arduino A5 Pin to the same line of the breadboard on the SCL Pin on BMP085 Arduino A4 Pin to the same line of the breadboard on the SDA Pin on BMP085", "step_imgs": ["https://cdn.instructables.com/FWK/Z3CG/HOW0I8G8/FWKZ3CGHOW0I8G8.LARGE.jpg", "https://cdn.instructables.com/FR2/8CE3/HOW0I8GA/FR28CE3HOW0I8GA.LARGE.jpg"], "step_title": "Step 2: Build the Circuit"}, {"step": 3, "steps_text": "\n\n/*Based largely on code by  Jim Lindblom\n\n Get pressure, altitude, and temperature from the BMP085.\n Serial.print it out at 9600 baud to serial monitor.\n */\n#include <dht11.h>\n#include <Wire.h>\n#include <LiquidCrystal_I2C.h>\n\nLiquidCrystal_I2C lcd(0x27,16,2);\ndht11 DHT11;\n#define DHT11PIN 2\n\n#define BMP085_ADDRESS 0x77  // I2C address of BMP085\n\nconst unsigned char OSS = 0;  // Oversampling Setting\n\n// Calibration values\nint ac1;\nint ac2;\nint ac3;\nunsigned int ac4;\nunsigned int ac5;\nunsigned int ac6;\nint b1;\nint b2;\nint mb;\nint mc;\nint md;\n\n// b5 is calculated in bmp085GetTemperature(...), this variable is also used in bmp085GetPressure(...)\n// so ...Temperature(...) must be called before ...Pressure(...).\nlong b5; \n\nvoid setup(){\n  Serial.begin(9600);\n  Wire.begin();\n  \n  lcd.init();                      // initialize the lcd \n  lcd.backlight();\n\n  bmp085Calibration();\n}\n\nvoid loop()\n{\n  float temperature = bmp085GetTemperature(bmp085ReadUT()); //MUST be called first\n  float pressure = bmp085GetPressure(bmp085ReadUP());\n  float atm = pressure / 101325; // \"standard atmosphere\"\n  float altitude = calcAltitude(pressure); //Uncompensated caculation - in Meters \n  \n  Serial.println(\"\\n\");\n\n  int chk = DHT11.read(DHT11PIN);\n\n  Serial.print(\"Read sensor: \");\n  switch (chk)\n  {\n    case 0: Serial.println(\"OK\"); break;\n    case -1: Serial.println(\"Checksum error\"); break;\n    case -2: Serial.println(\"Time out error\"); break;\n    default: Serial.println(\"Unknown error\"); break;\n  }\n\n  Serial.print(\"Humidity (%): \");\n  Serial.println((float)DHT11.humidity, 2);\n\n  Serial.print(\"Temperature (oC): \");\n  Serial.println((float)DHT11.temperature, 2);\n  \n    lcd.print(\"Hum(%): \");\n  lcd.print((float)DHT11.humidity, 2);\n    lcd.setCursor(0,1);\n  lcd.print(\"Temp(C): \");\n  lcd.print((float)DHT11.temperature, 2);\n  delay(2000);\n  lcd.clear();\n\n  Serial.print(\"Temperature (oF): \");\n  Serial.println(Fahrenheit(DHT11.temperature), 2);\n\n  Serial.print(\"Temperature (K): \");\n  Serial.println(Kelvin(DHT11.temperature), 2);\n  \n    lcd.print(\"Temp(F): \");\n  lcd.print(Fahrenheit(DHT11.temperature), 2);\n    lcd.setCursor(0,1);\n  lcd.print(\"Temp(K): \");\n  lcd.print(Kelvin(DHT11.temperature), 2);\n  delay(3000);\n  lcd.clear();\n\n  Serial.print(\"Dew Point (oC): \");\n  Serial.println(dewPoint(DHT11.temperature, DHT11.humidity));\n\n  Serial.print(\"Dew PointFast (oC): \");\n  Serial.println(dewPointFast(DHT11.temperature, DHT11.humidity));\n  \n  lcd.print(\"DewP(C): \");\n  lcd.print(dewPoint(DHT11.temperature, DHT11.humidity));\n  lcd.setCursor(0,1);\n  lcd.print(\"DewPF(C): \");\n  lcd.print(dewPointFast(DHT11.temperature, DHT11.humidity));\n  delay(3000);\n  lcd.clear();\n  \n  \n  \n  Serial.print(\"Temperature2: \");\n  Serial.print(temperature, 2); //display 2 decimal places\n  Serial.println(\"deg C\");\n\n  Serial.print(\"Pressure: \");\n  Serial.print(pressure, 0); //whole number only.\n  Serial.println(\" Pa\");\n  \n  lcd.print(\"Temp2: \");\n  lcd.print(temperature, 2); //display 2 decimal places\n  lcd.print(\" C\");\n  lcd.setCursor(0,1);\n  lcd.print(\"Pres: \");\n  lcd.print(pressure, 0);\n  lcd.print(\" PA\");\n  delay(3000);\n  lcd.clear();\n  \n\n  Serial.print(\"Standard Atmosphere: \");\n  Serial.println(atm, 4); //display 4 decimal places\n\n  Serial.print(\"Altitude: \");\n  Serial.print(altitude, 2); //display 2 decimal places\n  Serial.println(\" M\");\n  \n  lcd.print(\"Std Atm: \");\n  lcd.print(atm, 4); //display 2 decimal places\n  lcd.setCursor(0,1);\n  lcd.print(\"Alt: \");\n  lcd.print(altitude, 2);\n  lcd.print(\" M\");\n  delay(3000);\n \n  lcd.clear();\n\n  Serial.println();//line break\n\n  delay(100); //wait a second and get values again.\n}\n\n/*-----( Declare User-written Functions )-----*/\n//\n//Celsius to Fahrenheit conversion\ndouble Fahrenheit(double celsius)\n{\n        return 1.8 * celsius + 32;\n}\n\n//Celsius to Kelvin conversion\ndouble Kelvin(double celsius)\n{\n        return celsius + 273.15;\n}\n\n// dewPoint function NOAA\n// reference: http://wahiduddin.net/calc/density_algorithms.htm \ndouble dewPoint(double celsius, double humidity)\n{\n        double A0= 373.15/(273.15 + celsius);\n        double SUM = -7.90298 * (A0-1);\n        SUM += 5.02808 * log10(A0);\n        SUM += -1.3816e-7 * (pow(10, (11.344*(1-1/A0)))-1) ;\n        SUM += 8.1328e-3 * (pow(10,(-3.49149*(A0-1)))-1) ;\n        SUM += log10(1013.246);\n        double VP = pow(10, SUM-3) * humidity;\n        double T = log(VP/0.61078);   // temp var\n        return (241.88 * T) / (17.558-T);\n}\n\n// delta max = 0.6544 wrt dewPoint()\n// 5x faster than dewPoint()\n// reference: http://en.wikipedia.org/wiki/Dew_point\ndouble dewPointFast(double celsius, double humidity)\n{\n        double a = 17.271;\n        double b = 237.7;\n        double temp = (a * celsius) / (b + celsius) + log(humidity/100);\n        double Td = (b * temp) / (a - temp);\n        return Td;\n        \n}        \n// Stores all of the bmp085's calibration values into global variables\n// Calibration values are required to calculate temp and pressure\n// This function should be called at the beginning of the program\nvoid bmp085Calibration()\n{\n  ac1 = bmp085ReadInt(0xAA);\n  ac2 = bmp085ReadInt(0xAC);\n  ac3 = bmp085ReadInt(0xAE);\n  ac4 = bmp085ReadInt(0xB0);\n  ac5 = bmp085ReadInt(0xB2);\n  ac6 = bmp085ReadInt(0xB4);\n  b1 = bmp085ReadInt(0xB6);\n  b2 = bmp085ReadInt(0xB8);\n  mb = bmp085ReadInt(0xBA);\n  mc = bmp085ReadInt(0xBC);\n  md = bmp085ReadInt(0xBE);\n}\n\n// Calculate temperature in deg C\nfloat bmp085GetTemperature(unsigned int ut){\n  long x1, x2;\n\n  x1 = (((long)ut - (long)ac6)*(long)ac5) >> 15;\n  x2 = ((long)mc << 11)/(x1 + md);\n  b5 = x1 + x2;\n\n  float temp = ((b5 + 8)>>4);\n  temp = temp /10;\n\n  return temp;\n}\n\n// Calculate pressure given up\n// calibration values must be known\n// b5 is also required so bmp085GetTemperature(...) must be called first.\n// Value returned will be pressure in units of Pa.\nlong bmp085GetPressure(unsigned long up){\n  long x1, x2, x3, b3, b6, p;\n  unsigned long b4, b7;\n\n  b6 = b5 - 4000;\n  // Calculate B3\n  x1 = (b2 * (b6 * b6)>>12)>>11;\n  x2 = (ac2 * b6)>>11;\n  x3 = x1 + x2;\n  b3 = (((((long)ac1)*4 + x3)<>2;\n\n  // Calculate B4\n  x1 = (ac3 * b6)>>13;\n  x2 = (b1 * ((b6 * b6)>>12))>>16;\n  x3 = ((x1 + x2) + 2)>>2;\n  b4 = (ac4 * (unsigned long)(x3 + 32768))>>15;\n\n  b7 = ((unsigned long)(up - b3) * (50000>>OSS));\n  if (b7 < 0x80000000)\n    p = (b7<<1)/b4;\n  else\n    p = (b7/b4)<<1;\n\n  x1 = (p>>8) * (p>>8);\n  x1 = (x1 * 3038)>>16;\n  x2 = (-7357 * p)>>16;\n  p += (x1 + x2 + 3791)>>4;\n\n  long temp = p;\n  return temp;\n}\n\n// Read 1 byte from the BMP085 at 'address'\nchar bmp085Read(unsigned char address)\n{\n  unsigned char data;\n\n  Wire.beginTransmission(BMP085_ADDRESS);\n  Wire.write(address);\n  Wire.endTransmission();\n\n  Wire.requestFrom(BMP085_ADDRESS, 1);\n  while(!Wire.available())\n    ;\n\n  return Wire.read();\n}\n\n// Read 2 bytes from the BMP085\n// First byte will be from 'address'\n// Second byte will be from 'address'+1\nint bmp085ReadInt(unsigned char address)\n{\n  unsigned char msb, lsb;\n\n  Wire.beginTransmission(BMP085_ADDRESS);\n  Wire.write(address);\n  Wire.endTransmission();\n\n  Wire.requestFrom(BMP085_ADDRESS, 2);\n  while(Wire.available()<2)\n    ;\n  msb = Wire.read();\n  lsb = Wire.read();\n\n  return (int) msb<<8 | lsb;\n}\n\n// Read the uncompensated temperature value\nunsigned int bmp085ReadUT(){\n  unsigned int ut;\n\n  // Write 0x2E into Register 0xF4\n  // This requests a temperature reading\n  Wire.beginTransmission(BMP085_ADDRESS);\n  Wire.write(0xF4);\n  Wire.write(0x2E);\n  Wire.endTransmission();\n\n  // Wait at least 4.5ms\n  delay(5);\n\n  // Read two bytes from registers 0xF6 and 0xF7\n  ut = bmp085ReadInt(0xF6);\n  return ut;\n}\n\n// Read the uncompensated pressure value\nunsigned long bmp085ReadUP(){\n\n  unsigned char msb, lsb, xlsb;\n  unsigned long up = 0;\n\n  // Write 0x34+(OSS<<6) into register 0xF4\n  // Request a pressure reading w/ oversampling setting\n  Wire.beginTransmission(BMP085_ADDRESS);\n  Wire.write(0xF4);\n  Wire.write(0x34 + (OSS<<6));\n  Wire.endTransmission();\n\n  // Wait for conversion, delay time dependent on OSS\n  delay(2 + (3<> (8-OSS);\n\n  return up;\n}\n\nvoid writeRegister(int deviceAddress, byte address, byte val) {\n  Wire.beginTransmission(deviceAddress); // start transmission to device \n  Wire.write(address);       // send register address\n  Wire.write(val);         // send value to write\n  Wire.endTransmission();     // end transmission\n}\n\nint readRegister(int deviceAddress, byte address){\n\n  int v;\n  Wire.beginTransmission(deviceAddress);\n  Wire.write(address); // register to read\n  Wire.endTransmission();\n\n  Wire.requestFrom(deviceAddress, 1); // read a byte\n\n  while(!Wire.available()) {\n    // waiting\n  }\n\n  v = Wire.read();\n  return v;\n}\n\nfloat calcAltitude(float pressure){\n\n  float A = pressure/101325;\n  float B = 1/5.25588;\n  float C = pow(A,B);\n  C = 1 - C;\n  C = C /0.0000225577;\n\n  return C;\n}", "step_imgs": [], "step_title": "Step 3: Upload the Code to the Arduino"}, {"step": 4, "steps_text": "\n          Once you Upload the code you can watch in the screen: 1 Humidity % 2 Temperature Celsius (From the DHT11) 3 Temperature Farenheit 4 Temperature Kelvin 5 Dew Point 6 Dew Point Fast 7 Temperature 2 Celsius (From the BMP085) 8 Pressure in Pascals 9 Standard Atmosphere 10 Altitude in Meters You can also see the same info if you use the Serial Monitor of your arduino IDE", "step_imgs": ["/assets/img/pixel.png"], "step_title": "Step 4: Test the Code"}, {"step": 5, "steps_text": "You can use a 9v battery or 5 AA NiH rechargeable batteries, solder a compatible plug for your arduino and then just find a case to protect your weather monitor, you can use a transparent tupperware case, or you can build yourself a plexiglass case,and you are ready to climb any mountain you want.", "step_imgs": ["https://cdn.instructables.com/FYV/3RCJ/HOW0IA60/FYV3RCJHOW0IA60.LARGE.jpg", "https://cdn.instructables.com/FGA/F0NX/HOW0IA62/FGAF0NXHOW0IA62.LARGE.jpg", "https://cdn.instructables.com/F6B/BVQ1/HOW0IA65/F6BBVQ1HOW0IA65.LARGE.jpg"], "step_title": "Step 5: Make It Portable"}], "channel": "Arduino"}, {"category": "technology", "description": "Sometimes we throw away a lot of garbage that can be used to create something useful. A piggy bank made out of glass can be hard to maintain and use. A piggy ban made out of an empty milk jug is easy to make, easily decorated, and everything you need to create is probably in your house right now. If you throw away or recycle your empty milk jugs, you can use them to store your savings or loose change to exchange later. Some people don't like keeping excessive amounts of change in their wallets. We are going to use volume to find around how many pennies can be stored in one empty milk jug.", "title": "Earth Day Piggy Bank + Geometry", "url": "https://www.instructables.com/id/Earth-Day-Piggy-Bank-Geometry/", "section": "technology", "steps": [{"step": 1, "steps_text": "Through research we found out that the volume of one penny is about .36 cubic cm. This is rounded to the nearest hundredth. The formula for volume is (surface area of 1 face) x (height), so in the case of the penny with a circular face, we can say the formula of the penny is (pi) x (radius^2) x (height). Volume= 3.14 x 9.5 x 9.5 x 1.27 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 = 360 cubic mm or .360 cubic cm", "step_imgs": ["https://cdn.instructables.com/FEI/9PZQ/HHI55VMI/FEI9PZQHHI55VMI.LARGE.jpg", "https://cdn.instructables.com/F61/TQNR/HHI55VMJ/F61TQNRHHI55VMJ.LARGE.jpg"], "step_title": "Step 1: Finding the Volume of a Penny"}, {"step": 2, "steps_text": "Again, the volume of a single penny is .36 cubic cm. We are going to convert this number into liters because it is more proportional to gallons. There are 1000 cubic cm in one liter, so our conversion would become .00036 L. Therefore, if one penny is .00036 L, and 1 L is divided by .00036 L per penny, then one liter should hold 2777.7 pennies.\u00a0", "step_imgs": ["https://cdn.instructables.com/FYF/ZBO6/HHI55VN2/FYFZBO6HHI55VN2.LARGE.jpg"], "step_title": "Step 2: Converting Measurements to Liters"}, {"step": 3, "steps_text": "Through a unit converter, we found out that there are 4.405 L per dry gallon. We are using dry measurements because the pennies are solid but the jug uses liquid measurements (gallon). 2777.7 pennies per liter x 4.405 liters per dry gallon = 12236 pennies This amount of pennies is assuming that the jug is packed to the brim and it is totally filled with pennies. But pennies have an irrregular shape and they aren't liquid, so there will be about 25% (roughly) air space between the pennies.\u00a0 12236 pennies x 25% = 9176 pennies", "step_imgs": [], "step_title": "Step 3: Converting Measurements to Gallons"}, {"step": 4, "steps_text": "If you plan to go along with\u00a0our milk jug piggy bank idea, you could keep saving up coins for donating or personal use. Keeping them in a closet or a cabinet could be more convenient than having them out in the open. This could also be a fun project to do with your children or a child you know. Decorating them will make it more valuable and you and your friend could watch as the coins add up over time. Cut a slit in the cap to make your bank, and you're pretty much done. Open the cap to retrieve your money more efficiently when the jug is full. You can customize and decorate the jugs to your liking, too.", "step_imgs": ["https://cdn.instructables.com/FGX/YJ5X/HHI55VIX/FGXYJ5XHHI55VIX.LARGE.jpg", "https://cdn.instructables.com/F3I/HU9S/HHI55VIU/F3IHU9SHHI55VIU.LARGE.jpg", "https://cdn.instructables.com/FTC/G1Q6/HHI55VIV/FTCG1Q6HHI55VIV.LARGE.jpg", "https://cdn.instructables.com/FD4/U32V/HHI55VIR/FD4U32VHHI55VIR.LARGE.jpg"], "step_title": "Step 4: Additional Ideas"}, {"step": 5, "steps_text": "People don't usually think twice about the milk jugs that they throw away. Those milk jugs end up in landfills and build up over time which isn't good for the environment because plastic can take centuries to decompose into the ground. This is a disadvantage due to the fact that the soil on the ground would benefit greatly from added nutrients making richer soil for plants to grow some day. Saving the bottles can help a ton and will make a difference if everyone works together to save the Earth's health and beauty.", "step_imgs": ["https://cdn.instructables.com/FEA/HGHV/HHI55VO7/FEAHGHVHHI55VO7.LARGE.jpg", "https://cdn.instructables.com/FM2/5ZS8/HHI55VO9/FM25ZS8HHI55VO9.LARGE.jpg", "https://cdn.instructables.com/F52/IUOI/HHI55VOA/F52IUOIHHI55VOA.LARGE.jpg"], "step_title": "Step 5: Our Philosophy"}, {"step": 6, "steps_text": "The formula for volume is (surface area of 1 face) x (height), so in the case of the nickel with a circular face, we can say the formula of the nickel is (pi) x (radius^2) x (height). 3.14 x 1.05^2 cm x .17 cm =.59 cm^3 or converted into an appropriate unit, .59 mL. Using a unit converter, we found out that .59 mL =\u00a00.00059 L Therefore, if one nickel is 0.00059 L, and 1 L is divided by 0.00059 \u00a0L per nickel, then one liter should hold about 1694 nickels. Through a unit converter, we found out that there are 4.405 L per dry gallon. We are using dry measurements because the nickels are solid but the jug uses liquid measurements (gallon). 1694 nickels per liter x 4.405 liters per dry gallon =7466 nickels This amount of nickels is assuming that the jug is packed to the brim and it is totally filled with nickels. But nickels have an irrregular shape and they aren't liquid, so there will be about 25% (roughly) air space between the nickels. 7466 nickels x .25% air=\u00a01866 nickels", "step_imgs": [], "step_title": "Step 6: Repeating the Steps With a Nickel"}, {"step": 7, "steps_text": "The formula for volume is (surface area of 1 face) x (height), so in the case of the nickel with a circular face, we can say the formula of the nickel is (pi) x (radius^2) x (height). 3.14 x\u00a00.895 cm^2 x 0.135 cm\u00a0 =0.34 cm^3", "step_imgs": [], "step_title": "Step 7: Repeating the Steps With a Dime"}], "channel": "Reuse"}, {"category": "technology", "description": "In this lab you will be utilizing an LCD screen to display the current humidity and temperature readings for the surrounding area.Hardware you will need: Arduino UnoLCD ScreenPotentiometerTemperature/Humidity sensor BreadboardWires/ConnectorsLibraries Needed:LiquidCrystalSimpleDHTThe test code provided was taken from the Elegoo code samples.  You can either install the necessary libraries through the library manager or download and install the the .zip files located in Libraries.zip on D2L.", "title": "Sensors Lab - Temp", "url": "https://www.instructables.com/id/Sensors-Lab-Temp-Sound/", "section": "technology", "steps": [{"step": 1, "steps_text": "The LCD screen will need to be inserted directly into the breadboard.  The LCD's screen pins are connected to the Arduino in the following order:GroundPowerPin 12Pin 11Pin 10Pin 9EmptyEmptyEmptyEmptyPin 8GroundPin 7Potentiometer (Connect to power and ground)PowerGround", "step_imgs": ["https://cdn.instructables.com/FSO/6JLO/J7JMSUQH/FSO6JLOJ7JMSUQH.LARGE.jpg"], "step_title": "Step 1: Connect LCD Screen"}, {"step": 2, "steps_text": "#include < LiquidCrystal.h > //Remove spacing between <  >\n\n// initialize the library with the numbers of the interface pins\nLiquidCrystal lcd(7, 8, 9, 10, 11, 12);\n\nvoid setup() {\n  // set up the LCD's number of columns and rows:\n  lcd.begin(16, 2);\n  // Print a message to the LCD.\n  lcd.print(\"Hello, World!\");\n}\n\nvoid loop() {\n  // set the cursor to column 0, line 1\n  // (note: line 1 is the second row, since counting begins with 0):\n  lcd.setCursor(0, 1);\n  // print the number of seconds since reset:\n  lcd.print(millis() / 1000);\n}\n\n\n", "step_imgs": [], "step_title": "Step 2: LCD Screen - Test Code"}, {"step": 3, "steps_text": "Insert the temperature & humidity sensor into the breadboard.  You will need to connect it to the Arduino using the following leads:Pin 2Power (+5v) railGround rail", "step_imgs": ["https://cdn.instructables.com/FR5/1CCI/JD2FD3UH/FR51CCIJD2FD3UH.LARGE.jpg"], "step_title": "Step 3: Add Temperature & Humidity Sensor"}, {"step": 4, "steps_text": "//www.elegoo.com\n//2016.12.9\n\n#include <SimpleDHT.h>\n\n// for DHT11, \n//      VCC: 5V or 3V\n//      GND: GND\n//      DATA: 2\nint pinDHT11 = 2;\nSimpleDHT11 dht11;\n\nvoid setup() {\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  // start working...\n  Serial.println(\"=================================\");\n  Serial.println(\"Sample DHT11...\");\n  \n  // read with raw sample data.\n  byte temperature = 0;\n  byte humidity = 0;\n  byte data[40] = {0};\n  if (dht11.read(pinDHT11, &temperature, &humidity, data)) {\n    Serial.print(\"Read DHT11 failed\");\n    return;\n  }\n  \n  Serial.print(\"Sample RAW Bits: \");\n  for (int i = 0; i < 40; i++) {\n    Serial.print((int)data[i]);\n    if (i > 0 && ((i + 1) % 4) == 0) {\n      Serial.print(' ');\n    }\n  }\n  Serial.println(\"\");\n  \n  Serial.print(\"Sample OK: \");\n  Serial.print((int)temperature); Serial.print(\" *C, \");\n  Serial.print((int)humidity); Serial.println(\" %\");\n  \n  // DHT11 sampling rate is 1HZ.\n  delay(1000);\n}\n\n\n", "step_imgs": [], "step_title": "Step 4: Temperature & Humidity Sensor - Test Code"}, {"step": 5, "steps_text": "You have been provided code examples for the LCD Screen and Temperature sensor.  Your final step for the lab is to integrate these two examples so that your temperature readings will appear on the LCD Screen.  You can alter the message so that it can appear on the two available lines for the LCD screen.", "step_imgs": [], "step_title": "Step 5: Integration Problem"}], "channel": "Arduino"}, {"category": "technology", "description": "Este programa gr\u00e1fica la curva que existe entre la relaci\u00f3n de presi\u00f3n y volumen en los gases. Adem\u00e1s este programa encuentra el \u00e1rea bajo la curva que representa el trabajo. ", "title": "Como Gr\u00e1ficar La Relaci\u00f3n Entre Volumen Y Presi\u00f3n De Los Gases Y Como Hallar El \u00c1rea Bajo La Curva En Python", "url": "https://www.instructables.com/id/Como-Gr%C3%A1ficar-La-Relaci%C3%B3n-Entre-Volumen-Y-Presi%C3%B3n-/", "section": "technology", "steps": [{"step": 1, "steps_text": "Crea un plan de como hacer el c\u00f3digo", "step_imgs": [], "step_title": "Step 1:  Haga Un Plan"}, {"step": 2, "steps_text": "Debes importar las librer\u00edas llamadas numpy y matplotlib.pyplot. Esto es porque sin ellas el c\u00f3digo no funcionar\u00eda.import numpy as np<br>import matplotlib.pyplot as plt", "step_imgs": ["https://cdn.instructables.com/FFD/ORWU/IVO4XLR6/FFDORWUIVO4XLR6.LARGE.jpg"], "step_title": "Step 2: Importar Librer\u00edas "}, {"step": 3, "steps_text": "Usa una lista de datos. Esa lista debes asignarla a una variable para que se guarden. Luego esa variable a\u00f1\u00e1dela a dos listas, una para el eje x y otra para el eje y. data=np.loadtxt(\"gases.txt\",float)<br>x=data[0:1000,1]\ny=data[0:1000,0]", "step_imgs": ["https://cdn.instructables.com/FWK/V8WS/IVO4XLWT/FWKV8WSIVO4XLWT.LARGE.jpg"], "step_title": "Step 3: Crea Una Variable Que Contenga Los Datos a Gr\u00e1ficar Y A\u00f1\u00e1delos a Una Lista"}, {"step": 4, "steps_text": "Para el \u00e1rea debes crear un for i in range. Debes limitarlo a el numero de datos que tienes. Luego al ser una curva, debes hacer que el programa calcule el \u00e1rea de trapecio peque\u00f1os y se sumen estas \u00e1reas. El \u00e1rea de un trapecio es sumando las dos bases, multiplicarla por la altura y dividendo en dos. Para que haga varios trapecios debes decir que se coja el dato inicial, que se sume el siguiente y se divida en 2. Luego ese valor multiplicarlo por el dato inicial restado al dato siguiente. Esto lo debes anexar a una lista vac\u00eda que puedes llamar \u00e1rea. area=[]<br>for i in range(0,251):\n    area.append((((y[i+1]+y[i])/2)*(x[i+1]-x[i])))", "step_imgs": ["https://cdn.instructables.com/FO4/BES8/IVO4XM7Y/FO4BES8IVO4XM7Y.LARGE.jpg"], "step_title": "Step 4: Encuentra El \u00c1rea"}, {"step": 5, "steps_text": "Para imprimir los resultados de tu \u00e1rea, debes imprimir la suma de cada \u00e1rea y dividirla entre mil, pues los datos est\u00e1n en litros y se necesitan en metro c\u00fabico. print  sum(area)/1000, \"Julios\"<br>", "step_imgs": ["https://cdn.instructables.com/F1Y/TK2V/IVO4XMCD/F1YTK2VIVO4XMCD.LARGE.jpg"], "step_title": "Step 5: Imprime El \u00c1rea"}, {"step": 6, "steps_text": "Para gr\u00e1ficar los resultados es muy sencillo. Debes escribir plt.plot y entre par\u00e9ntesis las listas en las que tienes guardados los datos con los que vas a trabajar. Finalmente escribes plt.show para que se pueda visualizar la gr\u00e1fica. plt.plot(x,y, \"r-\")<br>plt.fill_between(x,y)\nplt.show()", "step_imgs": ["https://cdn.instructables.com/FM4/6W4H/IVO4XMIL/FM46W4HIVO4XMIL.LARGE.jpg"], "step_title": "Step 6: Gr\u00e1fica Los Resultados"}, {"step": 7, "steps_text": "El resultado final deber\u00eda ser algo as\u00ed: import numpy as np<br>import matplotlib.pyplot as pltdata=np.loadtxt(\"gases.txt\",float)\nx=data[0:1000,1]\ny=data[0:1000,0]area=[]\nfor i in range(0,251):\n    area.append((((y[i+1]+y[i])/2)*(x[i+1]-x[i])))print  sum(area)/1000, \"Julios\"plt.plot(x,y, \"r-\")\nplt.fill_between(x,y)\nplt.show()", "step_imgs": ["https://cdn.instructables.com/FLN/YWCY/IVO4XNH3/FLNYWCYIVO4XNH3.LARGE.jpg"], "step_title": "Step 7: Resultado Final"}], "channel": "Tools"}, {"category": "technology", "description": "This was created using Energia.\nMainly for my use as a practical device for learning to program microcontrollers. This is how far I've made it after reviewing the tips from this thread - thanks 43oh.com guys.\nI would like to add some form of wireless communication to another microcontroller, one device transmitting the data to another device hosting the LCD. I have not decided if it will be infrared or radio frequency (I do have a CC110L set).\nThis is a working unit at this time. I am not sure I have optimized this very well. I am also not sure if I should have used 'float' as the variable type.\nAny and all comments, suggestions, or advice are very much welcome. Thank you.", "title": "LCD Thermo-Meter Project Using TI MSP-EXP430FR5739 FraunchPad", "url": "https://www.instructables.com/id/LCD-Thermo-Meter-Project-using-TI-MSP-EXP430FR5739/", "section": "technology", "steps": [{"step": 1, "steps_text": "/*\nMarch 02 2013\nBased on an Arduino project by DJ Mentzik.\nEnhanced and modified by WWC.\nFurther enhanced by Vic Velcro.\nConverted from Arduino to MSPEXP430FR5739 (FraunchPad) by Vic Velcro.\nhttp://www.vicstricks.com/forum/viewforum.php?f=16\nUse and modify as needed.\nDisplays current temperature from 8 sample average in C and F, Max in C, and Min in C.\nTo wire your HP44780 based LCD screen to your FraunchPad, connect the following pins:\nLCD Pin 4 to digital pin 3 or P2_5\nLCD Pin 6 to digital pin 4 or P2_6\nLCD Pin 11 to digital pin 20 or P1_3\nLCD Pin 12 to digital pin 15 or P1_2\nLCD Pin 13 to digital pin 14 or P1_1\nLCD Pin 14 to digital pin 13 or P1_0\nAdditionally, wire a 10K pot to +5V and GND, with it's wiper (output) to LCD screen's VO pin (pin3) to adjust contrast of characters.\nTo drive the backlighting, wire a 270 ohm resistor from FraunchPad VCC to LCD pin 15.\nThe temperature sensor is an LM335Z. The (adj) leg is not used for this project. Locate a datasheet if you are not familiar with device.\nWhile pins are in breadboard and flat side is away from you, the left leg is grounded and the right leg is un-used.\nThe center leg is connected to pin A0 which is also marked P1_5. Additionally, the center pin connects to a resistor of 2.2k ohms and then\nthe opposite leg of the resistor goes to VCC of the FraunchPad.\n*/\n#if defined(__MSP430FR5739__)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // FraunchPad !ONLY!\n#include \"Energia.h\"\n#else\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // no good\n#error Unsupported Platform. Only FraunchPad.\n#endif\n#include <LiquidCrystal.h>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // include the LCD driver library\nint tempPin = A0;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Declaring the Analog input to be 0 (A0) of FraunchPad board.\nint i;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //variable to delineate sample iteration sequence\nfloat VCC=3.63;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //declare board voltage\nfloat tempRAW;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //declare variables\nfloat tempK;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 //variable for holding Kelvin temp (floating for decimal precision\nfloat tempC = 0;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // variable for holding Celcius temp (floating for decimal precision)\nfloat tempF = 0;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // variable for holding Fahrenheit temp\nfloat samples[8];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Array to hold 8 samples for Average temp calculation\nfloat maxi = 0,mini = 100;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Max/Min temperature variables with initial values. LM335 in simple setup only measures Temp above 0.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\nLiquidCrystal lcd(P2_5, P2_6, P1_3, P1_2, P1_1, P1_0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // initialize the library with the numbers of the interface pins\nvoid setup()\n{\nSerial.begin(9600);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Opens serial port, sets data rate to 9600 bps\nlcd.begin(16, 2);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set up the LCD's number of columns and rows:\nSerial.println(\"\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Blank line for spacing in the serial monitor\nSerial.println(\"Thermo-Meter project by Vic Velcro.\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to Serial monitor\nSerial.print(\"Free to modify and use as needed.\");\nSerial.println(\"\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Blank line for spacing in the serial monitor\nlcd.clear();\nlcd.setCursor(2, 0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column, row)\nlcd.print(\"Vic's Tricks\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to LCD\nlcd.setCursor(2, 1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column,row)\u00a0\nlcd.print(\"Thermo-Meter\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to LCD\ndelay(10000);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Delay to read text\nlcd.clear();\nlcd.setCursor(1, 0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column, row)\nlcd.print(\"* On The Web *\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to LCD\nlcd.setCursor(1, 1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column,row)\u00a0\nlcd.print(\"vicstricks.com\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to LCD\ndelay(10000);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Delay to read text\nlcd.clear(); // clear LCD display\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Clear the display\nlcd.setCursor(1, 0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column, row)\nlcd.print(\" Average Temp \");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to LCD\nlcd.setCursor(1, 1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column, row)\u00a0\nlcd.print(\"\u00a0 Displayed\u00a0 \");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to LCD\ndelay(5000);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Delay to read text\nlcd.clear();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Clear LCD\n}\nvoid loop()\n{\nSerial.println(\"\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Blank line for spacing in the serial monitor\nSerial.print(\"LM335Z Raw data: \");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to Serial monitor\u00a0\nSerial.println(analogRead(tempPin));\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Displays on serial monitor the sampled value before conversion to real Temperature reading\nSerial.println(\"\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Blank line for spacing in the serial monitor\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Start of calculations FOR loop.\nfor(i = 0;i<=7;i++){\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // gets 8 samples of temperature\nsamples[i] = analogRead(tempPin);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // conversion math of LM335 sample to readable temperature Kelvin and stores result to samples array.\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // 5v is normal supply volts of LM335. Change appropriatelly to have correct measurement. My case is 3.63 Volts.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // If powered from USB then use value 3.6v.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // The voltage is critical for accurate readings\nSerial.println(samples[i]);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print samples [i] to serial monitor\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // LCD note: line 1 is the second row, since counting begins with\nlcd.clear(); // clear LCD display\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Clear the display\nlcd.setCursor(0, 0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column 0, row 0)\nlcd.print(\"Current Reading: \");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to LCD\nlcd.setCursor(0, 1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column 1, row 1)\nlcd.print(\"RAW SAMPLES\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to LCD\nlcd.setCursor(12, 1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column 12, row 1)\nlcd.print(samples[i]);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // print current RAW sample iteration to LCD\ntempRAW = tempRAW + samples[i];\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // calculate for RAW samples average\ndelay(800);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // wait a bit\n}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // END of FOR loop\nSerial.println(\"\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Blank line for spacing in the serial monitor\nSerial.println(\"\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Blank line for spacing in the serial monitor\ntempK = ((((tempRAW/8.0)/1023)*VCC)*100);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Conversion formula for combined samples to Averaged Kelvin\ntempC = (tempK-273.15);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Convert Kelvin to Celcius\ntempF = (((tempK-273.15) * 1.8) + 32);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Convert Kelvin to Fahrenheit\nif(tempC > maxi) {maxi = tempC;}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // update max temperature observed\nif(tempC < mini) {mini = tempC;}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // update min temperature observed\nSerial.println(\"New measurement:\");\nSerial.print(\" Average Temperature in Celcius is \" );\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to Serial monitor\nSerial.println(tempC);//send the data to the computer\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Send the data to the computer\nSerial.print(\" Average Temperature in Fahrenheit is \" );\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to Serial monitor\nSerial.println(tempF);//send the data to the computer\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Send the data to the computer\nSerial.print(\" MAX Temperature in Celcius is \" );\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to Serial monitor\nSerial.println(maxi);//send the data to the computer\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Send the data to the computer\nSerial.print(\" MIN Temperature in Celcius is \" );\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to Serial monitor\nSerial.println(mini);//send the data to the computer\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Send the data to the computer\nlcd.clear();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Clear the display\nlcd.setCursor(0, 0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column 0, row 0)\nlcd.print(\"Celcius\u00a0\u00a0\u00a0 \");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to LCD\nlcd.setCursor(12, 0);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column 12, line 0)\nlcd.print(tempC);\nlcd.setCursor(0, 1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column 0, line 1)\nlcd.print(\"Fahrenheit \");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Print text to LCD\nlcd.setCursor(12, 1);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set LCD cursor position (column 12, line 1)\nlcd.print(tempF);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Send the data to the LCD\ndelay(5000);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Wait after temp display to LCD screen befor starting the loop again.\ntempRAW = 0;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 // Set tempRAW to 0 before repeating the loop.\n}", "step_imgs": ["https://cdn.instructables.com/FVG/DIFS/HDXLXJZM/FVGDIFSHDXLXJZM.LARGE.jpg", "https://cdn.instructables.com/FIL/1LXP/HDXMH00Y/FIL1LXPHDXMH00Y.LARGE.jpg", "https://cdn.instructables.com/FXC/5L72/HDXMH00Z/FXC5L72HDXMH00Z.LARGE.jpg"], "step_title": "Step 1: THE CODE"}], "channel": "Microcontrollers"}]